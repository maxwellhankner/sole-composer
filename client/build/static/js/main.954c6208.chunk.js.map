{"version":3,"sources":["context/UserProvider.js","components/NewDesignButton/NewDesignButton.js","components/FeaturedDesignCard/FeaturedDesignCard.js","components/MyDesignTiles/MyDesignTiles.js","helpers/fetchHelpers.js","pages/Landing/Landing.js","components/LoadingSpinner/LoadingSpinner.js","components/Scene/Scene.js","helpers/uploadImage.js","helpers/takeScreenshot.js","helpers/convertAwsLink.js","components/DesignPreview/DesignPreview.js","components/AddLayerType/AddLayerType.js","helpers/convertPartNames.js","components/CurrentColors/CurrentColors.js","components/CustomPointer/CustomPointer.js","components/CustomColor/CustomColor.js","components/ColorPicker/ColorPicker.js","components/GraphicEditor/GraphicEditor.js","components/PartSelector/PartSelector.js","components/LayerOverview/LayerOverview.js","components/MaskTypes/MaskTypes.js","components/PartList/PartList.js","components/CurrentGraphics/CurrentGraphics.js","components/GraphicPicker/GraphicPicker.js","components/LayersView/Constants.js","components/LayersView/LayersView.js","components/ChangeDesignName/ChangeDesignName.js","components/ChangeBaseColor/ChangeBaseColor.js","components/Interface/Interface.js","canvasFunctions/create/createCanvasFunctions.js","canvasFunctions/create/createColorLayerCanvas.js","canvasFunctions/create/createGraphicLayerCanvas.js","canvasFunctions/create/createMaskLayerCanvas.js","canvasFunctions/create/createOverlayLayerCanvas.js","canvasFunctions/create/initialFunctions.js","canvasFunctions/update/partChangeManager.js","canvasFunctions/update/overlayChangeManager.js","canvasFunctions/update/canvasObjectToTextureCanvas.js","components/DesignerContainer/DesignerContainer.js","pages/Designer/Designer.js","components/Login/Login.js","components/Profile/Profile.js","components/NoPage/NoPage.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","method","credentials","then","res","json","data","err","Provider","value","NewDesignButton","userData","history","useHistory","className","onClick","push","FeaturedDesignCard","props","_id","title","configId","author","screenshot","src","alt","modelName","firstName","MyDesignTiles","myDesigns","map","design","key","to","simpleFetch","link","designFetch","body","headers","JSON","stringify","Landing","useContext","featured","setFeatured","setMyDesigns","process","LoadingSpinner","id","Scene","texture","initialLoaded","camera","setCamera","threeCanvasRef","useRef","renderer","setRenderer","newMaterial","setNewMaterial","isLoading","setIsLoading","createMaterial","Promise","resolve","aoimg","Image","onload","ao","THREE","flipY","aoMap","a","mat","antialias","preserveDrawingBuffer","alpha","createMat","setSize","current","appendChild","domElement","position","z","y","scene","light","add","controls","OrbitControls","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enablePan","update","manager","onLoad","GLTFLoader","load","configData","source","gltf","traverse","node","isMesh","material","model","scale","set","rotation","render","requestAnimationFrame","cancelAnimationFrame","dispose","ref","uploadImage","file","isNew","formData","FormData","append","takeScreenshot","fileName","setTimeout","dataUrl","document","getElementById","firstElementChild","toDataURL","blobBin","atob","split","array","i","length","charCodeAt","blob","Blob","Uint8Array","type","name","lastModifiedDate","Date","File","convertAwsLink","url","awsFileName","DesignPreview","handleViewChange","canSave","setCanSave","loading","setLoading","handleSaveDesign","imageName","image","outlineData","window","location","href","style","color","baseColor","AddLayerType","currentPartName","handleAddLayer","setLayersView","layerTypes","types","handleConvertPartName","partName","converted","join","charAt","toUpperCase","substr","CurrentColors","colorsArray","handleColorChange","backgroundColor","CustomPointer","CustomPicker","hex","hsl","hsv","onChange","styles","hue","height","marginBottom","overflow","saturation","width","input","border","borderRadius","fontSize","WebkitAppearance","WebkitBorderRadius","paddingLeft","boxShadow","display","swatch","background","inputContainer","pointer","ColorPicker","currentLayer","handlePartChangeManager","currentColor","setCurrentColor","setColorsArray","colors","property","parts","layer","layers","thisColor","includes","overlays","getDesignColors","newColor","layerIndex","floor","random","toString","onChangeComplete","GraphicEditor","graphicVisualCanvas","handleUpdateGraphicVisualCanvas","handleMoveGraphic","direction","distance","div","innerHTML","placeGraphicVisual","PartSelector","currentPart","setCurrentPart","setFocusLayer","numberOfParts","partsArray","arrayOfParts","handlePartChange","LayerOverview","allLayers","focusLayer","numberOfLayers","setCurrentLayer","handleCurrentLayer","handleMoveLayer","tempDesign","cloneDeep","tempElement","e","target","handleFocusLayer","toLowerCase","objectFit","indexOf","handleDeleteLayer","MaskTypes","handleAddMaskLayer","maskTypes","PartList","part","CurrentGraphics","graphicsArray","handleAddGraphicLayer","graphic","GraphicPicker","LayerDictionary","warning","setWarning","setGraphicsArray","graphics","thisGraphic","getGraphicsArray","onFileChange","files","size","toFixed","htmlFor","accept","LayersView","layersView","Object","keys","partsObject","Component","propsToPassDown","layerType","maskType","maskLink","ChangeDesignName","setDesign","defaultValue","newTitle","startCase","handleUpdateDesignName","ChangeBaseColor","handleUpdateBaseColor","setBaseColor","updateBaseColor","Interface","view","setView","viewChange","createCanvas","canvasSize","canvas","createElement","canvasCTX","getContext","fillStyle","fillRect","createColorLayerCanvas","mask","layerCanvas","layerCanvasCTX","maskImg","drawImage","globalCompositeOperation","createGraphicLayerCanvas","x","graphicImg","graphicWidth","graphicHeight","graphicPythagorean","round","sqrt","pythagoreanCanvas","pythagoreanCTX","translate","rotate","newX","newY","newScale","createMaskLayerCanvas","createOverlayLayerCanvas","overlayCanvas","translations","createCanvasObjectPart","designLayers","canvasLayers","thisLayer","createBaseColorCanvasObjectPart","designObjectToCanvasObject","reject","canvasObject","createAllParts","overlayCanvasObjectToTextureCanvas","overlayCanvasObject","overlayCanvasCTX","graphicCTX","clearRect","updateGraphicVisualCanvas","updateLayer","layerObject","textureCanvas","baseColorCanvasObject","redrawCanvasObjectPart","canvasObjectPart","addLayerToCanvasObject","newLayerCanvas","deleteLayerFromCanvasObject","splice","moveLayerInCanvasObject","textureCanvasCTX","divider","needsUpdate","overlayChangeManager","changeObject","updateOverlayLayer","effectedParts","overlayParts","addLayerToOverlayCanvasObject","slice","moveLayerInOverlayCanvasObject","deleteLayerFromOverlayCanvasObject","redrawOverlayCanvasObjectPart","canvasObjectToTextureCanvas","finalCanvasCTX","DesignerContainer","designSpec","innerOverlayCanvas","outerOverlayCanvas","setInitialLoaded","canvasObjectRef","overlaysCanvasObjectRef","baseColorCanvasObjectRef","newCanvas","buildTexture","partChangeManager","Designer","setDesignSpec","setGraphicVisualCanvas","setInnerOverlayCanvas","setOuterOverlayCanvas","setTextureCanvas","setTexture","useParams","createGraphicVisualCanvas","createTexture","Login","open","Profile","email","NoPage","App","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.954c6208.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('/auth/getsession', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n        } else {\r\n          setUser(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <context.Provider value={user}>{children}</context.Provider>;\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport './NewDesignButton.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NewDesignButton({ userData }) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='new-design-button standard-button'\r\n      onClick={() => handleClick()}\r\n    >\r\n      <button>N E W &nbsp; D E S I G N</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDesignButton;\r\n","import React from 'react';\r\nimport './FeaturedDesignCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction FeaturedDesignCard({ props, userData }) {\r\n  const { _id, title, configId, author, screenshot } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer/${_id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='featureddesigncard-container' onClick={() => handleClick()}>\r\n      <div className='featureddesigncard-image'>\r\n        <img src={`api/assets/images/${screenshot}`} alt='feature-design' />\r\n      </div>\r\n\r\n      <p className='featureddesigncard-title'>{title}</p>\r\n      <p className='featureddesigncard-model'>{configId.modelName}</p>\r\n      <p className='featureddesigncard-author'>{author.firstName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedDesignCard;\r\n","import React from 'react';\r\nimport './MyDesignTiles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyDesignTiles({ myDesigns }) {\r\n  return (\r\n    <div className='mydesigntiles-container'>\r\n      <div>\r\n        <p className='landing-section-label'>MY DESIGNS</p>\r\n      </div>\r\n      <div className='my-designs-grid'>\r\n        {myDesigns.map((design, key) => (\r\n          <Link\r\n            key={key}\r\n            to={`/designer/${design._id}`}\r\n            className='link-to-designer'\r\n          >\r\n            <div className='my-design-tile'>\r\n              <img\r\n                src={`/api/assets/images/${design.screenshot}`}\r\n                alt='my-design-preview'\r\n              />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyDesignTiles;\r\n","export const simpleFetch = (link, method) => {\r\n  return fetch(link, { method: method });\r\n};\r\n\r\nexport const designFetch = (link, method, body) => {\r\n  return fetch(link, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './Landing.css';\r\nimport NewDesignButton from '../../components/NewDesignButton/NewDesignButton';\r\nimport FeaturedDesignCard from '../../components/FeaturedDesignCard/FeaturedDesignCard';\r\nimport MyDesignTiles from '../../components/MyDesignTiles/MyDesignTiles';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Landing() {\r\n  const userData = useContext(UserProvider.context);\r\n  const [featured, setFeatured] = useState();\r\n  const [myDesigns, setMyDesigns] = useState();\r\n\r\n  useEffect(() => {\r\n    simpleFetch('/api/featured', 'GET')\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatured(data));\r\n\r\n    if (userData) {\r\n      simpleFetch('/api/outlines/mydesigns', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => setMyDesigns(data));\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-header'>\r\n        <p>\r\n          <strong>Sole</strong> Composer\r\n        </p>\r\n        {userData ? (\r\n          <Link to='/profile'>{userData.firstName}</Link>\r\n        ) : (\r\n          <Link to='/login'>Login</Link>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <p className='basic-paragraph'>\r\n          You are running {process.env.NODE_ENV}\r\n        </p>\r\n      </div>\r\n      {userData ? null : (\r\n        <div>\r\n          <p className='basic-paragraph'>Please Login</p>\r\n        </div>\r\n      )}\r\n      <div className='landing-content'>\r\n        <div className='featured-designs-container'>\r\n          <p className='landing-section-label'>FEATURED</p>\r\n          <div className='feature-designs'>\r\n            {featured\r\n              ? featured.featured.map((design, key) => (\r\n                  <FeaturedDesignCard\r\n                    props={design}\r\n                    userData={userData}\r\n                    key={key}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <NewDesignButton userData={userData} />\r\n        {myDesigns && <MyDesignTiles myDesigns={myDesigns} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div id='loading-screen'>\r\n      <div id='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Scene.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Scene = ({ design, texture, initialLoaded, camera, setCamera }) => {\r\n  const threeCanvasRef = useRef(null);\r\n  const [renderer, setRenderer] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const createMaterial = (texture) => {\r\n    return new Promise((resolve) => {\r\n      const aoimg = new Image();\r\n      aoimg.src = '/api/assets/images/ao_diffuse.png';\r\n\r\n      aoimg.onload = () => {\r\n        const ao = new THREE.CanvasTexture(aoimg);\r\n        ao.flipY = false;\r\n        resolve(\r\n          new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            aoMap: ao,\r\n          })\r\n        );\r\n      };\r\n    });\r\n  };\r\n\r\n  // Initialize Renderer and newMaterial\r\n  useEffect(() => {\r\n    setRenderer(\r\n      new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n      })\r\n    );\r\n    async function createMat() {\r\n      const mat = await createMaterial(texture);\r\n      setNewMaterial(mat);\r\n    }\r\n    createMat();\r\n  }, [texture]);\r\n\r\n  useEffect(() => {\r\n    //===================================================== camera\r\n    if (renderer && newMaterial) {\r\n      renderer.setSize(2048, 2048);\r\n      threeCanvasRef.current.appendChild(renderer.domElement);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 7.5;\r\n      camera.position.y = 0;\r\n      setCamera(camera);\r\n    }\r\n  }, [renderer, newMaterial, setCamera]);\r\n\r\n  // Build threeJS Scene\r\n  useEffect(() => {\r\n    if (renderer && newMaterial && camera) {\r\n      //===================================================== scene\r\n      const scene = new THREE.Scene();\r\n      // scene.background = new THREE.Color(0xf9f9f9);\r\n\r\n      //===================================================== lights\r\n      const light = new THREE.AmbientLight(0xffffff, 1);\r\n      scene.add(light);\r\n\r\n      //===================================================== orbit controls\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.maxDistance = 10;\r\n      controls.minDistance = 4;\r\n      controls.minPolarAngle = Math.PI * (1 / 5);\r\n      controls.maxPolarAngle = Math.PI * (6 / 7);\r\n      controls.enablePan = false;\r\n      controls.update();\r\n\r\n      //===================================================== loading mananger\r\n      const manager = new THREE.LoadingManager();\r\n      manager.onLoad = () => {\r\n        setIsLoading(false);\r\n      };\r\n\r\n      //===================================================== model\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(`/api/assets/models/${design.configData.source}`, (gltf) => {\r\n        gltf.scene.traverse((node) => {\r\n          if (node.isMesh) node.material = newMaterial;\r\n        });\r\n        const model = gltf.scene;\r\n        model.scale.set(0.35, 0.35, 0.35);\r\n        model.position.y = -1;\r\n        model.rotation.y = -95 * (Math.PI / 180);\r\n        scene.add(model);\r\n      });\r\n\r\n      //===================================================== animate\r\n      const render = () => {\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n        controls.update();\r\n      };\r\n\r\n      render();\r\n\r\n      //===================================================== cleanup\r\n      const cleanup = () => {\r\n        cancelAnimationFrame(render);\r\n        controls.dispose();\r\n      };\r\n\r\n      return cleanup;\r\n    }\r\n  }, [newMaterial, renderer, camera, design.configData.source]);\r\n\r\n  return (\r\n    <div\r\n      className='scene-container'\r\n      id='scene-container-id'\r\n      ref={threeCanvasRef}\r\n    >\r\n      {!isLoading && initialLoaded ? null : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","export const uploadImage = (file, isNew) => {\r\n  const formData = new FormData();\r\n  if (isNew) {\r\n    formData.append('image', file, 'newImage');\r\n  } else {\r\n    formData.append('image', file);\r\n  }\r\n\r\n  return fetch('/api/assets/uploadimage', {\r\n    method: 'POST',\r\n    body: formData,\r\n  }).then((res) => res.json());\r\n};\r\n","export const takeScreenshot = (camera, fileName) => {\r\n  return new Promise((resolve) => {\r\n    camera.position.set(0, 0, 7.5);\r\n    setTimeout(() => {\r\n      const threeCanvas = document.getElementById('scene-container-id')\r\n        .firstElementChild;\r\n      const dataUrl = threeCanvas.toDataURL('image/png');\r\n\r\n      var blobBin = atob(dataUrl.split(',')[1]);\r\n      var array = [];\r\n      for (var i = 0; i < blobBin.length; i++) {\r\n        array.push(blobBin.charCodeAt(i));\r\n      }\r\n      var blob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n      blob.name = 'theBlob';\r\n      blob.lastModifiedDate = new Date();\r\n      var file = new File([blob], fileName, { type: 'image/png' });\r\n      resolve(file);\r\n    }, 500);\r\n  });\r\n};\r\n","export const convertAwsLink = (url) => {\r\n  let awsFileName = url.split('/');\r\n  awsFileName = awsFileName[awsFileName.length - 1];\r\n  return awsFileName;\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport './DesignPreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { takeScreenshot } from '../../helpers/takeScreenshot';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport { designFetch } from '../../helpers/fetchHelpers';\r\nimport {\r\n  FaPen,\r\n  FaLayerGroup,\r\n  FaTrashAlt,\r\n  FaSave,\r\n  FaTimes,\r\n  FaCamera,\r\n  FaSquare,\r\n} from 'react-icons/fa';\r\nimport UserProvider from '../../context/UserProvider';\r\n\r\nfunction DesignPreview({\r\n  handleViewChange,\r\n  design,\r\n  camera,\r\n  canSave,\r\n  setCanSave,\r\n}) {\r\n  const userData = useContext(UserProvider.context);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSaveDesign = async () => {\r\n    setCanSave(false);\r\n    // if new design\r\n    if (!design.author) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, 'newImage');\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch('/api/outlines', 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n    // if design is mine\r\n    else if (design.author === userData._id) {\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, false).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: design.author,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/${design._id}`, 'PUT', body);\r\n      });\r\n    }\r\n    // if design is not mine\r\n    else {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/`, 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteDesign = () => {\r\n    if (userData._id === design.author) {\r\n      fetch(`/api/outlines/${design._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const handleMoveCamera = () => {\r\n    camera.position.set(0, 0, 7.5);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div className='design-preview-info'>\r\n          <div className='design-title-container'>\r\n            <p className='design-title'>{design.title}</p>\r\n            <button\r\n              className='edit-design-title-button'\r\n              onClick={() => handleViewChange('ChangeDesignName')}\r\n            >\r\n              <FaPen />\r\n            </button>\r\n          </div>\r\n          <p className='design-model'>{design.model}</p>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => handleViewChange('ChangeBaseColor')}\r\n        >\r\n          <div\r\n            className='design-preview-button-icon'\r\n            style={{ color: design.outlineData.baseColor }}\r\n          >\r\n            <FaSquare />\r\n          </div>\r\n          <button>BaseColor</button>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => handleViewChange('Layers')}\r\n        >\r\n          <div className='design-preview-button-icon'>\r\n            <FaLayerGroup />\r\n          </div>\r\n          <button>Layers</button>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => {\r\n            handleMoveCamera();\r\n          }}\r\n        >\r\n          <div className='design-preview-button-icon'>\r\n            <FaCamera />\r\n          </div>\r\n          <button>Reset Camera</button>\r\n        </div>\r\n        {canSave ? (\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleSaveDesign();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaSave />\r\n            </div>\r\n            <button>Save</button>\r\n          </div>\r\n        ) : (\r\n          <div className='design-preview-button save-deactivated'>\r\n            <div className='design-preview-button-icon'>\r\n              <FaSave />\r\n            </div>\r\n            <button>Save</button>\r\n          </div>\r\n        )}\r\n        {design.author === userData._id && (\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleDeleteDesign();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaTrashAlt />\r\n            </div>\r\n            <button>Delete</button>\r\n          </div>\r\n        )}\r\n        <Link to='/'>\r\n          <div className='design-preview-button'>\r\n            <div className='design-preview-button-icon'>\r\n              <FaTimes />\r\n            </div>\r\n            <button>Exit</button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesignPreview;\r\n","import React from 'react';\r\nimport './AddLayerType.css';\r\n\r\nfunction AddLayerType({ props }) {\r\n  const { design, currentPartName, handleAddLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Layer Type</p>\r\n      </div>\r\n      {design.configData.layerTypes[currentPartName].types.map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          {type === 'Mask' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('MaskTypes');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : type === 'Graphic' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('GraphicPicker');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                handleAddLayer(type);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLayerType;\r\n","export const handleConvertPartName = (partName) => {\r\n  let converted = partName.split(/(?=[A-Z])/).join(' ');\r\n  return converted.charAt(0).toUpperCase() + converted.substr(1);\r\n};\r\n","import React from 'react';\r\nimport './CurrentColors.css';\r\n\r\nfunction CurrentColors({ colorsArray, handleColorChange }) {\r\n  return (\r\n    <div className='current-colors-container'>\r\n      <div className='current-colors-scroll'>\r\n        {colorsArray.map((color, i) => (\r\n          <button\r\n            key={i}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handleColorChange(color)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentColors;\r\n","import React from 'react';\r\nimport './CustomPointer.css';\r\n\r\nconst CustomPointer = () => {\r\n  return <div className='custom-pointer'></div>;\r\n};\r\n\r\nexport default CustomPointer;\r\n","import React from 'react';\r\nimport './CustomColor.css';\r\nimport { CustomPicker } from 'react-color';\r\nimport CustomPointer from '../CustomPointer/CustomPointer';\r\nimport {\r\n  EditableInput,\r\n  Hue,\r\n  Saturation,\r\n} from 'react-color/lib/components/common';\r\n\r\nexport const CustomColor = ({ hex, hsl, hsv, onChange }) => {\r\n  const styles = {\r\n    hue: {\r\n      height: 15,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    saturation: {\r\n      width: '100%',\r\n      height: 120,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    input: {\r\n      width: '50%',\r\n      height: '30px',\r\n      border: 'none',\r\n      borderRadius: 'none',\r\n      fontSize: '.7rem',\r\n      // border: `1px solid ${hex}`,\r\n      WebkitAppearance: 'none',\r\n      WebkitBorderRadius: 0,\r\n      paddingLeft: 10,\r\n      boxShadow: 'none',\r\n      display: 'block',\r\n    },\r\n    swatch: {\r\n      width: '100%',\r\n      height: '100%',\r\n      background: hex,\r\n    },\r\n    inputContainer: {\r\n      background: hex,\r\n    },\r\n  };\r\n  return (\r\n    <div className='custom-color'>\r\n      <div style={styles.hue}>\r\n        <Hue hsl={hsl} onChange={onChange} pointer={CustomPointer} />\r\n      </div>\r\n\r\n      <div style={styles.saturation}>\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          onChange={onChange}\r\n          pointer={CustomPointer}\r\n        />\r\n      </div>\r\n\r\n      <div className='color-input' style={styles.inputContainer}>\r\n        <EditableInput\r\n          style={{ input: styles.input }}\r\n          className='custom-color-input'\r\n          value={hex}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(CustomColor);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport CurrentColors from '../CurrentColors/CurrentColors';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ColorPicker({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    handlePartChangeManager,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const [currentColor, setCurrentColor] = useState('#ffffaa');\r\n  const [colorsArray, setColorsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDesignColors = () => {\r\n      const colors = [];\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          const type = design.outlineData.parts[property].layers[layer].type;\r\n          if (type === 'color' || type === 'mask') {\r\n            const thisColor =\r\n              design.outlineData.parts[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type === 'color'\r\n          ) {\r\n            const thisColor =\r\n              design.outlineData.overlays[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const baseColor = design.outlineData.baseColor;\r\n\r\n      if (!colors.includes(baseColor)) {\r\n        colors.push(baseColor);\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    setColorsArray(getDesignColors());\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      setCurrentColor(\r\n        design.outlineData.overlays[currentPartName].layers[currentLayer].color\r\n      );\r\n    } else {\r\n      setCurrentColor(\r\n        design.outlineData.parts[currentPartName].layers[currentLayer].color\r\n      );\r\n    }\r\n  }, [design, currentPartName, currentLayer, setColorsArray]);\r\n\r\n  const handleColorChange = (color) => {\r\n    setCanSave(true);\r\n    const newColor = color.hex || color;\r\n    setCurrentColor(color);\r\n    handlePartChangeManager({\r\n      type: 'color-changed',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      newColor,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='color-picker-container'>\r\n      <div className='view-title'>\r\n        <p>{handleConvertPartName(currentPartName)}</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CurrentColors\r\n          colorsArray={colorsArray}\r\n          handleColorChange={handleColorChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomColor\r\n          color={currentColor}\r\n          onChangeComplete={handleColorChange}\r\n        />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowsAlt,\r\n  FaArrowUp,\r\n  FaCompressArrowsAlt,\r\n  FaRedoAlt,\r\n  FaUndoAlt,\r\n} from 'react-icons/fa';\r\nimport './GraphicEditor.css';\r\n\r\nfunction GraphicEditor({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    graphicVisualCanvas,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleMoveGraphic = (direction, distance) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'graphic-moved',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      direction,\r\n      distance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const placeGraphicVisual = () => {\r\n      let div = document.getElementById('graphic-visual-container');\r\n      div.innerHTML = '';\r\n      div.appendChild(graphicVisualCanvas);\r\n    };\r\n    placeGraphicVisual();\r\n    handleUpdateGraphicVisualCanvas(currentPartName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='graphic-editor-container'>\r\n      <div className='graphic-editor-upper'>\r\n        <div className='graphic-editor-buttons' id='edit-buttons-div'>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='up-button'\r\n            onClick={() => handleMoveGraphic('vert', -30)}\r\n          >\r\n            <FaArrowUp />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='down-button'\r\n            onClick={() => handleMoveGraphic('vert', 30)}\r\n          >\r\n            <FaArrowDown />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='left-button'\r\n            onClick={() => handleMoveGraphic('hor', -30)}\r\n          >\r\n            <FaArrowLeft />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='right-button'\r\n            onClick={() => handleMoveGraphic('hor', 30)}\r\n          >\r\n            <FaArrowRight />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-up-button'\r\n            onClick={() => handleMoveGraphic('scale', 1.1)}\r\n          >\r\n            <FaArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-down-button'\r\n            onClick={() => handleMoveGraphic('scale', 0.9)}\r\n          >\r\n            <FaCompressArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='clockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', 5)}\r\n          >\r\n            <FaRedoAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='counterclockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', -5)}\r\n          >\r\n            <FaUndoAlt />\r\n          </button>\r\n        </div>\r\n        <div id='graphic-visual-container'></div>\r\n      </div>\r\n      <div className='graphic-editor-lower'>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => handleMoveGraphic('reset', 0)}>Reset</button>\r\n        </div>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicEditor;\r\n","import React from 'react';\r\nimport './PartSelector.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\n\r\nfunction PartSelector({\r\n  design,\r\n  currentPart,\r\n  setCurrentPart,\r\n  setFocusLayer,\r\n  setLayersView,\r\n}) {\r\n  const numberOfParts = design.configData.partsArray.length;\r\n  const arrayOfParts = design.configData.partsArray;\r\n\r\n  const handlePartChange = (i) => {\r\n    if (currentPart === 0 && i < 0) {\r\n      setCurrentPart(numberOfParts - 1);\r\n    } else if (currentPart === numberOfParts - 1 && i > 0) {\r\n      setCurrentPart(0);\r\n    } else {\r\n      setCurrentPart(currentPart + i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='part-selector-container'>\r\n      <div>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(-1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button\r\n          className='partname-button'\r\n          onClick={() => {\r\n            setLayersView('PartList');\r\n          }}\r\n        >\r\n          {handleConvertPartName(arrayOfParts[currentPart])}\r\n        </button>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartSelector;\r\n","import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './LayerOverview.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport { FaChevronUp, FaChevronDown, FaPen, FaTimes } from 'react-icons/fa';\r\nimport PartSelector from '../PartSelector/PartSelector';\r\n\r\nfunction LayerOverview({ props }) {\r\n  const {\r\n    allLayers,\r\n    currentPart,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    handlePartChangeManager,\r\n    handleViewChange,\r\n    numberOfLayers,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleFocusLayer = (i) => {\r\n    setFocusLayer(i);\r\n  };\r\n\r\n  const handleClearFocusLayer = (aClass) => {\r\n    if (aClass === 'layers-view-container') {\r\n      setFocusLayer(-1);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLayer = (key) => {\r\n    setCurrentLayer(key);\r\n  };\r\n\r\n  const handleDeleteLayer = (layer) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-deleted',\r\n      partName: currentPartName,\r\n      layerIndex: layer,\r\n    });\r\n    setFocusLayer(-1);\r\n  };\r\n\r\n  const handleMoveLayer = (layer, direction) => {\r\n    setCanSave(true);\r\n    const tempDesign = cloneDeep(design);\r\n    let array;\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      array = tempDesign.outlineData.overlays[currentPartName].layers;\r\n    } else {\r\n      array = tempDesign.outlineData.parts[currentPartName].layers;\r\n    }\r\n\r\n    if (layer === array.length - 1 && direction === 1) {\r\n      return;\r\n    } else if (layer === 0 && direction === -1) {\r\n      return;\r\n    } else {\r\n      let tempElement = array[layer];\r\n      array[layer] = array[layer + direction];\r\n      array[layer + direction] = tempElement;\r\n      if (\r\n        currentPartName === 'outerOverlay' ||\r\n        currentPartName === 'innerOverlay'\r\n      ) {\r\n        tempDesign.outlineData.overlays[currentPartName].layers = array;\r\n      } else {\r\n        tempDesign.outlineData.parts[currentPartName].layers = array;\r\n      }\r\n      handlePartChangeManager({\r\n        type: 'layer-moved',\r\n        partName: currentPartName,\r\n        layerIndex: layer,\r\n        direction,\r\n      });\r\n      setFocusLayer(focusLayer + direction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='layers-view-container'\r\n      onClick={(e) => handleClearFocusLayer(e.target.className)}\r\n    >\r\n      <PartSelector\r\n        design={design}\r\n        currentPart={currentPart}\r\n        setCurrentPart={setCurrentPart}\r\n        setFocusLayer={setFocusLayer}\r\n        setLayersView={setLayersView}\r\n      />\r\n\r\n      <div className='add-layer-button'>\r\n        <button onClick={() => setLayersView('AddLayerType')}>Add Layer</button>\r\n      </div>\r\n\r\n      <div className='layers-box-container'>\r\n        {allLayers.map((layer, i) => (\r\n          <div key={i} className='layer-list-items'>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === numberOfLayers - 1 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, 1)}>\r\n                  <FaChevronUp />\r\n                </button>\r\n              </div>\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === 0 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, -1)}>\r\n                  <FaChevronDown />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className='layer-list-item-middle'\r\n              onClick={() => handleFocusLayer(i)}\r\n            >\r\n              <div\r\n                className={`layer-list-item-left ${\r\n                  focusLayer === i ? 'focus-layer-highlight' : ''\r\n                }`}\r\n              >\r\n                <div className='layer-list-item-type'>\r\n                  {layer.type === 'overlay'\r\n                    ? handleConvertPartName(layer.source).toLowerCase()\r\n                    : layer.type}\r\n                </div>\r\n              </div>\r\n\r\n              {layer.type === 'color' ? (\r\n                <div\r\n                  className='layer-list-item-right'\r\n                  style={{\r\n                    backgroundColor: layer.color,\r\n                  }}\r\n                ></div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.source}Mask.png`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              {layer.type === 'color' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('GraphicEditor');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCurrentPart(\r\n                        design.configData.partsArray.indexOf(layer.source)\r\n                      );\r\n                      setFocusLayer(-1);\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {layer.type === 'overlay' ? (\r\n                <div className='edit-layer-button edit-layer-button-dead'>\r\n                  <button>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button onClick={() => handleDeleteLayer(i)}>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='standard-button layer-back-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerOverview;\r\n","import React from 'react';\r\nimport './MaskTypes.css';\r\n\r\nfunction MaskTypes({ props }) {\r\n  const { design, currentPartName, handleAddMaskLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Mask Type</p>\r\n      </div>\r\n\r\n      {design.configData.maskTypes[currentPartName].map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          <button\r\n            onClick={() => {\r\n              handleAddMaskLayer(type[0], type[1]);\r\n              setLayersView('LayerOverview');\r\n            }}\r\n          >\r\n            {type[0]}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskTypes;\r\n","import React from 'react';\r\nimport './PartList.css';\r\n\r\nfunction PartList({ props }) {\r\n  const { setCurrentPart, setLayersView, handleViewChange, design } = props;\r\n\r\n  return (\r\n    <div className='partlist-container'>\r\n      <div className='partlist-title'>\r\n        <p>Parts</p>\r\n      </div>\r\n      <div className='partlist-buttons'>\r\n        {design.configData.partsArray.map((part, i) => (\r\n          <div className='standard-button' key={i}>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentPart(i);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {part}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='standard-button bottom-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartList;\r\n","import React from 'react';\r\nimport './CurrentGraphics.css';\r\n\r\nfunction CurrentGraphics({ graphicsArray, handleAddGraphicLayer }) {\r\n  return (\r\n    <div className='current-graphics-container'>\r\n      {graphicsArray.map((graphic, i) => (\r\n        <div\r\n          className='current-graphics-item'\r\n          key={i}\r\n          onClick={() => handleAddGraphicLayer(graphic)}\r\n        >\r\n          <img src={`/api/assets/images/${graphic}`} alt='used-already'></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentGraphics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './GraphicPicker.css';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport CurrentGraphics from '../CurrentGraphics/CurrentGraphics';\r\n\r\nfunction GraphicPicker({ props }) {\r\n  const { setLayersView, handleAddLayer, design } = props;\r\n\r\n  const [warning, setWarning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [graphicsArray, setGraphicsArray] = useState();\r\n\r\n  useEffect(() => {\r\n    const getGraphicsArray = () => {\r\n      const graphics = [];\r\n\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          if (\r\n            design.outlineData.parts[property].layers[layer].type === 'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.parts[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type ===\r\n            'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.overlays[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!graphics[0]) {\r\n        return null;\r\n      } else {\r\n        return graphics;\r\n      }\r\n    };\r\n\r\n    setGraphicsArray(getGraphicsArray());\r\n  }, [design]);\r\n\r\n  const onFileChange = async (e) => {\r\n    const fileSize = (e.target.files[0].size / 1024 / 1024).toFixed(4); // MB\r\n    if (fileSize < 2) {\r\n      setIsLoading(true);\r\n      const file = e.target.files[0];\r\n      await uploadImage(file, true).then((data) => {\r\n        const awsFileName = convertAwsLink(data.image);\r\n        handleAddGraphicLayer(awsFileName);\r\n      });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  const handleAddGraphicLayer = (fileName) => {\r\n    handleAddLayer('Graphic', fileName);\r\n    setLayersView('LayerOverview');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='upload-image-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='upload-image-container'>\r\n      {graphicsArray && (\r\n        <div className='used-graphics'>\r\n          <CurrentGraphics\r\n            graphicsArray={graphicsArray}\r\n            handleAddGraphicLayer={handleAddGraphicLayer}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className='view-title'>\r\n        <p>Upload Image</p>\r\n      </div> */}\r\n      <div className='upload-image-input'>\r\n        <label htmlFor='image-input-id' className='upload-image-label'>\r\n          <input\r\n            onChange={(e) => onFileChange(e)}\r\n            id='image-input-id'\r\n            type='file'\r\n            name='myImage'\r\n            accept='image/png, image/jpeg, .png, .jpg'\r\n          />\r\n          Upload\r\n        </label>\r\n      </div>\r\n\r\n      {warning && (\r\n        <div className='file-size-warning'>\r\n          <p>file must be less that 2MB.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicPicker;\r\n","import AddLayerType from '../AddLayerType/AddLayerType';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\r\nimport LayerOverview from '../LayerOverview/LayerOverview';\r\nimport MaskTypes from '../MaskTypes/MaskTypes';\r\nimport PartList from '../PartList/PartList';\r\nimport GraphicPicker from '../GraphicPicker/GraphicPicker';\r\n\r\nconst LayerDictionary = {\r\n  AddLayerType: AddLayerType,\r\n  ColorPicker: ColorPicker,\r\n  GraphicEditor: GraphicEditor,\r\n  LayerOverview: LayerOverview,\r\n  MaskTypes: MaskTypes,\r\n  PartList: PartList,\r\n  GraphicPicker: GraphicPicker,\r\n};\r\n\r\nexport default LayerDictionary;\r\n","import React, { useState } from 'react';\r\nimport LayerDictionary from './Constants';\r\nimport './LayersView.css';\r\n\r\nfunction LayersView({\r\n  currentLayer,\r\n  currentPart,\r\n  design,\r\n  graphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handleViewChange,\r\n  setCurrentLayer,\r\n  setCurrentPart,\r\n  setCanSave,\r\n}) {\r\n  const [focusLayer, setFocusLayer] = useState();\r\n  const [layersView, setLayersView] = useState('PartList');\r\n\r\n  const currentPartName = Object.keys(design.configData.partsObject)[\r\n    currentPart\r\n  ];\r\n\r\n  let numberOfLayers;\r\n  let allLayers;\r\n\r\n  if (\r\n    currentPartName === 'outerOverlay' ||\r\n    currentPartName === 'innerOverlay'\r\n  ) {\r\n    numberOfLayers = design.outlineData.overlays[currentPartName].layers.length;\r\n    allLayers = design.outlineData.overlays[currentPartName].layers;\r\n  } else {\r\n    numberOfLayers = design.outlineData.parts[currentPartName].layers.length;\r\n    allLayers = design.outlineData.parts[currentPartName].layers;\r\n  }\r\n\r\n  const handleAddLayer = (type, fileName) => {\r\n    setCanSave(true);\r\n    if (fileName) {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n        fileName: fileName,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    } else {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    }\r\n  };\r\n\r\n  const handleAddMaskLayer = (maskType, maskLink) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-added',\r\n      partName: currentPartName,\r\n      layerType: 'Mask',\r\n      maskType,\r\n      maskLink,\r\n    });\r\n    setFocusLayer(numberOfLayers);\r\n  };\r\n\r\n  const Component = LayerDictionary[layersView];\r\n\r\n  const propsToPassDown = {\r\n    allLayers,\r\n    currentPart,\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    graphicVisualCanvas,\r\n    handleAddLayer,\r\n    handleAddMaskLayer,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    handleViewChange,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    numberOfLayers,\r\n    setCanSave,\r\n  };\r\n\r\n  return <Component props={propsToPassDown} />;\r\n}\r\n\r\nexport default LayersView;\r\n","import React from 'react';\r\nimport './ChangeDesignName.css';\r\nimport { cloneDeep, startCase } from 'lodash';\r\n\r\nfunction ChangeDesignName({ handleViewChange, design, setDesign, setCanSave }) {\r\n  const handleUpdateDesignName = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    const newTitle = startCase(\r\n      document.getElementById('design-name-input').value\r\n    );\r\n    tempDesign.title = newTitle;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Design Name</p>\r\n      </div>\r\n      <div className='designer-input-div'>\r\n        <input\r\n          type='text'\r\n          id='design-name-input'\r\n          className='designer-input'\r\n          defaultValue={design.title}\r\n        ></input>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleUpdateDesignName()}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDesignName;\r\n","import React, { useState } from 'react';\r\nimport './ChangeBaseColor.css';\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ChangeBaseColor({\r\n  handleViewChange,\r\n  design,\r\n  setDesign,\r\n  setCanSave,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [baseColor, setBaseColor] = useState(design.outlineData.baseColor);\r\n\r\n  const updateBaseColor = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    tempDesign.outlineData.baseColor = baseColor;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleUpdateBaseColor(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex || color;\r\n    setBaseColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Base Color</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CustomColor color={baseColor} onChangeComplete={handleColorChange} />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => updateBaseColor()}>Apply</button>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeBaseColor;\r\n","import React, { useState } from 'react';\r\nimport './Interface.css';\r\nimport DesignPreview from '../DesignPreview/DesignPreview';\r\nimport LayersView from '../LayersView/LayersView';\r\nimport ChangeDesignName from '../ChangeDesignName/ChangeDesignName';\r\nimport ChangeBaseColor from '../ChangeBaseColor/ChangeBaseColor';\r\n\r\nfunction Interface({\r\n  design,\r\n  setDesign,\r\n  graphicVisualCanvas,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  camera,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const [view, setView] = useState('DesignPreview');\r\n  const [canSave, setCanSave] = useState(false);\r\n\r\n  const handleViewChange = (viewChange) => {\r\n    setView(viewChange);\r\n  };\r\n\r\n  if (view === 'DesignPreview') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <DesignPreview\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          camera={camera}\r\n          canSave={canSave}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'Layers') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <LayersView\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentLayer={currentLayer}\r\n          setCurrentLayer={setCurrentLayer}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeDesignName') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeDesignName\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeBaseColor') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeBaseColor\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;\r\n","import * as THREE from 'three';\r\n\r\nexport const createTexture = (textureCanvas) => {\r\n  const texture = new THREE.CanvasTexture(textureCanvas);\r\n  texture.flipY = false;\r\n  return texture;\r\n};\r\n\r\nexport const createCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  // const { baseColor } = design.outlineData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  const canvasCTX = canvas.getContext('2d');\r\n  canvasCTX.fillStyle = '#ffffff';\r\n  canvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n  return canvas;\r\n};\r\n\r\nexport const createGraphicVisualCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.id = 'graphic-visual-canvas';\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  return canvas;\r\n};\r\n","export const createColorLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    let { mask } = design.configData.partsObject[partName];\r\n    const { color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.fillStyle = color;\r\n      layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","export const createGraphicLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { link, x, y, scale, rotation } = layer;\r\n    const { canvasSize } = design.configData;\r\n    // Create layerCanvas to be returned\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      // Get graphic's diagnal length (pythagorean)\r\n      const graphicWidth = graphicImg.width;\r\n      const graphicHeight = graphicImg.height;\r\n      const graphicPythagorean = Math.round(\r\n        Math.sqrt(graphicWidth * graphicWidth + graphicHeight * graphicHeight)\r\n      );\r\n      // Create Pythagorean Canvas\r\n      const pythagoreanCanvas = document.createElement('canvas');\r\n      pythagoreanCanvas.id = 'pythagorean-canvas';\r\n      pythagoreanCanvas.width = graphicPythagorean;\r\n      pythagoreanCanvas.height = graphicPythagorean;\r\n      const pythagoreanCTX = pythagoreanCanvas.getContext('2d');\r\n      // Translate context to the center of the canvas\r\n      pythagoreanCTX.translate(\r\n        pythagoreanCanvas.width / 2,\r\n        pythagoreanCanvas.height / 2\r\n      );\r\n      // Rotate context\r\n      pythagoreanCTX.rotate((rotation * Math.PI) / 180);\r\n      pythagoreanCTX.drawImage(\r\n        graphicImg,\r\n        graphicImg.width / -2,\r\n        graphicImg.height / -2,\r\n        graphicImg.width,\r\n        graphicImg.height\r\n      );\r\n      const maskImg = new Image();\r\n      maskImg.src = `/api/assets/images/${mask}`;\r\n      maskImg.onload = function () {\r\n        layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n        layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n        // Calculate new position\r\n        const newX = x + (canvasSize - canvasSize * scale) / 2;\r\n        const newY = y + (canvasSize - canvasSize * scale) / 2;\r\n        const newScale = canvasSize * scale;\r\n        // Draw graphic on layerCanvas\r\n        layerCanvasCTX.drawImage(\r\n          pythagoreanCanvas,\r\n          newX,\r\n          newY,\r\n          newScale,\r\n          newScale\r\n        );\r\n        resolve(layerCanvas);\r\n      };\r\n    };\r\n  });\r\n};\r\n","export const createMaskLayerCanvas = ({ design, layer }) => {\r\n  return new Promise((resolve) => {\r\n    const { link, color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      layerCanvasCTX.drawImage(graphicImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.fillStyle = color;\r\n      layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","export const createOverlayLayerCanvas = ({\r\n  design,\r\n  layer,\r\n  partName,\r\n  overlayCanvas,\r\n}) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { source } = layer;\r\n    const { x, y, scale, rotation } = design.configData.translations[source][\r\n      partName\r\n    ];\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.translate(canvasSize * x, canvasSize * y);\r\n      layerCanvasCTX.rotate(rotation);\r\n      layerCanvasCTX.drawImage(\r\n        overlayCanvas,\r\n        0,\r\n        0,\r\n        canvasSize * scale,\r\n        canvasSize * scale\r\n      );\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","import {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n// create canvasObject part with designObject part\r\nconst createCanvasObjectPart = async ({\r\n  design,\r\n  designLayers,\r\n  partName,\r\n  overlays,\r\n}) => {\r\n  const canvasLayers = [];\r\n\r\n  // For each layer in part of design object\r\n  for (let layer in designLayers) {\r\n    if (designLayers[layer].type === 'color') {\r\n      const thisLayer = await createColorLayerCanvas({\r\n        design,\r\n        layer: designLayers[layer],\r\n        partName,\r\n      });\r\n      canvasLayers.push(thisLayer);\r\n    } else if (designLayers[layer].type === 'graphic') {\r\n      canvasLayers.push(\r\n        await createGraphicLayerCanvas({\r\n          design,\r\n          layer: designLayers[layer],\r\n          partName,\r\n        })\r\n      );\r\n    } else if (designLayers[layer].type === 'mask') {\r\n      canvasLayers.push(\r\n        await createMaskLayerCanvas({ design, layer: designLayers[layer] })\r\n      );\r\n    } else if (designLayers[layer].type === 'overlay') {\r\n      if (designLayers[layer].source === 'outerOverlay') {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[0],\r\n          })\r\n        );\r\n      } else {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[1],\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return { layers: canvasLayers };\r\n};\r\n\r\n// Create Base Color Canvas Object\r\nconst createBaseColorCanvasObjectPart = async ({ design, partName }) => {\r\n  const canvas = await createColorLayerCanvas({\r\n    design,\r\n    layer: { color: design.outlineData.baseColor },\r\n    partName,\r\n  });\r\n  return canvas;\r\n};\r\n\r\n// turn designObject into canvasObject\r\nexport const designObjectToCanvasObject = ({ design, type, overlays }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvasObject = {};\r\n    const createAllParts = async () => {\r\n      if (type === 'partsCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.parts[partName].layers,\r\n            partName,\r\n            overlays,\r\n          });\r\n        }\r\n      } else if (type === 'overlaysCanvasObject') {\r\n        for (let partName in design.outlineData.overlays) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.overlays[partName].layers,\r\n            partName,\r\n          });\r\n        }\r\n      } else if (type === 'baseColorCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createBaseColorCanvasObjectPart({\r\n            design,\r\n            partName,\r\n          });\r\n        }\r\n      }\r\n      resolve(canvasObject);\r\n    };\r\n    createAllParts();\r\n  });\r\n};\r\n\r\nexport const overlayCanvasObjectToTextureCanvas = ({\r\n  design,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  partName,\r\n  graphicVisualCanvas,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const overlayCanvasCTX = overlayCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  overlayCanvasCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in overlayCanvasObject[partName].layers) {\r\n    const layerCanvas = overlayCanvasObject[partName].layers[layer];\r\n    overlayCanvasCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n\r\n// update graphicVisualCanvas\r\nexport const updateGraphicVisualCanvas = ({\r\n  design,\r\n  graphicVisualCanvas,\r\n  partName,\r\n  canvasObject,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in canvasObject[partName].layers) {\r\n    const layerCanvas = canvasObject[partName].layers[layer];\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Part Change Functions\r\nexport const partChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer;\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      thisLayer = tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    } else {\r\n      thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    }\r\n\r\n    thisLayer.color = newColor;\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else if (layerType === 'Graphic') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    } else {\r\n      const { maskLink } = changeObject;\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'mask',\r\n        link: maskLink,\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    const layerObject = tempDesign.outlineData.parts[partName].layers.slice(\r\n      -1\r\n    )[0];\r\n    addLayerToCanvasObject({\r\n      canvasObject,\r\n      graphicVisualCanvas,\r\n      layerObject,\r\n      partName,\r\n      texture,\r\n      textureCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.parts[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.parts[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.parts[partName].layers.splice(layerIndex, 1);\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  canvasObject,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else if (layerObject.type === 'graphic') {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createMaskLayerCanvas({ design, layer: layerObject });\r\n  }\r\n  canvasObject[partName].layers[layerIndex] = layerCanvas;\r\n  // redraw part\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst addLayerToCanvasObject = async ({\r\n  canvasObject,\r\n  graphicVisualCanvas,\r\n  layerObject,\r\n  partName,\r\n  texture,\r\n  textureCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else {\r\n    const newLayerCanvas = await createMaskLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst deleteLayerFromCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  canvasObject[partName].layers.splice(layerIndex, 1);\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst moveLayerInCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = canvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  canvasObject[partName].layers = array;\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst redrawCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  graphicCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    graphicCTX.drawImage(\r\n      layerCanvas,\r\n      0,\r\n      0,\r\n      design.configData.canvasSize,\r\n      design.configData.canvasSize\r\n    );\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  overlayCanvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Overlay Change Functions\r\nexport const overlayChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  overlayCanvas,\r\n  overlayCanvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    thisLayer.color = newColor;\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    // add layers to design if this is the first overlay layer added\r\n    if (design.outlineData.overlays[partName].layers.length === 0) {\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        tempDesign.outlineData.parts[currentPart].layers.push({\r\n          type: 'overlay',\r\n          source: partName,\r\n        });\r\n      }\r\n    }\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    addLayerToOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerObject: tempDesign.outlineData.overlays[partName].layers.slice(\r\n        -1\r\n      )[0],\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.overlays[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.overlays[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.overlays[partName].layers.splice(layerIndex, 1);\r\n    if (tempDesign.outlineData.overlays[partName].layers.length === 0) {\r\n      // remove layers from design if this is the last overlay layer deleted\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        for (\r\n          let i = 0;\r\n          i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n          i++\r\n        ) {\r\n          const layerIndex = i;\r\n          if (\r\n            tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n            'overlay'\r\n          ) {\r\n            if (\r\n              tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n              partName\r\n            ) {\r\n              tempDesign.outlineData.parts[currentPart].layers.splice(\r\n                layerIndex,\r\n                1\r\n              );\r\n              canvasObject[currentPart].layers.splice(layerIndex, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOverlayLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  canvasObject,\r\n  textureCanvas,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  }\r\n  overlayCanvasObject[partName].layers[layerIndex] = layerCanvas;\r\n\r\n  // redraw part on overlayCanvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // update effected layers in canvas object\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst addLayerToOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n  // update effected layers in canvas object\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type === 'overlay'\r\n      ) {\r\n        if (\r\n          tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: tempDesign.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst moveLayerInOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = overlayCanvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  overlayCanvasObject[partName].layers = array;\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst deleteLayerFromOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  overlayCanvasObject[partName].layers.splice(layerIndex, 1);\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n          'overlay' &&\r\n        tempDesign.outlineData.parts[currentPart].layers[i].source === partName\r\n      ) {\r\n        const layerCanvas = await createOverlayLayerCanvas({\r\n          design,\r\n          layer: design.outlineData.parts[currentPart].layers[i],\r\n          partName: currentPart,\r\n          overlayCanvas,\r\n        });\r\n        canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n      }\r\n    }\r\n    // redraw effected parts in textureCanvas\r\n    redrawOverlayCanvasObjectPart({\r\n      textureCanvas,\r\n      canvasObjectPart: canvasObject[currentPart],\r\n      partName: currentPart,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst redrawOverlayCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n  }\r\n};\r\n","// turn canvasObject into a finalTexture\r\nexport const canvasObjectToTextureCanvas = ({\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n  size,\r\n  design,\r\n}) => {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  const finalCanvasCTX = canvas.getContext('2d');\r\n\r\n  for (let property in canvasObject) {\r\n    const { x, y, width, height } = design.configData.partsObject[property];\r\n    const { divider } = design.configData;\r\n    finalCanvasCTX.drawImage(\r\n      baseColorCanvasObject[property],\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    for (let layer in canvasObject[property].layers) {\r\n      const layerCanvas = canvasObject[property].layers[layer];\r\n      finalCanvasCTX.drawImage(\r\n        layerCanvas,\r\n        x / divider,\r\n        y / divider,\r\n        width / divider,\r\n        height / divider\r\n      );\r\n    }\r\n  }\r\n  return canvas;\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DesignerContainer.css';\r\nimport Scene from '../../components/Scene/Scene.js';\r\nimport Interface from '../../components/Interface/Interface.js';\r\nimport {\r\n  designObjectToCanvasObject,\r\n  updateGraphicVisualCanvas,\r\n  partChangeManager,\r\n  overlayCanvasObjectToTextureCanvas,\r\n  overlayChangeManager,\r\n} from '../../canvasFunctions';\r\nimport { canvasObjectToTextureCanvas } from '../../canvasFunctions';\r\n\r\nfunction DesignerContainer({\r\n  designSpec,\r\n  graphicVisualCanvas,\r\n  innerOverlayCanvas,\r\n  outerOverlayCanvas,\r\n  texture,\r\n  textureCanvas,\r\n}) {\r\n  const [design, setDesign] = useState(designSpec);\r\n  const [camera, setCamera] = useState(null);\r\n  const [initialLoaded, setInitialLoaded] = useState(false);\r\n\r\n  const canvasObjectRef = useRef();\r\n  const overlaysCanvasObjectRef = useRef();\r\n  const baseColorCanvasObjectRef = useRef();\r\n\r\n  const handleUpdateGraphicVisualCanvas = (partName) => {\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: overlaysCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: canvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePartChangeManager = (changeObject) => {\r\n    const { partName } = changeObject;\r\n    if (partName === 'outerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: outerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else if (partName === 'innerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: innerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      partChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateBaseColor = async (tempDesign) => {\r\n    // baseColor to baseColor Canvas Object\r\n    baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n    });\r\n    // Canvas Object to Canvas\r\n    const newCanvas = canvasObjectToTextureCanvas({\r\n      canvasObject: canvasObjectRef.current,\r\n      baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      size: textureCanvas.height,\r\n      design,\r\n    });\r\n    // Canvas to Texture Canvas\r\n    textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n    texture.needsUpdate = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasObjectRef.current) {\r\n      const buildTexture = async () => {\r\n        // Overlay Canvas Object Created\r\n        overlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'overlaysCanvasObject',\r\n        });\r\n        // Outer Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: outerOverlayCanvas,\r\n          partName: 'outerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Inner Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: innerOverlayCanvas,\r\n          partName: 'innerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Design Object to Canvas Object\r\n        canvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'partsCanvasObject',\r\n          overlays: [outerOverlayCanvas, innerOverlayCanvas],\r\n        });\r\n        // baseColor to baseColor Canvas Object\r\n        baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'baseColorCanvasObject',\r\n        });\r\n        // Canvas Object to Canvas\r\n        const newCanvas = canvasObjectToTextureCanvas({\r\n          canvasObject: canvasObjectRef.current,\r\n          baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n          size: textureCanvas.height,\r\n          design,\r\n        });\r\n        // Canvas to Texture Canvas\r\n        textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n        texture.needsUpdate = true;\r\n        setInitialLoaded(true);\r\n      };\r\n      buildTexture();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className='designer-container'>\r\n      <Scene\r\n        design={design}\r\n        texture={texture}\r\n        textureCanvas={textureCanvas}\r\n        initialLoaded={initialLoaded}\r\n        camera={camera}\r\n        setCamera={setCamera}\r\n      />\r\n      <Interface\r\n        design={design}\r\n        setDesign={setDesign}\r\n        graphicVisualCanvas={graphicVisualCanvas}\r\n        handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n        handlePartChangeManager={handlePartChangeManager}\r\n        setInitialLoaded={setInitialLoaded}\r\n        camera={camera}\r\n        handleUpdateBaseColor={handleUpdateBaseColor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DesignerContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Designer.css';\r\nimport DesignerContainer from '../../components/DesignerContainer/DesignerContainer';\r\nimport {\r\n  createTexture,\r\n  createCanvas,\r\n  createGraphicVisualCanvas,\r\n} from '../../canvasFunctions';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Designer() {\r\n  const [designSpec, setDesignSpec] = useState(null);\r\n  const [graphicVisualCanvas, setGraphicVisualCanvas] = useState(null);\r\n  const [innerOverlayCanvas, setInnerOverlayCanvas] = useState(null);\r\n  const [outerOverlayCanvas, setOuterOverlayCanvas] = useState(null);\r\n  const [textureCanvas, setTextureCanvas] = useState(null);\r\n  const [texture, setTexture] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      simpleFetch(`/api/outlines/${id}`, 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    } else {\r\n      simpleFetch('/api/outlines/newdesign', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (designSpec) {\r\n      setGraphicVisualCanvas(createGraphicVisualCanvas({ design: designSpec }));\r\n      setInnerOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setOuterOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setTextureCanvas(createCanvas({ design: designSpec }));\r\n    }\r\n  }, [designSpec]);\r\n\r\n  useEffect(() => {\r\n    if (textureCanvas) {\r\n      setTexture(createTexture(textureCanvas));\r\n    }\r\n  }, [textureCanvas]);\r\n\r\n  const initialized =\r\n    designSpec &&\r\n    graphicVisualCanvas &&\r\n    innerOverlayCanvas &&\r\n    outerOverlayCanvas &&\r\n    textureCanvas &&\r\n    texture;\r\n\r\n  if (initialized) {\r\n    return (\r\n      <div className='designer-root-container'>\r\n        <DesignerContainer\r\n          designSpec={designSpec}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          innerOverlayCanvas={innerOverlayCanvas}\r\n          outerOverlayCanvas={outerOverlayCanvas}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Designer;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/google`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/google`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-google-button'>\r\n        <button onClick={() => loginWithGoogle()}>Login With Google</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport './Profile.css';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const handleLogout = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/logout`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/logout`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <p className='basic-paragraph'>{userData.firstName}</p>\r\n      <p className='basic-paragraph'>{userData.email}</p>\r\n      <div className='basic-button'>\r\n        <button onClick={() => handleLogout()}>Log Out</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './NoPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <div className='no-page-container'>\r\n      <p className='basic-paragraph'>404 - PAGE NOT FOUND</p>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Home</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserProvider from './context/UserProvider';\r\nimport Landing from './pages/Landing/Landing';\r\nimport Designer from './pages/Designer/Designer';\r\nimport Login from './components/Login/Login';\r\nimport Profile from './components/Profile/Profile';\r\n\r\nimport NoPage from './components/NoPage/NoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Router>\r\n        <UserProvider>\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/designer' component={Designer} />\r\n            <Route exact path='/designer/:id' component={Designer} />\r\n            <Route path='*' component={NoPage} />\r\n          </Switch>\r\n        </UserProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}