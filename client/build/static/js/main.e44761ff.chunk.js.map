{"version":3,"sources":["context/UserProvider.js","components/NewDesignButton/NewDesignButton.js","components/FeaturedDesignCard/FeaturedDesignCard.js","components/MyDesignTiles/MyDesignTiles.js","helpers/fetchHelpers.js","pages/Landing/Landing.js","components/LoadingSpinner/LoadingSpinner.js","components/Scene/Scene.js","helpers/uploadImage.js","helpers/takeScreenshot.js","helpers/convertAwsLink.js","components/DesignPreview/DesignPreview.js","components/AddLayerType/AddLayerType.js","helpers/convertPartNames.js","components/CurrentColors/CurrentColors.js","components/CustomPointer/CustomPointer.js","components/CustomColor/CustomColor.js","components/ColorPicker/ColorPicker.js","components/GraphicEditor/GraphicEditor.js","components/PartSelector/PartSelector.js","components/LayerOverview/LayerOverview.js","components/MaskTypes/MaskTypes.js","components/PartList/PartList.js","components/CurrentGraphics/CurrentGraphics.js","components/GraphicPicker/GraphicPicker.js","components/LayersView/Constants.js","components/LayersView/LayersView.js","components/ChangeDesignName/ChangeDesignName.js","components/ChangeBaseColor/ChangeBaseColor.js","components/Interface/Interface.js","canvasFunctions/create/createCanvasFunctions.js","canvasFunctions/create/createColorLayerCanvas.js","canvasFunctions/create/createGraphicLayerCanvas.js","canvasFunctions/create/createMaskLayerCanvas.js","canvasFunctions/create/createOverlayLayerCanvas.js","canvasFunctions/create/initialFunctions.js","canvasFunctions/update/partChangeManager.js","canvasFunctions/update/overlayChangeManager.js","canvasFunctions/update/canvasObjectToTextureCanvas.js","components/DesignerContainer/DesignerContainer.js","pages/Designer/Designer.js","components/Login/Login.js","components/Profile/Profile.js","components/NoPage/NoPage.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","method","credentials","then","res","json","data","err","Provider","value","NewDesignButton","userData","history","useHistory","className","onClick","push","FeaturedDesignCard","props","_id","title","configId","author","screenshot","src","alt","modelName","firstName","MyDesignTiles","myDesigns","map","design","key","to","simpleFetch","link","designFetch","body","headers","JSON","stringify","Landing","useContext","featured","setFeatured","setMyDesigns","LoadingSpinner","id","Scene","texture","textureClone","initialLoaded","camera","setCamera","orbitControls","setOrbitControls","setCurrentPart","threeCanvasRef","useRef","renderer","setRenderer","newMaterial","setNewMaterial","newMaterialClone","setNewMaterialClone","isLoading","setIsLoading","createMaterial","Promise","resolve","aoimg","Image","configData","source","aoMapRight","onload","ao","THREE","flipY","aoMap","a","mat","antialias","preserveDrawingBuffer","alpha","createMat","createMatClone","setSize","current","appendChild","domElement","position","z","y","layers","enable","controls","OrbitControls","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enablePan","enableDamping","dampingFactor","update","scene","light","add","manager","onLoad","textureLoader","raycaster","GLTFLoader","load","modelRight","gltf","traverse","node","isMesh","material","side","set","model","scale","rotation","modelClone","clone","redMapRight","console","log","mouse","img","image","textureCanvas","document","createElement","width","height","textureCanvasCTX","getContext","waitForElement","drawImage","setTimeout","drag","addEventListener","event","preventDefault","box","getBoundingClientRect","x","clientX","clientY","setFromCamera","intersects","intersectObjects","length","uv","uv2","getImageData","setupRaycasting","render","requestAnimationFrame","cancelAnimationFrame","dispose","ref","uploadImage","file","isNew","formData","FormData","append","takeScreenshot","fileName","threeCanvas","getElementById","firstElementChild","newCanvas","dataUrl","toDataURL","blobBin","atob","split","array","i","charCodeAt","blob","Blob","Uint8Array","type","name","lastModifiedDate","Date","File","convertAwsLink","url","awsFileName","DesignPreview","handleViewChange","canSave","setCanSave","currentShoe","setCurrentShoe","shoeVisibility","setShoeVisibility","loading","setLoading","handleSaveDesign","imageName","outlineData","window","location","href","handleCurrentShoe","shoe","right","cameraPosition","target","visObj","left","toggle","handleToggleShoeVisible","index","style","color","baseColor","enableAll","AddLayerType","currentPartName","handleAddLayer","setLayersView","layerTypes","types","handleConvertPartName","partName","converted","join","charAt","toUpperCase","substr","CurrentColors","colorsArray","handleColorChange","backgroundColor","CustomPointer","CustomPicker","hex","hsl","hsv","onChange","styles","hue","marginBottom","overflow","saturation","input","border","borderRadius","fontSize","WebkitAppearance","WebkitBorderRadius","paddingLeft","boxShadow","display","swatch","background","inputContainer","pointer","ColorPicker","currentLayer","handlePartChangeManager","currentColor","setCurrentColor","setColorsArray","colors","property","parts","layer","thisColor","includes","overlays","getDesignColors","newColor","layerIndex","floor","random","toString","onChangeComplete","GraphicEditor","graphicVisualCanvas","handleUpdateGraphicVisualCanvas","handleMoveGraphic","direction","distance","div","innerHTML","placeGraphicVisual","PartSelector","currentPart","setFocusLayer","numberOfParts","partsArray","arrayOfParts","handlePartChange","LayerOverview","allLayers","focusLayer","numberOfLayers","setCurrentLayer","handleCurrentLayer","handleMoveLayer","tempDesign","cloneDeep","tempElement","e","handleFocusLayer","toLowerCase","objectFit","indexOf","handleDeleteLayer","MaskTypes","handleAddMaskLayer","maskTypes","PartList","part","CurrentGraphics","graphicsArray","handleAddGraphicLayer","graphic","GraphicPicker","LayerDictionary","warning","setWarning","setGraphicsArray","graphics","thisGraphic","getGraphicsArray","onFileChange","files","size","toFixed","htmlFor","accept","LayersView","layersView","Object","keys","partsObject","Component","propsToPassDown","layerType","maskType","maskLink","ChangeDesignName","setDesign","defaultValue","newTitle","startCase","handleUpdateDesignName","ChangeBaseColor","handleUpdateBaseColor","setBaseColor","updateBaseColor","Interface","view","setView","viewChange","createTexture","createCanvas","canvasSize","canvas","canvasCTX","fillStyle","fillRect","createColorLayerCanvas","mask","layerCanvas","layerCanvasCTX","maskImg","globalCompositeOperation","createGraphicLayerCanvas","graphicImg","graphicWidth","graphicHeight","graphicPythagorean","round","sqrt","pythagoreanCanvas","pythagoreanCTX","translate","rotate","newX","newY","newScale","createMaskLayerCanvas","createOverlayLayerCanvas","overlayCanvas","translations","createCanvasObjectPart","designLayers","canvasLayers","thisLayer","createBaseColorCanvasObjectPart","designObjectToCanvasObject","reject","canvasObject","createAllParts","overlayCanvasObjectToTextureCanvas","overlayCanvasObject","overlayCanvasCTX","graphicCTX","clearRect","updateGraphicVisualCanvas","baseColorCanvasObject","baseColorCanvas","updateLayer","layerObject","redrawCanvasObjectPart","canvasObjectPart","addLayerToCanvasObject","newLayerCanvas","deleteLayerFromCanvasObject","splice","moveLayerInCanvasObject","divider","needsUpdate","overlayChangeManager","changeObject","updateOverlayLayer","effectedParts","overlayParts","addLayerToOverlayCanvasObject","slice","moveLayerInOverlayCanvasObject","deleteLayerFromOverlayCanvasObject","redrawOverlayCanvasObjectPart","canvasObjectToTextureCanvas","finalCanvasCTX","DesignerContainer","designSpec","innerOverlayCanvas","outerOverlayCanvas","textureCanvasClone","setInitialLoaded","canvasObjectRef","overlaysCanvasObjectRef","baseColorCanvasObjectRef","buildTexture","partChangeManager","Designer","setDesignSpec","setGraphicVisualCanvas","setInnerOverlayCanvas","setOuterOverlayCanvas","setTextureCanvas","setTexture","setTextureCanvasClone","setTextureClone","useParams","setup","createGraphicVisualCanvas","Login","open","Profile","email","NoPage","App","exact","path","component","Boolean","hostname","match","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e44761ff.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('/auth/getsession', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n        } else {\r\n          setUser(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <context.Provider value={user}>{children}</context.Provider>;\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport './NewDesignButton.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NewDesignButton({ userData }) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='new-design-button standard-button'\r\n      onClick={() => handleClick()}\r\n    >\r\n      <button>N E W &nbsp; D E S I G N</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDesignButton;\r\n","import React from 'react';\r\nimport './FeaturedDesignCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction FeaturedDesignCard({ props, userData }) {\r\n  const { _id, title, configId, author, screenshot } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer/${_id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='featureddesigncard-container' onClick={() => handleClick()}>\r\n      <div className='featureddesigncard-image'>\r\n        <img src={`api/assets/images/${screenshot}`} alt='feature-design' />\r\n      </div>\r\n\r\n      <p className='featureddesigncard-title'>{title}</p>\r\n      <p className='featureddesigncard-model'>{configId.modelName}</p>\r\n      <p className='featureddesigncard-author'>{author.firstName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedDesignCard;\r\n","import React from 'react';\r\nimport './MyDesignTiles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyDesignTiles({ myDesigns }) {\r\n  return (\r\n    <div className='mydesigntiles-container'>\r\n      <div>\r\n        <p className='landing-section-label'>MY DESIGNS</p>\r\n      </div>\r\n      <div className='my-designs-grid'>\r\n        {myDesigns.map((design, key) => (\r\n          <Link\r\n            key={key}\r\n            to={`/designer/${design._id}`}\r\n            className='link-to-designer'\r\n          >\r\n            <div className='my-design-tile'>\r\n              <img\r\n                src={`/api/assets/images/${design.screenshot}`}\r\n                alt='my-design-preview'\r\n              />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyDesignTiles;\r\n","export const simpleFetch = (link, method) => {\r\n  return fetch(link, { method: method });\r\n};\r\n\r\nexport const designFetch = (link, method, body) => {\r\n  return fetch(link, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './Landing.css';\r\nimport NewDesignButton from '../../components/NewDesignButton/NewDesignButton';\r\nimport FeaturedDesignCard from '../../components/FeaturedDesignCard/FeaturedDesignCard';\r\nimport MyDesignTiles from '../../components/MyDesignTiles/MyDesignTiles';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Landing() {\r\n  const userData = useContext(UserProvider.context);\r\n  const [featured, setFeatured] = useState();\r\n  const [myDesigns, setMyDesigns] = useState();\r\n\r\n  useEffect(() => {\r\n    simpleFetch('/api/featured', 'GET')\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatured(data));\r\n\r\n    if (userData) {\r\n      simpleFetch('/api/outlines/mydesigns', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => setMyDesigns(data));\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-header'>\r\n        <p>\r\n          <strong>Sole</strong> Composer\r\n        </p>\r\n        {userData ? (\r\n          <Link to='/profile'>{userData.firstName}</Link>\r\n        ) : (\r\n          <Link to='/login'>Login</Link>\r\n        )}\r\n      </div>\r\n      <div className='landing-content'>\r\n        <div className='featured-designs-container'>\r\n          <p className='landing-section-label'>FEATURED</p>\r\n          <div className='feature-designs'>\r\n            {featured\r\n              ? featured.featured.map((design, key) => (\r\n                  <FeaturedDesignCard\r\n                    props={design}\r\n                    userData={userData}\r\n                    key={key}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n\r\n        {userData ? (\r\n          <NewDesignButton userData={userData} />\r\n        ) : (\r\n          <Link to='/login'>\r\n            <div className='landing-button'>\r\n              <button>Get Started</button>\r\n            </div>\r\n          </Link>\r\n        )}\r\n\r\n        {myDesigns && <MyDesignTiles myDesigns={myDesigns} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div id='loading-screen'>\r\n      <div id='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Scene.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Scene = ({\r\n  design,\r\n  texture,\r\n  textureClone,\r\n  initialLoaded,\r\n  camera,\r\n  setCamera,\r\n  orbitControls,\r\n  setOrbitControls,\r\n  setCurrentPart,\r\n}) => {\r\n  // console.log('scene');\r\n  const threeCanvasRef = useRef(null);\r\n  const [renderer, setRenderer] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [newMaterialClone, setNewMaterialClone] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const createMaterial = (texture) => {\r\n      return new Promise((resolve) => {\r\n        const aoimg = new Image();\r\n        aoimg.src = `/api/assets/images/${design.configData.source.aoMapRight}`;\r\n\r\n        aoimg.onload = () => {\r\n          const ao = new THREE.CanvasTexture(aoimg);\r\n          ao.flipY = false;\r\n          resolve(\r\n            new THREE.MeshStandardMaterial({\r\n              map: texture,\r\n              aoMap: ao,\r\n            })\r\n          );\r\n        };\r\n      });\r\n    };\r\n\r\n    setRenderer(\r\n      new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n      })\r\n    );\r\n\r\n    async function createMat() {\r\n      const mat = await createMaterial(texture);\r\n      setNewMaterial(mat);\r\n    }\r\n    createMat();\r\n\r\n    async function createMatClone() {\r\n      const mat = await createMaterial(textureClone);\r\n      setNewMaterialClone(mat);\r\n    }\r\n    createMatClone();\r\n  }, [texture, design.configData.source.aoMapRight, textureClone]);\r\n\r\n  useEffect(() => {\r\n    //===================================================== camera\r\n    if (renderer && newMaterial) {\r\n      renderer.setSize(2048, 2048);\r\n      threeCanvasRef.current.appendChild(renderer.domElement);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 8.5;\r\n      camera.position.y = 0;\r\n      camera.layers.enable(1);\r\n      camera.layers.enable(2);\r\n      setCamera(camera);\r\n    }\r\n  }, [renderer, newMaterial, setCamera]);\r\n\r\n  useEffect(() => {\r\n    //===================================================== orbit controls\r\n    if (renderer && newMaterial && camera) {\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.maxDistance = 10;\r\n      controls.minDistance = 4;\r\n      controls.minPolarAngle = Math.PI * (1 / 5);\r\n      controls.maxPolarAngle = Math.PI * (6 / 7);\r\n      controls.enablePan = false;\r\n      controls.enableDamping = true;\r\n      controls.dampingFactor = 0.18;\r\n      controls.update();\r\n      setOrbitControls(controls);\r\n    }\r\n  }, [renderer, newMaterial, camera, setOrbitControls]);\r\n\r\n  // Build threeJS Scene\r\n  useEffect(() => {\r\n    if (\r\n      renderer &&\r\n      newMaterial &&\r\n      newMaterialClone &&\r\n      camera &&\r\n      orbitControls\r\n    ) {\r\n      //===================================================== scene\r\n      const scene = new THREE.Scene();\r\n\r\n      //===================================================== lights\r\n      const light = new THREE.AmbientLight(0xffffff, 1);\r\n      scene.add(light);\r\n\r\n      //===================================================== loading mananger\r\n      const manager = new THREE.LoadingManager();\r\n      manager.onLoad = () => {\r\n        setIsLoading(false);\r\n      };\r\n\r\n      //===================================================== raycasting\r\n      const textureLoader = new THREE.TextureLoader();\r\n      const raycaster = new THREE.Raycaster();\r\n      raycaster.layers.enable(1);\r\n      raycaster.layers.enable(2);\r\n\r\n      const setupRaycasting = (model, modelClone) => {\r\n        textureLoader.load(\r\n          `/api/assets/images/${design.configData.source.redMapRight}`,\r\n          (texture) => {\r\n            console.log('ray');\r\n            const mouse = new THREE.Vector2();\r\n            const img = texture.image;\r\n            const textureCanvas = document.createElement('canvas');\r\n            textureCanvas.width = img.width;\r\n            textureCanvas.height = img.height;\r\n            const textureCanvasCTX = textureCanvas.getContext('2d');\r\n\r\n            function waitForElement() {\r\n              if (\r\n                textureCanvasCTX !== null &&\r\n                typeof textureCanvas === 'object'\r\n              ) {\r\n                textureCanvasCTX.drawImage(img, 0, 0, img.width, img.height);\r\n              } else {\r\n                setTimeout(waitForElement, 100);\r\n              }\r\n            }\r\n            waitForElement();\r\n\r\n            let drag = false;\r\n\r\n            renderer.domElement.addEventListener('pointerdown', (event) => {\r\n              drag = false;\r\n            });\r\n\r\n            renderer.domElement.addEventListener('pointermove', (event) => {\r\n              event.preventDefault();\r\n              drag = true;\r\n            });\r\n\r\n            renderer.domElement.addEventListener('pointerup', (event) => {\r\n              event.preventDefault();\r\n              if (!drag) {\r\n                // check intersections with imported model\r\n                const box = renderer.domElement.getBoundingClientRect();\r\n\r\n                mouse.x = (event.clientX / box.width) * 2 - 1;\r\n                mouse.y = -(event.clientY / box.height) * 2 + 1;\r\n\r\n                raycaster.setFromCamera(mouse, camera);\r\n\r\n                const intersects = raycaster.intersectObjects(\r\n                  [model, modelClone],\r\n                  true\r\n                );\r\n\r\n                // if there is any intersection, continues\r\n                if (intersects.length) {\r\n                  // get pixel coordinates on texture\r\n                  const uv = intersects[0].uv2;\r\n                  uv.x *= img.width;\r\n                  uv.y *= img.height;\r\n\r\n                  // get pixel value\r\n                  const colorValues = textureCanvas\r\n                    .getContext('2d')\r\n                    .getImageData(uv.x, uv.y, 1, 1).data;\r\n\r\n                  switch (colorValues[0]) {\r\n                    case 255:\r\n                      setCurrentPart(4);\r\n                      break;\r\n\r\n                    case 220:\r\n                      setCurrentPart(2);\r\n                      break;\r\n\r\n                    case 210:\r\n                      setCurrentPart(0);\r\n                      break;\r\n\r\n                    case 200:\r\n                      setCurrentPart(5);\r\n                      break;\r\n\r\n                    case 190:\r\n                      setCurrentPart(3);\r\n                      break;\r\n\r\n                    case 180:\r\n                      setCurrentPart(1);\r\n                      break;\r\n\r\n                    case 170:\r\n                      setCurrentPart(16);\r\n                      break;\r\n\r\n                    case 160:\r\n                      setCurrentPart(15);\r\n                      break;\r\n\r\n                    case 150:\r\n                      setCurrentPart(14);\r\n                      break;\r\n\r\n                    case 140:\r\n                      setCurrentPart(9);\r\n                      break;\r\n\r\n                    case 130:\r\n                      setCurrentPart(13);\r\n                      break;\r\n\r\n                    case 120:\r\n                      setCurrentPart(11);\r\n                      break;\r\n\r\n                    case 110:\r\n                      setCurrentPart(12);\r\n                      break;\r\n\r\n                    case 100:\r\n                      setCurrentPart(8);\r\n                      break;\r\n\r\n                    case 90:\r\n                      setCurrentPart(10);\r\n                      break;\r\n\r\n                    case 80:\r\n                      setCurrentPart(7);\r\n                      break;\r\n\r\n                    case 70:\r\n                      setCurrentPart(6);\r\n                      break;\r\n\r\n                    case 60:\r\n                      setCurrentPart(17);\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        );\r\n      };\r\n\r\n      //===================================================== model\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(\r\n        `/api/assets/images/${design.configData.source.modelRight}`,\r\n        (gltf) => {\r\n          gltf.scene.traverse((node) => {\r\n            if (node.isMesh) {\r\n              node.material = newMaterial;\r\n              node.material.side = THREE.DoubleSide;\r\n              node.layers.set(1);\r\n            }\r\n          });\r\n          const model = gltf.scene;\r\n\r\n          model.scale.set(0.35, 0.35, 0.35);\r\n          model.position.y = -1;\r\n          model.position.z = 1.25;\r\n          model.rotation.y = -95 * (Math.PI / 180);\r\n          scene.add(model);\r\n\r\n          const modelClone = gltf.scene.clone();\r\n\r\n          modelClone.scale.set(-0.35, 0.35, 0.35);\r\n          modelClone.position.y = -1;\r\n          modelClone.position.z = -1.25;\r\n          modelClone.rotation.y = -95 * (Math.PI / 180);\r\n          scene.add(modelClone);\r\n\r\n          modelClone.traverse((node) => {\r\n            if (node.isMesh) {\r\n              node.material = newMaterialClone;\r\n              node.material.side = THREE.DoubleSide;\r\n              node.layers.set(2);\r\n            }\r\n          });\r\n\r\n          setupRaycasting(model, modelClone);\r\n        }\r\n      );\r\n\r\n      //===================================================== animate\r\n      const render = () => {\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n        orbitControls.update();\r\n      };\r\n\r\n      render();\r\n\r\n      //===================================================== cleanup\r\n      const cleanup = () => {\r\n        cancelAnimationFrame(render);\r\n        orbitControls.dispose();\r\n      };\r\n\r\n      return cleanup;\r\n    }\r\n  }, [\r\n    newMaterial,\r\n    renderer,\r\n    camera,\r\n    design.configData.source,\r\n    setCurrentPart,\r\n    newMaterialClone,\r\n    orbitControls,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className='scene-container'\r\n      id='scene-container-id'\r\n      ref={threeCanvasRef}\r\n    >\r\n      {!isLoading && initialLoaded ? null : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","export const uploadImage = (file, isNew) => {\r\n  const formData = new FormData();\r\n  if (isNew) {\r\n    formData.append('image', file, 'newImage');\r\n  } else {\r\n    formData.append('image', file);\r\n  }\r\n\r\n  return fetch('/api/assets/uploadimage', {\r\n    method: 'POST',\r\n    body: formData,\r\n  }).then((res) => res.json());\r\n};\r\n","export const takeScreenshot = (camera, fileName) => {\r\n  return new Promise((resolve) => {\r\n    camera.position.set(0, 0, 7.5);\r\n    setTimeout(() => {\r\n      const threeCanvas = document.getElementById('scene-container-id')\r\n        .firstElementChild;\r\n      const newCanvas = document.createElement('canvas');\r\n      newCanvas.width = 1024;\r\n      newCanvas.height = 1024;\r\n      const newCanvasCtx = newCanvas.getContext('2d');\r\n      newCanvasCtx.drawImage(threeCanvas, 0, 0, 1024, 1024);\r\n\r\n      const dataUrl = newCanvas.toDataURL('image/png');\r\n\r\n      var blobBin = atob(dataUrl.split(',')[1]);\r\n      var array = [];\r\n      for (var i = 0; i < blobBin.length; i++) {\r\n        array.push(blobBin.charCodeAt(i));\r\n      }\r\n      var blob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n      blob.name = 'theBlob';\r\n      blob.lastModifiedDate = new Date();\r\n      var file = new File([blob], fileName, { type: 'image/png' });\r\n      resolve(file);\r\n    }, 500);\r\n  });\r\n};\r\n","export const convertAwsLink = (url) => {\r\n  let awsFileName = url.split('/');\r\n  awsFileName = awsFileName[awsFileName.length - 1];\r\n  return awsFileName;\r\n};\r\n","import React, { useState } from 'react';\r\nimport './DesignPreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { takeScreenshot } from '../../helpers/takeScreenshot';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport { designFetch } from '../../helpers/fetchHelpers';\r\nimport {\r\n  FaPen,\r\n  FaLayerGroup,\r\n  FaTrashAlt,\r\n  FaSave,\r\n  FaTimes,\r\n  FaCamera,\r\n  FaSquare,\r\n  FaEye,\r\n} from 'react-icons/fa';\r\n\r\nfunction DesignPreview({\r\n  handleViewChange,\r\n  design,\r\n  camera,\r\n  orbitControls,\r\n  canSave,\r\n  setCanSave,\r\n  userData,\r\n  currentShoe,\r\n  setCurrentShoe,\r\n  shoeVisibility,\r\n  setShoeVisibility,\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSaveDesign = async () => {\r\n    setCanSave(false);\r\n    // if new design\r\n    if (!design.author) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, 'newImage');\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch('/api/outlines', 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n    // if design is mine\r\n    else if (design.author === userData._id) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, false).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: design.author,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/${design._id}`, 'PUT', body);\r\n        setLoading(false);\r\n      });\r\n    }\r\n    // if design is not mine\r\n    else {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/`, 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteDesign = () => {\r\n    if (userData._id === design.author) {\r\n      fetch(`/api/outlines/${design._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const handleResetCamera = () => {\r\n    camera.layers.enableAll();\r\n    orbitControls.target.set(0, 0, 0);\r\n    setShoeVisibility({ right: true, left: true });\r\n    camera.position.set(0, 0, 8.5);\r\n  };\r\n\r\n  const handleCurrentShoe = (shoe) => {\r\n    // if right shoe\r\n    if (shoe === 0 && shoe !== currentShoe) {\r\n      if (shoeVisibility.right) {\r\n        setCurrentShoe(shoe);\r\n      } else {\r\n        let cameraPosition = camera.position;\r\n        orbitControls.target.set(0, 0, 1.25);\r\n        camera.position.set(\r\n          cameraPosition.x,\r\n          cameraPosition.y,\r\n          cameraPosition.z + 2.5\r\n        );\r\n        // L => R\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = true;\r\n        visObj.left = false;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(1);\r\n        camera.layers.toggle(2);\r\n        setCurrentShoe(shoe);\r\n      }\r\n    }\r\n    // if left shoe\r\n    else if (shoe === 1 && shoe !== currentShoe) {\r\n      if (shoeVisibility.left) {\r\n        setCurrentShoe(shoe);\r\n      } else {\r\n        let cameraPosition = camera.position;\r\n        orbitControls.target.set(0, 0, -1.25);\r\n        camera.position.set(\r\n          cameraPosition.x,\r\n          cameraPosition.y,\r\n          cameraPosition.z - 2.5\r\n        );\r\n        // R => L\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = false;\r\n        visObj.left = true;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(1);\r\n        camera.layers.toggle(2);\r\n        setCurrentShoe(shoe);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleShoeVisible = (index) => {\r\n    // if toggle right\r\n    if (index === 1) {\r\n      // if left is current - toggle right\r\n      if (currentShoe === 1) {\r\n        if (shoeVisibility.right) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // LR => L\r\n        } else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 0);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // L => LR\r\n        }\r\n\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = !visObj.right;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(index);\r\n      }\r\n      // if right is current, we know it's visible\r\n      else if (currentShoe === 0) {\r\n        // if left is visible - make left current, make right invisible\r\n        if (shoeVisibility.left) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // LR => L\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = false;\r\n          setShoeVisibility(visObj);\r\n\r\n          setCurrentShoe(1);\r\n          camera.layers.toggle(index);\r\n        }\r\n        // if left is invisible - make left visible and current, make right invisible\r\n        else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 2.5\r\n          );\r\n          // R => L\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = !visObj.right;\r\n          visObj.left = !visObj.left;\r\n          setShoeVisibility(visObj);\r\n\r\n          camera.layers.toggle(1);\r\n          camera.layers.toggle(2);\r\n          setCurrentShoe(1);\r\n        }\r\n      }\r\n    }\r\n    // if toggle left\r\n    else if (index === 2) {\r\n      // if right is current - toggle left\r\n      if (currentShoe === 0) {\r\n        if (shoeVisibility.left) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // LR => R\r\n        } else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 0);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // R => LR\r\n        }\r\n\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.left = !visObj.left;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(index);\r\n      }\r\n      // if left is current, we know it's visible\r\n      else if (currentShoe === 1) {\r\n        // if right is visible - make right current, make left invisible\r\n        if (shoeVisibility.right) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // LR => R\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.left = false;\r\n          setShoeVisibility(visObj);\r\n\r\n          setCurrentShoe(0);\r\n          camera.layers.toggle(index);\r\n        }\r\n        // if right is invisible - make right visible and current, make left invisible\r\n        else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 2.5\r\n          );\r\n          // L => R\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = !visObj.right;\r\n          visObj.left = !visObj.left;\r\n          setShoeVisibility(visObj);\r\n\r\n          camera.layers.toggle(1);\r\n          camera.layers.toggle(2);\r\n          setCurrentShoe(0);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (userData) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div className='design-preview-info'>\r\n          <div className='design-title-container'>\r\n            <p className='design-title'>{design.title}</p>\r\n            <button\r\n              className='edit-design-title-button'\r\n              onClick={() => handleViewChange('ChangeDesignName')}\r\n            >\r\n              <FaPen />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='design-preview-buttons'>\r\n          <div className='design-preview-toggle-container'>\r\n            <div className='design-preview-toggle-left'>\r\n              <div\r\n                className={`design-preview-toggle-shoe ${\r\n                  currentShoe === 0 ? null : 'disabled-shoe'\r\n                }`}\r\n                onClick={() => {\r\n                  handleCurrentShoe(0);\r\n                }}\r\n              >\r\n                <p>Right</p>\r\n              </div>\r\n              <div\r\n                className={`design-preview-toggle-shoe ${\r\n                  currentShoe === 1 ? null : 'disabled-shoe'\r\n                }`}\r\n                onClick={() => {\r\n                  handleCurrentShoe(1);\r\n                }}\r\n              >\r\n                <p>Left</p>\r\n              </div>\r\n            </div>\r\n            <div className='design-preview-toggle-right'>\r\n              <div\r\n                className={`design-preview-toggle-visible ${\r\n                  shoeVisibility.right ? null : 'disabled-visibility'\r\n                }`}\r\n                onClick={() => {\r\n                  handleToggleShoeVisible(1);\r\n                }}\r\n              >\r\n                <FaEye />\r\n              </div>\r\n              <div\r\n                className={`design-preview-toggle-visible ${\r\n                  shoeVisibility.left ? null : 'disabled-visibility'\r\n                }`}\r\n                onClick={() => {\r\n                  handleToggleShoeVisible(2);\r\n                }}\r\n              >\r\n                <FaEye />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('ChangeBaseColor')}\r\n          >\r\n            <div\r\n              className='design-preview-button-icon'\r\n              style={{ color: design.outlineData.baseColor }}\r\n            >\r\n              <FaSquare />\r\n            </div>\r\n            <button>Base Color</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('Layers')}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaLayerGroup />\r\n            </div>\r\n            <button>Layers</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleResetCamera();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaCamera />\r\n            </div>\r\n            <button>Reset Camera</button>\r\n          </div>\r\n          {canSave ? (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleSaveDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          ) : (\r\n            <div className='design-preview-button save-deactivated'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          )}\r\n          {design.author === userData._id && (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleDeleteDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaTrashAlt />\r\n              </div>\r\n              <button>Delete</button>\r\n            </div>\r\n          )}\r\n          <Link to='/'>\r\n            <div className='design-preview-button'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaTimes />\r\n              </div>\r\n              <button>Exit</button>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>no data</div>;\r\n  }\r\n}\r\n\r\nexport default DesignPreview;\r\n","import React from 'react';\r\nimport './AddLayerType.css';\r\n\r\nfunction AddLayerType({ props }) {\r\n  const { design, currentPartName, handleAddLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Layer Type</p>\r\n      </div>\r\n      {design.configData.layerTypes[currentPartName].types.map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          {type === 'Mask' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('MaskTypes');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : type === 'Graphic' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('GraphicPicker');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                handleAddLayer(type);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLayerType;\r\n","export const handleConvertPartName = (partName) => {\r\n  let converted = partName.split(/(?=[A-Z])/).join(' ');\r\n  return converted.charAt(0).toUpperCase() + converted.substr(1);\r\n};\r\n","import React from 'react';\r\nimport './CurrentColors.css';\r\n\r\nfunction CurrentColors({ colorsArray, handleColorChange }) {\r\n  return (\r\n    <div className='current-colors-container'>\r\n      <div className='current-colors-scroll'>\r\n        {colorsArray.map((color, i) => (\r\n          <button\r\n            key={i}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handleColorChange(color)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentColors;\r\n","import React from 'react';\r\nimport './CustomPointer.css';\r\n\r\nconst CustomPointer = () => {\r\n  return <div className='custom-pointer'></div>;\r\n};\r\n\r\nexport default CustomPointer;\r\n","import React from 'react';\r\nimport './CustomColor.css';\r\nimport { CustomPicker } from 'react-color';\r\nimport CustomPointer from '../CustomPointer/CustomPointer';\r\nimport {\r\n  EditableInput,\r\n  Hue,\r\n  Saturation,\r\n} from 'react-color/lib/components/common';\r\n\r\nexport const CustomColor = ({ hex, hsl, hsv, onChange }) => {\r\n  const styles = {\r\n    hue: {\r\n      height: 15,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    saturation: {\r\n      width: '100%',\r\n      height: 120,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    input: {\r\n      width: '50%',\r\n      height: '30px',\r\n      border: 'none',\r\n      borderRadius: 'none',\r\n      fontSize: '.7rem',\r\n      // border: `1px solid ${hex}`,\r\n      WebkitAppearance: 'none',\r\n      WebkitBorderRadius: 0,\r\n      paddingLeft: 10,\r\n      boxShadow: 'none',\r\n      display: 'block',\r\n    },\r\n    swatch: {\r\n      width: '100%',\r\n      height: '100%',\r\n      background: hex,\r\n    },\r\n    inputContainer: {\r\n      background: hex,\r\n    },\r\n  };\r\n  return (\r\n    <div className='custom-color'>\r\n      <div style={styles.hue}>\r\n        <Hue hsl={hsl} onChange={onChange} pointer={CustomPointer} />\r\n      </div>\r\n\r\n      <div style={styles.saturation}>\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          onChange={onChange}\r\n          pointer={CustomPointer}\r\n        />\r\n      </div>\r\n\r\n      <div className='color-input' style={styles.inputContainer}>\r\n        <EditableInput\r\n          style={{ input: styles.input }}\r\n          className='custom-color-input'\r\n          value={hex}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(CustomColor);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport CurrentColors from '../CurrentColors/CurrentColors';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ColorPicker({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    handlePartChangeManager,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const [currentColor, setCurrentColor] = useState('#ffffaa');\r\n  const [colorsArray, setColorsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDesignColors = () => {\r\n      const colors = [];\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          const type = design.outlineData.parts[property].layers[layer].type;\r\n          if (type === 'color' || type === 'mask') {\r\n            const thisColor =\r\n              design.outlineData.parts[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type === 'color'\r\n          ) {\r\n            const thisColor =\r\n              design.outlineData.overlays[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const baseColor = design.outlineData.baseColor;\r\n\r\n      if (!colors.includes(baseColor)) {\r\n        colors.push(baseColor);\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    setColorsArray(getDesignColors());\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      setCurrentColor(\r\n        design.outlineData.overlays[currentPartName].layers[currentLayer].color\r\n      );\r\n    } else {\r\n      setCurrentColor(\r\n        design.outlineData.parts[currentPartName].layers[currentLayer].color\r\n      );\r\n    }\r\n  }, [design, currentPartName, currentLayer, setColorsArray]);\r\n\r\n  const handleColorChange = (color) => {\r\n    setCanSave(true);\r\n    const newColor = color.hex || color;\r\n    setCurrentColor(color);\r\n    handlePartChangeManager({\r\n      type: 'color-changed',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      newColor,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='color-picker-container'>\r\n      <div className='view-title'>\r\n        <p>{handleConvertPartName(currentPartName)}</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CurrentColors\r\n          colorsArray={colorsArray}\r\n          handleColorChange={handleColorChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomColor\r\n          color={currentColor}\r\n          onChangeComplete={handleColorChange}\r\n        />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowsAlt,\r\n  FaArrowUp,\r\n  FaCompressArrowsAlt,\r\n  FaRedoAlt,\r\n  FaUndoAlt,\r\n} from 'react-icons/fa';\r\nimport './GraphicEditor.css';\r\n\r\nfunction GraphicEditor({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    graphicVisualCanvas,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleMoveGraphic = (direction, distance) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'graphic-moved',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      direction,\r\n      distance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const placeGraphicVisual = () => {\r\n      let div = document.getElementById('graphic-visual-container');\r\n      div.innerHTML = '';\r\n      div.appendChild(graphicVisualCanvas);\r\n    };\r\n    placeGraphicVisual();\r\n    handleUpdateGraphicVisualCanvas(currentPartName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='graphic-editor-container'>\r\n      <div className='graphic-editor-upper'>\r\n        <div className='graphic-editor-buttons' id='edit-buttons-div'>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='up-button'\r\n            onClick={() => handleMoveGraphic('vert', -30)}\r\n          >\r\n            <FaArrowUp />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='down-button'\r\n            onClick={() => handleMoveGraphic('vert', 30)}\r\n          >\r\n            <FaArrowDown />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='left-button'\r\n            onClick={() => handleMoveGraphic('hor', -30)}\r\n          >\r\n            <FaArrowLeft />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='right-button'\r\n            onClick={() => handleMoveGraphic('hor', 30)}\r\n          >\r\n            <FaArrowRight />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-up-button'\r\n            onClick={() => handleMoveGraphic('scale', 1.1)}\r\n          >\r\n            <FaArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-down-button'\r\n            onClick={() => handleMoveGraphic('scale', 0.9)}\r\n          >\r\n            <FaCompressArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='clockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', 5)}\r\n          >\r\n            <FaRedoAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='counterclockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', -5)}\r\n          >\r\n            <FaUndoAlt />\r\n          </button>\r\n        </div>\r\n        <div id='graphic-visual-container'></div>\r\n      </div>\r\n      <div className='graphic-editor-lower'>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => handleMoveGraphic('reset', 0)}>Reset</button>\r\n        </div>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicEditor;\r\n","import React from 'react';\r\nimport './PartSelector.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\n\r\nfunction PartSelector({\r\n  design,\r\n  currentPart,\r\n  setCurrentPart,\r\n  setFocusLayer,\r\n  setLayersView,\r\n}) {\r\n  const numberOfParts = design.configData.partsArray.length;\r\n  const arrayOfParts = design.configData.partsArray;\r\n\r\n  const handlePartChange = (i) => {\r\n    if (currentPart === 0 && i < 0) {\r\n      setCurrentPart(numberOfParts - 1);\r\n    } else if (currentPart === numberOfParts - 1 && i > 0) {\r\n      setCurrentPart(0);\r\n    } else {\r\n      setCurrentPart(currentPart + i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='part-selector-container'>\r\n      <div>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(-1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button\r\n          className='partname-button'\r\n          onClick={() => {\r\n            setLayersView('PartList');\r\n          }}\r\n        >\r\n          {handleConvertPartName(arrayOfParts[currentPart])}\r\n        </button>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartSelector;\r\n","import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './LayerOverview.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport { FaChevronUp, FaChevronDown, FaPen, FaTimes } from 'react-icons/fa';\r\nimport PartSelector from '../PartSelector/PartSelector';\r\n\r\nfunction LayerOverview({ props }) {\r\n  const {\r\n    allLayers,\r\n    currentPart,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    handlePartChangeManager,\r\n    handleViewChange,\r\n    numberOfLayers,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleFocusLayer = (i) => {\r\n    setFocusLayer(i);\r\n  };\r\n\r\n  const handleClearFocusLayer = (aClass) => {\r\n    if (aClass === 'layers-view-container') {\r\n      setFocusLayer(-1);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLayer = (key) => {\r\n    setCurrentLayer(key);\r\n  };\r\n\r\n  const handleDeleteLayer = (layer) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-deleted',\r\n      partName: currentPartName,\r\n      layerIndex: layer,\r\n    });\r\n    setFocusLayer(-1);\r\n  };\r\n\r\n  const handleMoveLayer = (layer, direction) => {\r\n    setCanSave(true);\r\n    const tempDesign = cloneDeep(design);\r\n    let array;\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      array = tempDesign.outlineData.overlays[currentPartName].layers;\r\n    } else {\r\n      array = tempDesign.outlineData.parts[currentPartName].layers;\r\n    }\r\n\r\n    if (layer === array.length - 1 && direction === 1) {\r\n      return;\r\n    } else if (layer === 0 && direction === -1) {\r\n      return;\r\n    } else {\r\n      let tempElement = array[layer];\r\n      array[layer] = array[layer + direction];\r\n      array[layer + direction] = tempElement;\r\n      if (\r\n        currentPartName === 'outerOverlay' ||\r\n        currentPartName === 'innerOverlay'\r\n      ) {\r\n        tempDesign.outlineData.overlays[currentPartName].layers = array;\r\n      } else {\r\n        tempDesign.outlineData.parts[currentPartName].layers = array;\r\n      }\r\n      handlePartChangeManager({\r\n        type: 'layer-moved',\r\n        partName: currentPartName,\r\n        layerIndex: layer,\r\n        direction,\r\n      });\r\n      setFocusLayer(focusLayer + direction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='layers-view-container'\r\n      onClick={(e) => handleClearFocusLayer(e.target.className)}\r\n    >\r\n      <PartSelector\r\n        design={design}\r\n        currentPart={currentPart}\r\n        setCurrentPart={setCurrentPart}\r\n        setFocusLayer={setFocusLayer}\r\n        setLayersView={setLayersView}\r\n      />\r\n\r\n      <div className='add-layer-button'>\r\n        <button onClick={() => setLayersView('AddLayerType')}>Add Layer</button>\r\n      </div>\r\n\r\n      <div className='layers-box-container'>\r\n        {allLayers.map((layer, i) => (\r\n          <div key={i} className='layer-list-items'>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === numberOfLayers - 1 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, 1)}>\r\n                  <FaChevronUp />\r\n                </button>\r\n              </div>\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === 0 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, -1)}>\r\n                  <FaChevronDown />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className='layer-list-item-middle'\r\n              onClick={() => handleFocusLayer(i)}\r\n            >\r\n              <div\r\n                className={`layer-list-item-left ${\r\n                  focusLayer === i ? 'focus-layer-highlight' : ''\r\n                }`}\r\n              >\r\n                <div className='layer-list-item-type'>\r\n                  {layer.type === 'overlay'\r\n                    ? handleConvertPartName(layer.source).toLowerCase()\r\n                    : layer.type}\r\n                </div>\r\n              </div>\r\n\r\n              {layer.type === 'color' ? (\r\n                <div\r\n                  className='layer-list-item-right'\r\n                  style={{\r\n                    backgroundColor: layer.color,\r\n                  }}\r\n                ></div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.source}Mask.png`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              {layer.type === 'color' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('GraphicEditor');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCurrentPart(\r\n                        design.configData.partsArray.indexOf(layer.source)\r\n                      );\r\n                      setFocusLayer(-1);\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {layer.type === 'overlay' ? (\r\n                <div className='edit-layer-button edit-layer-button-dead'>\r\n                  <button>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button onClick={() => handleDeleteLayer(i)}>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='standard-button layer-back-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerOverview;\r\n","import React from 'react';\r\nimport './MaskTypes.css';\r\n\r\nfunction MaskTypes({ props }) {\r\n  const { design, currentPartName, handleAddMaskLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Mask Type</p>\r\n      </div>\r\n\r\n      {design.configData.maskTypes[currentPartName].map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          <button\r\n            onClick={() => {\r\n              handleAddMaskLayer(type[0], type[1]);\r\n              setLayersView('LayerOverview');\r\n            }}\r\n          >\r\n            {type[0]}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskTypes;\r\n","import React from 'react';\r\nimport './PartList.css';\r\n\r\nfunction PartList({ props }) {\r\n  const { setCurrentPart, setLayersView, handleViewChange, design } = props;\r\n\r\n  return (\r\n    <div className='partlist-container'>\r\n      <div className='partlist-title'>\r\n        <p>Parts</p>\r\n      </div>\r\n      <div className='partlist-buttons'>\r\n        {design.configData.partsArray.map((part, i) => (\r\n          <div className='standard-button' key={i}>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentPart(i);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {part}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='standard-button bottom-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartList;\r\n","import React from 'react';\r\nimport './CurrentGraphics.css';\r\n\r\nfunction CurrentGraphics({ graphicsArray, handleAddGraphicLayer }) {\r\n  return (\r\n    <div className='current-graphics-container'>\r\n      {graphicsArray.map((graphic, i) => (\r\n        <div\r\n          className='current-graphics-item'\r\n          key={i}\r\n          onClick={() => handleAddGraphicLayer(graphic)}\r\n        >\r\n          <img src={`/api/assets/images/${graphic}`} alt='used-already'></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentGraphics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './GraphicPicker.css';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport CurrentGraphics from '../CurrentGraphics/CurrentGraphics';\r\n\r\nfunction GraphicPicker({ props }) {\r\n  const { setLayersView, handleAddLayer, design } = props;\r\n\r\n  const [warning, setWarning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [graphicsArray, setGraphicsArray] = useState();\r\n\r\n  useEffect(() => {\r\n    const getGraphicsArray = () => {\r\n      const graphics = [];\r\n\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          if (\r\n            design.outlineData.parts[property].layers[layer].type === 'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.parts[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type ===\r\n            'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.overlays[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!graphics[0]) {\r\n        return null;\r\n      } else {\r\n        return graphics;\r\n      }\r\n    };\r\n\r\n    setGraphicsArray(getGraphicsArray());\r\n  }, [design]);\r\n\r\n  const onFileChange = async (e) => {\r\n    const fileSize = (e.target.files[0].size / 1024 / 1024).toFixed(4); // MB\r\n    if (fileSize < 2) {\r\n      setIsLoading(true);\r\n      const file = e.target.files[0];\r\n      await uploadImage(file, true).then((data) => {\r\n        const awsFileName = convertAwsLink(data.image);\r\n        handleAddGraphicLayer(awsFileName);\r\n      });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  const handleAddGraphicLayer = (fileName) => {\r\n    handleAddLayer('Graphic', fileName);\r\n    setLayersView('LayerOverview');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='upload-image-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='upload-image-container'>\r\n      {graphicsArray && (\r\n        <div className='used-graphics'>\r\n          <CurrentGraphics\r\n            graphicsArray={graphicsArray}\r\n            handleAddGraphicLayer={handleAddGraphicLayer}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className='view-title'>\r\n        <p>Upload Image</p>\r\n      </div> */}\r\n      <div className='upload-image-input'>\r\n        <label htmlFor='image-input-id' className='upload-image-label'>\r\n          <input\r\n            onChange={(e) => onFileChange(e)}\r\n            id='image-input-id'\r\n            type='file'\r\n            name='myImage'\r\n            accept='image/png, image/jpeg, .png, .jpg'\r\n          />\r\n          Upload\r\n        </label>\r\n      </div>\r\n\r\n      {warning && (\r\n        <div className='file-size-warning'>\r\n          <p>file must be less that 2MB.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicPicker;\r\n","import AddLayerType from '../AddLayerType/AddLayerType';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\r\nimport LayerOverview from '../LayerOverview/LayerOverview';\r\nimport MaskTypes from '../MaskTypes/MaskTypes';\r\nimport PartList from '../PartList/PartList';\r\nimport GraphicPicker from '../GraphicPicker/GraphicPicker';\r\n\r\nconst LayerDictionary = {\r\n  AddLayerType: AddLayerType,\r\n  ColorPicker: ColorPicker,\r\n  GraphicEditor: GraphicEditor,\r\n  LayerOverview: LayerOverview,\r\n  MaskTypes: MaskTypes,\r\n  PartList: PartList,\r\n  GraphicPicker: GraphicPicker,\r\n};\r\n\r\nexport default LayerDictionary;\r\n","import React, { useState } from 'react';\r\nimport LayerDictionary from './Constants';\r\nimport './LayersView.css';\r\n\r\nfunction LayersView({\r\n  currentLayer,\r\n  currentPart,\r\n  design,\r\n  graphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handleViewChange,\r\n  setCurrentLayer,\r\n  setCurrentPart,\r\n  setCanSave,\r\n}) {\r\n  const [focusLayer, setFocusLayer] = useState();\r\n  const [layersView, setLayersView] = useState('PartList');\r\n\r\n  const currentPartName = Object.keys(design.configData.partsObject)[\r\n    currentPart\r\n  ];\r\n\r\n  let numberOfLayers;\r\n  let allLayers;\r\n\r\n  if (\r\n    currentPartName === 'outerOverlay' ||\r\n    currentPartName === 'innerOverlay'\r\n  ) {\r\n    numberOfLayers = design.outlineData.overlays[currentPartName].layers.length;\r\n    allLayers = design.outlineData.overlays[currentPartName].layers;\r\n  } else {\r\n    numberOfLayers = design.outlineData.parts[currentPartName].layers.length;\r\n    allLayers = design.outlineData.parts[currentPartName].layers;\r\n  }\r\n\r\n  const handleAddLayer = (type, fileName) => {\r\n    setCanSave(true);\r\n    if (fileName) {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n        fileName: fileName,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    } else {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    }\r\n  };\r\n\r\n  const handleAddMaskLayer = (maskType, maskLink) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-added',\r\n      partName: currentPartName,\r\n      layerType: 'Mask',\r\n      maskType,\r\n      maskLink,\r\n    });\r\n    setFocusLayer(numberOfLayers);\r\n  };\r\n\r\n  const Component = LayerDictionary[layersView];\r\n\r\n  const propsToPassDown = {\r\n    allLayers,\r\n    currentPart,\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    graphicVisualCanvas,\r\n    handleAddLayer,\r\n    handleAddMaskLayer,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    handleViewChange,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    numberOfLayers,\r\n    setCanSave,\r\n  };\r\n\r\n  return <Component props={propsToPassDown} />;\r\n}\r\n\r\nexport default LayersView;\r\n","import React from 'react';\r\nimport './ChangeDesignName.css';\r\nimport { cloneDeep, startCase } from 'lodash';\r\n\r\nfunction ChangeDesignName({ handleViewChange, design, setDesign, setCanSave }) {\r\n  const handleUpdateDesignName = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    const newTitle = startCase(\r\n      document.getElementById('design-name-input').value\r\n    );\r\n    tempDesign.title = newTitle;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Design Name</p>\r\n      </div>\r\n      <div className='designer-input-div'>\r\n        <input\r\n          type='text'\r\n          id='design-name-input'\r\n          className='designer-input'\r\n          defaultValue={design.title}\r\n        ></input>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleUpdateDesignName()}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDesignName;\r\n","import React, { useState } from 'react';\r\nimport './ChangeBaseColor.css';\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ChangeBaseColor({\r\n  handleViewChange,\r\n  design,\r\n  setDesign,\r\n  setCanSave,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [baseColor, setBaseColor] = useState(design.outlineData.baseColor);\r\n\r\n  const updateBaseColor = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    tempDesign.outlineData.baseColor = baseColor;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleUpdateBaseColor(tempDesign);\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex || color;\r\n    setBaseColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='base-color-selector'>\r\n        <CustomColor color={baseColor} onChangeComplete={handleColorChange} />\r\n      </div>\r\n      <div className='base-color-buttons'>\r\n        <div className='base-color-button'>\r\n          <button\r\n            onClick={() =>\r\n              handleColorChange(\r\n                '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n              )\r\n            }\r\n          >\r\n            Random\r\n          </button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => updateBaseColor()}>Apply</button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => handleViewChange('DesignPreview')}>\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeBaseColor;\r\n","import React, { useState } from 'react';\r\nimport './Interface.css';\r\nimport DesignPreview from '../DesignPreview/DesignPreview';\r\nimport LayersView from '../LayersView/LayersView';\r\nimport ChangeDesignName from '../ChangeDesignName/ChangeDesignName';\r\nimport ChangeBaseColor from '../ChangeBaseColor/ChangeBaseColor';\r\n\r\nfunction Interface({\r\n  design,\r\n  setDesign,\r\n  graphicVisualCanvas,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  camera,\r\n  orbitControls,\r\n  handleUpdateBaseColor,\r\n  userData,\r\n  currentPart,\r\n  setCurrentPart,\r\n  currentShoe,\r\n  setCurrentShoe,\r\n  shoeVisibility,\r\n  setShoeVisibility,\r\n}) {\r\n  // const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const [view, setView] = useState('DesignPreview');\r\n  const [canSave, setCanSave] = useState(false);\r\n\r\n  const handleViewChange = (viewChange) => {\r\n    setView(viewChange);\r\n  };\r\n\r\n  if (view === 'DesignPreview') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <DesignPreview\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          camera={camera}\r\n          orbitControls={orbitControls}\r\n          canSave={canSave}\r\n          setCanSave={setCanSave}\r\n          userData={userData}\r\n          currentShoe={currentShoe}\r\n          setCurrentShoe={setCurrentShoe}\r\n          shoeVisibility={shoeVisibility}\r\n          setShoeVisibility={setShoeVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'Layers') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <LayersView\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentLayer={currentLayer}\r\n          setCurrentLayer={setCurrentLayer}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeDesignName') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeDesignName\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeBaseColor') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeBaseColor\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;\r\n","import * as THREE from 'three';\r\n\r\nexport const createTexture = (textureCanvas) => {\r\n  const texture = new THREE.CanvasTexture(textureCanvas);\r\n  texture.flipY = false;\r\n  return texture;\r\n};\r\n\r\nexport const createCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  // const { baseColor } = design.outlineData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  const canvasCTX = canvas.getContext('2d');\r\n  canvasCTX.fillStyle = '#ffffff';\r\n  canvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n  return canvas;\r\n};\r\n\r\nexport const createGraphicVisualCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.id = 'graphic-visual-canvas';\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  return canvas;\r\n};\r\n","export const createColorLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    let { mask } = design.configData.partsObject[partName];\r\n    const { color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createGraphicLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { link, x, y, scale, rotation } = layer;\r\n    const { canvasSize } = design.configData;\r\n    // Create layerCanvas to be returned\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      // Get graphic's diagnal length (pythagorean)\r\n      const graphicWidth = graphicImg.width;\r\n      const graphicHeight = graphicImg.height;\r\n      const graphicPythagorean = Math.round(\r\n        Math.sqrt(graphicWidth * graphicWidth + graphicHeight * graphicHeight)\r\n      );\r\n      // Create Pythagorean Canvas\r\n      const pythagoreanCanvas = document.createElement('canvas');\r\n      pythagoreanCanvas.id = 'pythagorean-canvas';\r\n      pythagoreanCanvas.width = graphicPythagorean;\r\n      pythagoreanCanvas.height = graphicPythagorean;\r\n      const pythagoreanCTX = pythagoreanCanvas.getContext('2d');\r\n\r\n      function waitForElement() {\r\n        if (\r\n          pythagoreanCTX !== null &&\r\n          typeof pythagoreanCanvas === 'object' &&\r\n          layerCanvasCTX !== null &&\r\n          typeof layerCanvas === 'object'\r\n        ) {\r\n          // Translate context to the center of the canvas\r\n          pythagoreanCTX.translate(\r\n            pythagoreanCanvas.width / 2,\r\n            pythagoreanCanvas.height / 2\r\n          );\r\n          // Rotate context\r\n          pythagoreanCTX.rotate((rotation * Math.PI) / 180);\r\n          pythagoreanCTX.drawImage(\r\n            graphicImg,\r\n            graphicImg.width / -2,\r\n            graphicImg.height / -2,\r\n            graphicImg.width,\r\n            graphicImg.height\r\n          );\r\n          const maskImg = new Image();\r\n          maskImg.src = `/api/assets/images/${mask}`;\r\n          maskImg.onload = function () {\r\n            layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n            layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n            // Calculate new position\r\n            const newX = x + (canvasSize - canvasSize * scale) / 2;\r\n            const newY = y + (canvasSize - canvasSize * scale) / 2;\r\n            const newScale = canvasSize * scale;\r\n            // Draw graphic on layerCanvas\r\n            layerCanvasCTX.drawImage(\r\n              pythagoreanCanvas,\r\n              newX,\r\n              newY,\r\n              newScale,\r\n              newScale\r\n            );\r\n            resolve(layerCanvas);\r\n          };\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createMaskLayerCanvas = ({ design, layer }) => {\r\n  return new Promise((resolve) => {\r\n    const { link, color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(graphicImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createOverlayLayerCanvas = ({\r\n  design,\r\n  layer,\r\n  partName,\r\n  overlayCanvas,\r\n}) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { source } = layer;\r\n    const { x, y, scale, rotation } = design.configData.translations[source][\r\n      partName\r\n    ];\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.translate(canvasSize * x, canvasSize * y);\r\n          layerCanvasCTX.rotate(rotation);\r\n          layerCanvasCTX.drawImage(\r\n            overlayCanvas,\r\n            0,\r\n            0,\r\n            canvasSize * scale,\r\n            canvasSize * scale\r\n          );\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","import {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n// create canvasObject part with designObject part\r\nconst createCanvasObjectPart = async ({\r\n  design,\r\n  designLayers,\r\n  partName,\r\n  overlays,\r\n}) => {\r\n  const canvasLayers = [];\r\n\r\n  // For each layer in part of design object\r\n  for (let layer in designLayers) {\r\n    if (designLayers[layer].type === 'color') {\r\n      const thisLayer = await createColorLayerCanvas({\r\n        design,\r\n        layer: designLayers[layer],\r\n        partName,\r\n      });\r\n      canvasLayers.push(thisLayer);\r\n    } else if (designLayers[layer].type === 'graphic') {\r\n      canvasLayers.push(\r\n        await createGraphicLayerCanvas({\r\n          design,\r\n          layer: designLayers[layer],\r\n          partName,\r\n        })\r\n      );\r\n    } else if (designLayers[layer].type === 'mask') {\r\n      canvasLayers.push(\r\n        await createMaskLayerCanvas({ design, layer: designLayers[layer] })\r\n      );\r\n    } else if (designLayers[layer].type === 'overlay') {\r\n      if (designLayers[layer].source === 'outerOverlay') {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[0],\r\n          })\r\n        );\r\n      } else {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[1],\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return { layers: canvasLayers };\r\n};\r\n\r\n// Create Base Color Canvas Object\r\nconst createBaseColorCanvasObjectPart = async ({ design, partName }) => {\r\n  const canvas = await createColorLayerCanvas({\r\n    design,\r\n    layer: { color: design.outlineData.baseColor },\r\n    partName,\r\n  });\r\n  return canvas;\r\n};\r\n\r\n// turn designObject into canvasObject\r\nexport const designObjectToCanvasObject = ({ design, type, overlays }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvasObject = {};\r\n    const createAllParts = async () => {\r\n      if (type === 'partsCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.parts[partName].layers,\r\n            partName,\r\n            overlays,\r\n          });\r\n        }\r\n      } else if (type === 'overlaysCanvasObject') {\r\n        for (let partName in design.outlineData.overlays) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.overlays[partName].layers,\r\n            partName,\r\n          });\r\n        }\r\n      } else if (type === 'baseColorCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createBaseColorCanvasObjectPart({\r\n            design,\r\n            partName,\r\n          });\r\n        }\r\n      }\r\n      resolve(canvasObject);\r\n    };\r\n    createAllParts();\r\n  });\r\n};\r\n\r\nexport const overlayCanvasObjectToTextureCanvas = ({\r\n  design,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  partName,\r\n  graphicVisualCanvas,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const overlayCanvasCTX = overlayCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  overlayCanvasCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in overlayCanvasObject[partName].layers) {\r\n    const layerCanvas = overlayCanvasObject[partName].layers[layer];\r\n    overlayCanvasCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n\r\n// update graphicVisualCanvas\r\nexport const updateGraphicVisualCanvas = ({\r\n  design,\r\n  graphicVisualCanvas,\r\n  partName,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  if (baseColorCanvasObject[partName]) {\r\n    const baseColorCanvas = baseColorCanvasObject[partName];\r\n    graphicCTX.drawImage(baseColorCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n\r\n  for (let layer in canvasObject[partName].layers) {\r\n    const layerCanvas = canvasObject[partName].layers[layer];\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Part Change Functions\r\nexport const partChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer;\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      thisLayer = tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    } else {\r\n      thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    }\r\n\r\n    thisLayer.color = newColor;\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else if (layerType === 'Graphic') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    } else {\r\n      const { maskLink } = changeObject;\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'mask',\r\n        link: maskLink,\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    const layerObject = tempDesign.outlineData.parts[partName].layers.slice(\r\n      -1\r\n    )[0];\r\n    addLayerToCanvasObject({\r\n      canvasObject,\r\n      graphicVisualCanvas,\r\n      layerObject,\r\n      partName,\r\n      texture,\r\n      textureCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.parts[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.parts[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.parts[partName].layers.splice(layerIndex, 1);\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  canvasObject,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else if (layerObject.type === 'graphic') {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createMaskLayerCanvas({ design, layer: layerObject });\r\n  }\r\n  canvasObject[partName].layers[layerIndex] = layerCanvas;\r\n  // redraw part\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst addLayerToCanvasObject = async ({\r\n  canvasObject,\r\n  graphicVisualCanvas,\r\n  layerObject,\r\n  partName,\r\n  texture,\r\n  textureCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else {\r\n    const newLayerCanvas = await createMaskLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst deleteLayerFromCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  canvasObject[partName].layers.splice(layerIndex, 1);\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst moveLayerInCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = canvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  canvasObject[partName].layers = array;\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst redrawCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  graphicCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    graphicCTX.drawImage(\r\n      layerCanvas,\r\n      0,\r\n      0,\r\n      design.configData.canvasSize,\r\n      design.configData.canvasSize\r\n    );\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  overlayCanvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Overlay Change Functions\r\nexport const overlayChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  overlayCanvas,\r\n  overlayCanvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    thisLayer.color = newColor;\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    // add layers to design if this is the first overlay layer added\r\n    if (design.outlineData.overlays[partName].layers.length === 0) {\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        tempDesign.outlineData.parts[currentPart].layers.push({\r\n          type: 'overlay',\r\n          source: partName,\r\n        });\r\n      }\r\n    }\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    addLayerToOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerObject: tempDesign.outlineData.overlays[partName].layers.slice(\r\n        -1\r\n      )[0],\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.overlays[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.overlays[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.overlays[partName].layers.splice(layerIndex, 1);\r\n    if (tempDesign.outlineData.overlays[partName].layers.length === 0) {\r\n      // remove layers from design if this is the last overlay layer deleted\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        for (\r\n          let i = 0;\r\n          i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n          i++\r\n        ) {\r\n          const layerIndex = i;\r\n          if (\r\n            tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n            'overlay'\r\n          ) {\r\n            if (\r\n              tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n              partName\r\n            ) {\r\n              tempDesign.outlineData.parts[currentPart].layers.splice(\r\n                layerIndex,\r\n                1\r\n              );\r\n              canvasObject[currentPart].layers.splice(layerIndex, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOverlayLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  canvasObject,\r\n  textureCanvas,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  }\r\n  overlayCanvasObject[partName].layers[layerIndex] = layerCanvas;\r\n\r\n  // redraw part on overlayCanvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // update effected layers in canvas object\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst addLayerToOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n  // update effected layers in canvas object\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type === 'overlay'\r\n      ) {\r\n        if (\r\n          tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: tempDesign.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst moveLayerInOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = overlayCanvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  overlayCanvasObject[partName].layers = array;\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst deleteLayerFromOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  overlayCanvasObject[partName].layers.splice(layerIndex, 1);\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n          'overlay' &&\r\n        tempDesign.outlineData.parts[currentPart].layers[i].source === partName\r\n      ) {\r\n        const layerCanvas = await createOverlayLayerCanvas({\r\n          design,\r\n          layer: design.outlineData.parts[currentPart].layers[i],\r\n          partName: currentPart,\r\n          overlayCanvas,\r\n        });\r\n        canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n      }\r\n    }\r\n    // redraw effected parts in textureCanvas\r\n    redrawOverlayCanvasObjectPart({\r\n      textureCanvas,\r\n      canvasObjectPart: canvasObject[currentPart],\r\n      partName: currentPart,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst redrawOverlayCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n  }\r\n};\r\n","// turn canvasObject into a finalTexture\r\nexport const canvasObjectToTextureCanvas = ({\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n  size,\r\n  design,\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    const finalCanvasCTX = canvas.getContext('2d');\r\n\r\n    function waitForElement() {\r\n      if (typeof finalCanvasCTX !== 'undefined') {\r\n        for (let property in canvasObject) {\r\n          const { x, y, width, height } = design.configData.partsObject[\r\n            property\r\n          ];\r\n          const { divider } = design.configData;\r\n          finalCanvasCTX.drawImage(\r\n            baseColorCanvasObject[property],\r\n            x / divider,\r\n            y / divider,\r\n            width / divider,\r\n            height / divider\r\n          );\r\n          for (let layer in canvasObject[property].layers) {\r\n            const layerCanvas = canvasObject[property].layers[layer];\r\n            finalCanvasCTX.drawImage(\r\n              layerCanvas,\r\n              x / divider,\r\n              y / divider,\r\n              width / divider,\r\n              height / divider\r\n            );\r\n          }\r\n        }\r\n        resolve(canvas);\r\n      } else {\r\n        setTimeout(waitForElement, 100);\r\n      }\r\n    }\r\n    waitForElement();\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DesignerContainer.css';\r\nimport Scene from '../../components/Scene/Scene.js';\r\nimport Interface from '../../components/Interface/Interface.js';\r\nimport {\r\n  designObjectToCanvasObject,\r\n  updateGraphicVisualCanvas,\r\n  partChangeManager,\r\n  overlayCanvasObjectToTextureCanvas,\r\n  overlayChangeManager,\r\n} from '../../canvasFunctions';\r\nimport { canvasObjectToTextureCanvas } from '../../canvasFunctions';\r\n\r\nfunction DesignerContainer({\r\n  designSpec,\r\n  graphicVisualCanvas,\r\n  innerOverlayCanvas,\r\n  outerOverlayCanvas,\r\n  texture,\r\n  textureCanvas,\r\n  textureClone,\r\n  textureCanvasClone,\r\n  userData,\r\n}) {\r\n  console.log('designContainer');\r\n  const [design, setDesign] = useState(designSpec);\r\n  const [camera, setCamera] = useState(null);\r\n  const [orbitControls, setOrbitControls] = useState(null);\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentShoe, setCurrentShoe] = useState(0);\r\n  const [shoeVisibility, setShoeVisibility] = useState({\r\n    right: true,\r\n    left: true,\r\n  });\r\n  const [initialLoaded, setInitialLoaded] = useState(false);\r\n  const canvasObjectRef = useRef();\r\n  const overlaysCanvasObjectRef = useRef();\r\n  const baseColorCanvasObjectRef = useRef();\r\n\r\n  const handleUpdateGraphicVisualCanvas = (partName) => {\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePartChangeManager = (changeObject) => {\r\n    const { partName } = changeObject;\r\n    if (partName === 'outerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: outerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else if (partName === 'innerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: innerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      partChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateBaseColor = async (tempDesign) => {\r\n    // baseColor to baseColor Canvas Object\r\n    baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n    });\r\n    // Canvas Object to Canvas\r\n    const newCanvas = await canvasObjectToTextureCanvas({\r\n      canvasObject: canvasObjectRef.current,\r\n      baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      size: textureCanvas.height,\r\n      design,\r\n    });\r\n    // Canvas to Texture Canvas\r\n    textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n    texture.needsUpdate = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasObjectRef.current) {\r\n      const buildTexture = async () => {\r\n        // Overlay Canvas Object Created\r\n        overlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'overlaysCanvasObject',\r\n        });\r\n        // Outer Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: outerOverlayCanvas,\r\n          partName: 'outerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Inner Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: innerOverlayCanvas,\r\n          partName: 'innerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Design Object to Canvas Object\r\n        canvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'partsCanvasObject',\r\n          overlays: [outerOverlayCanvas, innerOverlayCanvas],\r\n        });\r\n        // baseColor to baseColor Canvas Object\r\n        baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'baseColorCanvasObject',\r\n        });\r\n        // Canvas Object to Canvas\r\n        const newCanvas = await canvasObjectToTextureCanvas({\r\n          canvasObject: canvasObjectRef.current,\r\n          baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n          size: textureCanvas.height,\r\n          design,\r\n        });\r\n        // Canvas to Texture Canvas\r\n        textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n        texture.needsUpdate = true;\r\n        setInitialLoaded(true);\r\n      };\r\n      buildTexture();\r\n    }\r\n  }, [\r\n    design,\r\n    graphicVisualCanvas,\r\n    innerOverlayCanvas,\r\n    outerOverlayCanvas,\r\n    texture.needsUpdate,\r\n    textureCanvas,\r\n  ]);\r\n\r\n  if (design && userData) {\r\n    return (\r\n      <div className='designer-container'>\r\n        <Scene\r\n          design={design}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n          textureClone={textureClone}\r\n          textureCanvasClone={textureCanvasClone}\r\n          initialLoaded={initialLoaded}\r\n          camera={camera}\r\n          setCamera={setCamera}\r\n          orbitControls={orbitControls}\r\n          setOrbitControls={setOrbitControls}\r\n          setCurrentPart={setCurrentPart}\r\n        />\r\n        <Interface\r\n          design={design}\r\n          setDesign={setDesign}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setInitialLoaded={setInitialLoaded}\r\n          camera={camera}\r\n          orbitControls={orbitControls}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n          userData={userData}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentShoe={currentShoe}\r\n          setCurrentShoe={setCurrentShoe}\r\n          shoeVisibility={shoeVisibility}\r\n          setShoeVisibility={setShoeVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>hi</div>;\r\n  }\r\n}\r\n\r\nexport default DesignerContainer;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport './Designer.css';\r\nimport DesignerContainer from '../../components/DesignerContainer/DesignerContainer';\r\nimport {\r\n  createTexture,\r\n  createCanvas,\r\n  createGraphicVisualCanvas,\r\n} from '../../canvasFunctions';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserProvider from '../../context/UserProvider';\r\n\r\nfunction Designer() {\r\n  console.log('designer');\r\n  const [designSpec, setDesignSpec] = useState(null);\r\n  const [graphicVisualCanvas, setGraphicVisualCanvas] = useState(null);\r\n  const [innerOverlayCanvas, setInnerOverlayCanvas] = useState(null);\r\n  const [outerOverlayCanvas, setOuterOverlayCanvas] = useState(null);\r\n  const [textureCanvas, setTextureCanvas] = useState(null);\r\n  const [texture, setTexture] = useState(null);\r\n  const [textureCanvasClone, setTextureCanvasClone] = useState(null);\r\n  const [textureClone, setTextureClone] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const setup = (data) => {\r\n    setDesignSpec(data);\r\n    setGraphicVisualCanvas(createGraphicVisualCanvas({ design: data }));\r\n    setInnerOverlayCanvas(createCanvas({ design: data }));\r\n    setOuterOverlayCanvas(createCanvas({ design: data }));\r\n    setTextureCanvas(createCanvas({ design: data }));\r\n    setTextureCanvasClone(createCanvas({ design: data }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      simpleFetch(`/api/outlines/${id}`, 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setup(data);\r\n        });\r\n    } else {\r\n      simpleFetch('/api/outlines/newdesign', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setup(data);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (textureCanvas && textureCanvasClone) {\r\n      setTexture(createTexture(textureCanvas));\r\n      setTextureClone(createTexture(textureCanvasClone));\r\n    }\r\n  }, [textureCanvas, textureCanvasClone]);\r\n\r\n  const initialized =\r\n    designSpec &&\r\n    graphicVisualCanvas &&\r\n    innerOverlayCanvas &&\r\n    outerOverlayCanvas &&\r\n    textureCanvas &&\r\n    texture &&\r\n    textureClone &&\r\n    textureCanvasClone &&\r\n    userData;\r\n\r\n  if (initialized) {\r\n    return (\r\n      <div className='designer-root-container'>\r\n        <DesignerContainer\r\n          designSpec={designSpec}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          innerOverlayCanvas={innerOverlayCanvas}\r\n          outerOverlayCanvas={outerOverlayCanvas}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n          textureClone={textureClone}\r\n          textureCanvasClone={textureCanvasClone}\r\n          userData={userData}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Designer;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/google`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/google`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-google-button'>\r\n        <button onClick={() => loginWithGoogle()}>Login With Google</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport './Profile.css';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const handleLogout = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/logout`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/logout`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <p className='basic-paragraph'>{userData.firstName}</p>\r\n      <p className='basic-paragraph'>{userData.email}</p>\r\n      <div className='basic-button'>\r\n        <button onClick={() => handleLogout()}>Log Out</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './NoPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <div className='no-page-container'>\r\n      <p className='basic-paragraph'>404 - PAGE NOT FOUND</p>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Home</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserProvider from './context/UserProvider';\r\nimport Landing from './pages/Landing/Landing';\r\nimport Designer from './pages/Designer/Designer';\r\nimport Login from './components/Login/Login';\r\nimport Profile from './components/Profile/Profile';\r\n\r\nimport NoPage from './components/NoPage/NoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Router>\r\n        <UserProvider>\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/designer' component={Designer} />\r\n            <Route exact path='/designer/:id' component={Designer} />\r\n            <Route path='*' component={NoPage} />\r\n          </Switch>\r\n        </UserProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/react';\r\nimport { Integrations } from '@sentry/tracing';\r\n\r\nSentry.init({\r\n  dsn:\r\n    'https://d98f16c7cc0f4230b7ba30f6a76ef259@o484792.ingest.sentry.io/5538538',\r\n  integrations: [new Integrations.BrowserTracing()],\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}