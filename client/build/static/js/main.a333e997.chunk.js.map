{"version":3,"sources":["context/UserProvider.js","components/NewDesignButton/NewDesignButton.js","components/FeaturedDesignCard/FeaturedDesignCard.js","components/MyDesignTiles/MyDesignTiles.js","helpers/fetchHelpers.js","pages/Landing/Landing.js","components/LoadingSpinner/LoadingSpinner.js","components/Scene/Scene.js","helpers/uploadImage.js","helpers/takeScreenshot.js","helpers/convertAwsLink.js","components/DesignPreview/DesignPreview.js","components/AddLayerType/AddLayerType.js","helpers/convertPartNames.js","components/CurrentColors/CurrentColors.js","components/CustomPointer/CustomPointer.js","components/CustomColor/CustomColor.js","components/ColorPicker/ColorPicker.js","components/GraphicEditor/GraphicEditor.js","components/PartSelector/PartSelector.js","components/LayerOverview/LayerOverview.js","components/MaskTypes/MaskTypes.js","components/PartList/PartList.js","components/CurrentGraphics/CurrentGraphics.js","components/GraphicPicker/GraphicPicker.js","components/LayersView/Constants.js","components/LayersView/LayersView.js","components/ChangeDesignName/ChangeDesignName.js","components/ChangeBaseColor/ChangeBaseColor.js","components/Interface/Interface.js","canvasFunctions/setup/setup.js","canvasFunctions/create/createCanvasFunctions.js","canvasFunctions/create/createColorLayerCanvas.js","canvasFunctions/create/createGraphicLayerCanvas.js","canvasFunctions/create/createMaskLayerCanvas.js","canvasFunctions/create/createOverlayLayerCanvas.js","canvasFunctions/create/initialFunctions.js","canvasFunctions/update/partChangeManager.js","canvasFunctions/update/overlayChangeManager.js","canvasFunctions/update/canvasObjectToTextureCanvas.js","components/DesignerContainer/DesignerContainer.js","pages/Designer/Designer.js","components/Login/Login.js","components/Profile/Profile.js","components/NoPage/NoPage.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","method","credentials","then","res","json","data","err","Provider","value","NewDesignButton","userData","history","useHistory","className","onClick","push","FeaturedDesignCard","props","_id","title","configId","author","screenshot","src","alt","modelName","firstName","MyDesignTiles","myDesigns","map","design","key","to","simpleFetch","link","designFetch","body","headers","JSON","stringify","Landing","useContext","featured","setFeatured","setMyDesigns","LoadingSpinner","id","Scene","rightTexture","leftTexture","initialLoaded","camera","setCamera","orbitControls","setOrbitControls","setCurrentPart","isLoading","setIsLoading","sceneBuilt","setSceneBuilt","renderer","setRenderer","rightMaterial","setRightMaterial","leftMaterial","setLeftMaterial","threeCanvasRef","useRef","createRightMaterial","a","createMaterial","mat","createLeftMaterial","texture","aoName","Promise","resolve","aoimg","Image","configData","source","onload","ao","THREE","flipY","aoMap","antialias","preserveDrawingBuffer","alpha","setSize","current","appendChild","domElement","position","z","y","layers","enable","controls","OrbitControls","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enablePan","enableDamping","dampingFactor","update","scene","light","add","manager","onLoad","textureLoader","raycaster","GLTFLoader","load","modelRight","gltf","traverse","node","isMesh","material","set","rightModel","scale","rotation","leftModel","clone","redMapRight","mouse","img","image","textureCanvas","document","createElement","width","height","textureCanvasCTX","getContext","waitForElement","drawImage","setTimeout","drag","addEventListener","event","preventDefault","box","getBoundingClientRect","x","clientX","clientY","setFromCamera","intersects","intersectObjects","length","uv","uv2","getImageData","setupRaycasting","render","requestAnimationFrame","cancelAnimationFrame","ref","uploadImage","file","isNew","formData","FormData","append","takeScreenshot","fileName","threeCanvas","getElementById","firstElementChild","newCanvas","dataUrl","toDataURL","blobBin","atob","split","array","i","charCodeAt","blob","Blob","Uint8Array","type","name","lastModifiedDate","Date","File","convertAwsLink","url","awsFileName","DesignPreview","handleViewChange","canSave","setCanSave","currentShoe","setCurrentShoe","shoeVisibility","setShoeVisibility","loading","setLoading","handleSaveDesign","imageName","outlineData","window","location","href","handleCurrentShoe","shoe","right","cameraPosition","target","visObj","left","toggle","handleToggleShoeVisible","index","style","color","baseColor","enableAll","AddLayerType","currentPartName","handleAddLayer","setLayersView","layerTypes","types","handleConvertPartName","partName","converted","join","charAt","toUpperCase","substr","CurrentColors","colorsArray","handleColorChange","backgroundColor","CustomPointer","CustomPicker","hex","hsl","hsv","onChange","styles","hue","marginBottom","overflow","saturation","input","border","borderRadius","fontSize","WebkitAppearance","WebkitBorderRadius","paddingLeft","boxShadow","display","swatch","background","inputContainer","pointer","ColorPicker","currentLayer","handlePartChangeManager","currentColor","setCurrentColor","setColorsArray","colors","property","parts","layer","thisColor","includes","overlays","getDesignColors","newColor","layerIndex","floor","random","toString","onChangeComplete","GraphicEditor","graphicVisualCanvas","handleUpdateGraphicVisualCanvas","handleMoveGraphic","direction","distance","div","innerHTML","placeGraphicVisual","PartSelector","currentPart","setFocusLayer","numberOfParts","partsArray","arrayOfParts","handlePartChange","LayerOverview","allLayers","focusLayer","numberOfLayers","setCurrentLayer","handleCurrentLayer","handleMoveLayer","tempDesign","cloneDeep","tempElement","e","handleFocusLayer","toLowerCase","objectFit","indexOf","handleDeleteLayer","MaskTypes","handleAddMaskLayer","maskTypes","PartList","part","CurrentGraphics","graphicsArray","handleAddGraphicLayer","graphic","GraphicPicker","LayerDictionary","warning","setWarning","setGraphicsArray","graphics","thisGraphic","getGraphicsArray","onFileChange","files","size","toFixed","htmlFor","accept","LayersView","layersView","Object","keys","partsObject","Component","propsToPassDown","layerType","maskType","maskLink","ChangeDesignName","setDesign","defaultValue","newTitle","startCase","handleUpdateDesignName","ChangeBaseColor","handleUpdateBaseColor","setBaseColor","baseColors","updateBaseColor","Interface","view","setView","viewChange","setup","setInitialLoaded","rightInnerOverlayCanvas","rightOuterOverlayCanvas","rightTextureCanvas","leftInnerOverlayCanvas","leftOuterOverlayCanvas","leftTextureCanvas","rightCanvasObjectRef","rightOverlaysCanvasObjectRef","rightBaseColorCanvasObjectRef","leftBaseColorCanvasObjectRef","leftCanvasObjectRef","leftOverlaysCanvasObjectRef","designObjectToCanvasObject","overlayCanvasObjectToTextureCanvas","overlayCanvasObject","overlayCanvas","canvasObjectToTextureCanvas","canvasObject","baseColorCanvasObject","rightCanvas","leftCanvas","needsUpdate","createTexture","createCanvas","canvasSize","canvas","canvasCTX","fillStyle","fillRect","createGraphicVisualCanvas","createColorLayerCanvas","mask","layerCanvas","layerCanvasCTX","maskImg","globalCompositeOperation","createGraphicLayerCanvas","graphicImg","graphicWidth","graphicHeight","graphicPythagorean","round","sqrt","pythagoreanCanvas","pythagoreanCTX","translate","rotate","newX","newY","newScale","createMaskLayerCanvas","createOverlayLayerCanvas","translations","createCanvasObjectPart","designLayers","canvasLayers","thisLayer","createBaseColorCanvasObjectPart","reject","createAllParts","overlayCanvasCTX","graphicCTX","clearRect","updateGraphicVisualCanvas","baseColorCanvas","updateLayer","layerObject","redrawCanvasObjectPart","canvasObjectPart","addLayerToCanvasObject","newLayerCanvas","deleteLayerFromCanvasObject","splice","moveLayerInCanvasObject","divider","overlayChangeManager","changeObject","updateOverlayLayer","effectedParts","overlayParts","addLayerToOverlayCanvasObject","slice","moveLayerInOverlayCanvasObject","deleteLayerFromOverlayCanvasObject","redrawOverlayCanvasObjectPart","finalCanvasCTX","DesignerContainer","designSpec","console","log","partChangeManager","Designer","useParams","setDesignSpec","setGraphicVisualCanvas","setRightInnerOverlayCanvas","setRightOuterOverlayCanvas","setRightTextureCanvas","setRightTexture","setLeftInnerOverlayCanvas","setLeftOuterOverlayCanvas","setLeftTextureCanvas","setLeftTexture","canvasOne","canvasTwo","canvasThree","canvasFour","canvasFive","canvasSix","Login","open","Profile","email","NoPage","App","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a333e997.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('/auth/getsession', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n        } else {\r\n          setUser(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <context.Provider value={user}>{children}</context.Provider>;\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport './NewDesignButton.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NewDesignButton({ userData }) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='new-design-button standard-button'\r\n      onClick={() => handleClick()}\r\n    >\r\n      <button>N E W &nbsp; D E S I G N</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDesignButton;\r\n","import React from 'react';\r\nimport './FeaturedDesignCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction FeaturedDesignCard({ props, userData }) {\r\n  const { _id, title, configId, author, screenshot } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer/${_id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='featureddesigncard-container' onClick={() => handleClick()}>\r\n      <div className='featureddesigncard-image'>\r\n        <img src={`api/assets/images/${screenshot}`} alt='feature-design' />\r\n      </div>\r\n\r\n      <p className='featureddesigncard-title'>{title}</p>\r\n      <p className='featureddesigncard-model'>{configId.modelName}</p>\r\n      <p className='featureddesigncard-author'>{author.firstName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedDesignCard;\r\n","import React from 'react';\r\nimport './MyDesignTiles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyDesignTiles({ myDesigns }) {\r\n  return (\r\n    <div className='mydesigntiles-container'>\r\n      <div>\r\n        <p className='landing-section-label'>MY DESIGNS</p>\r\n      </div>\r\n      <div className='my-designs-grid'>\r\n        {myDesigns.map((design, key) => (\r\n          <Link\r\n            key={key}\r\n            to={`/designer/${design._id}`}\r\n            className='link-to-designer'\r\n          >\r\n            <div className='my-design-tile'>\r\n              <img\r\n                src={`/api/assets/images/${design.screenshot}`}\r\n                alt='my-design-preview'\r\n              />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyDesignTiles;\r\n","export const simpleFetch = (link, method) => {\r\n  return fetch(link, { method: method });\r\n};\r\n\r\nexport const designFetch = (link, method, body) => {\r\n  return fetch(link, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './Landing.css';\r\nimport NewDesignButton from '../../components/NewDesignButton/NewDesignButton';\r\nimport FeaturedDesignCard from '../../components/FeaturedDesignCard/FeaturedDesignCard';\r\nimport MyDesignTiles from '../../components/MyDesignTiles/MyDesignTiles';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Landing() {\r\n  const userData = useContext(UserProvider.context);\r\n  const [featured, setFeatured] = useState();\r\n  const [myDesigns, setMyDesigns] = useState();\r\n\r\n  useEffect(() => {\r\n    simpleFetch('/api/featured', 'GET')\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatured(data));\r\n\r\n    if (userData) {\r\n      simpleFetch('/api/outlines/mydesigns', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => setMyDesigns(data));\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-header'>\r\n        <p>\r\n          <strong>Sole</strong> Composer\r\n        </p>\r\n        {userData ? (\r\n          <Link to='/profile'>{userData.firstName}</Link>\r\n        ) : (\r\n          <Link to='/login'>Login</Link>\r\n        )}\r\n      </div>\r\n      <div className='landing-content'>\r\n        <div className='featured-designs-container'>\r\n          <p className='landing-section-label'>FEATURED</p>\r\n          <div className='feature-designs'>\r\n            {featured\r\n              ? featured.featured.map((design, key) => (\r\n                  <FeaturedDesignCard\r\n                    props={design}\r\n                    userData={userData}\r\n                    key={key}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n\r\n        {userData ? (\r\n          <NewDesignButton userData={userData} />\r\n        ) : (\r\n          <Link to='/login'>\r\n            <div className='landing-button'>\r\n              <button>Get Started</button>\r\n            </div>\r\n          </Link>\r\n        )}\r\n\r\n        {myDesigns && <MyDesignTiles myDesigns={myDesigns} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div id='loading-screen'>\r\n      <div id='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Scene.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Scene = ({\r\n  design,\r\n  rightTexture,\r\n  leftTexture,\r\n  initialLoaded,\r\n  camera,\r\n  setCamera,\r\n  orbitControls,\r\n  setOrbitControls,\r\n  setCurrentPart,\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [sceneBuilt, setSceneBuilt] = useState(false);\r\n  const [renderer, setRenderer] = useState(null);\r\n  const [rightMaterial, setRightMaterial] = useState(null);\r\n  const [leftMaterial, setLeftMaterial] = useState(null);\r\n\r\n  const threeCanvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!sceneBuilt) {\r\n      const createMaterial = (texture, aoName) => {\r\n        return new Promise((resolve) => {\r\n          const aoimg = new Image();\r\n          aoimg.src = `/api/assets/images/${design.configData.source[aoName]}`;\r\n\r\n          aoimg.onload = () => {\r\n            const ao = new THREE.CanvasTexture(aoimg);\r\n            ao.flipY = false;\r\n            resolve(\r\n              new THREE.MeshStandardMaterial({\r\n                map: texture,\r\n                aoMap: ao,\r\n              })\r\n            );\r\n          };\r\n        });\r\n      };\r\n\r\n      setRenderer(\r\n        new THREE.WebGLRenderer({\r\n          antialias: true,\r\n          preserveDrawingBuffer: true,\r\n          alpha: true,\r\n        })\r\n      );\r\n\r\n      async function createRightMaterial() {\r\n        const mat = await createMaterial(rightTexture, 'aoMapRight');\r\n        setRightMaterial(mat);\r\n      }\r\n      createRightMaterial();\r\n\r\n      async function createLeftMaterial() {\r\n        const mat = await createMaterial(leftTexture, 'aoMapLeft');\r\n        setLeftMaterial(mat);\r\n      }\r\n      createLeftMaterial();\r\n    }\r\n  }, [sceneBuilt, rightTexture, leftTexture, design.configData.source]);\r\n\r\n  useEffect(() => {\r\n    if (renderer && rightMaterial && leftMaterial && !sceneBuilt) {\r\n      //===================================================== camera\r\n      renderer.setSize(2048, 2048);\r\n      threeCanvasRef.current.appendChild(renderer.domElement);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 8.5;\r\n      camera.position.y = 0;\r\n      camera.layers.enable(1);\r\n      camera.layers.enable(2);\r\n      setCamera(camera);\r\n\r\n      //===================================================== orbit controls\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.maxDistance = 10;\r\n      controls.minDistance = 4;\r\n      controls.minPolarAngle = Math.PI * (1 / 5);\r\n      controls.maxPolarAngle = Math.PI * (6 / 7);\r\n      controls.enablePan = false;\r\n      controls.enableDamping = true;\r\n      controls.dampingFactor = 0.18;\r\n      controls.update();\r\n      setOrbitControls(controls);\r\n    }\r\n  }, [\r\n    sceneBuilt,\r\n    renderer,\r\n    rightMaterial,\r\n    leftMaterial,\r\n    setCamera,\r\n    setOrbitControls,\r\n  ]);\r\n\r\n  // Build threeJS Scene\r\n  useEffect(() => {\r\n    if (\r\n      renderer &&\r\n      rightMaterial &&\r\n      leftMaterial &&\r\n      camera &&\r\n      orbitControls &&\r\n      !sceneBuilt\r\n    ) {\r\n      //===================================================== scene\r\n      const scene = new THREE.Scene();\r\n\r\n      //===================================================== lights\r\n      const light = new THREE.AmbientLight(0xffffff, 1);\r\n      scene.add(light);\r\n\r\n      //===================================================== loading mananger\r\n      const manager = new THREE.LoadingManager();\r\n      manager.onLoad = () => {\r\n        setIsLoading(false);\r\n      };\r\n\r\n      //===================================================== raycasting\r\n      const textureLoader = new THREE.TextureLoader();\r\n      const raycaster = new THREE.Raycaster();\r\n      raycaster.layers.enable(1);\r\n      raycaster.layers.enable(2);\r\n\r\n      const setupRaycasting = (rightModel, leftModel) => {\r\n        textureLoader.load(\r\n          `/api/assets/images/${design.configData.source.redMapRight}`,\r\n          (texture) => {\r\n            const mouse = new THREE.Vector2();\r\n            const img = texture.image;\r\n            const textureCanvas = document.createElement('canvas');\r\n            textureCanvas.width = img.width;\r\n            textureCanvas.height = img.height;\r\n            const textureCanvasCTX = textureCanvas.getContext('2d');\r\n\r\n            function waitForElement() {\r\n              if (\r\n                textureCanvasCTX !== null &&\r\n                typeof textureCanvas === 'object'\r\n              ) {\r\n                textureCanvasCTX.drawImage(img, 0, 0, img.width, img.height);\r\n              } else {\r\n                setTimeout(waitForElement, 100);\r\n              }\r\n            }\r\n            waitForElement();\r\n\r\n            let drag = false;\r\n\r\n            renderer.domElement.addEventListener('pointerdown', (event) => {\r\n              drag = false;\r\n            });\r\n\r\n            renderer.domElement.addEventListener('pointermove', (event) => {\r\n              event.preventDefault();\r\n              drag = true;\r\n            });\r\n\r\n            renderer.domElement.addEventListener('pointerup', (event) => {\r\n              event.preventDefault();\r\n              if (!drag) {\r\n                // check intersections with imported model\r\n                const box = renderer.domElement.getBoundingClientRect();\r\n\r\n                mouse.x = (event.clientX / box.width) * 2 - 1;\r\n                mouse.y = -(event.clientY / box.height) * 2 + 1;\r\n\r\n                raycaster.setFromCamera(mouse, camera);\r\n\r\n                const intersects = raycaster.intersectObjects(\r\n                  [rightModel, leftModel],\r\n                  true\r\n                );\r\n\r\n                // if there is any intersection, continues\r\n                if (intersects.length) {\r\n                  // get pixel coordinates on texture\r\n                  const uv = intersects[0].uv2;\r\n                  uv.x *= img.width;\r\n                  uv.y *= img.height;\r\n\r\n                  // get pixel value\r\n                  const colorValues = textureCanvas\r\n                    .getContext('2d')\r\n                    .getImageData(uv.x, uv.y, 1, 1).data;\r\n\r\n                  switch (colorValues[0]) {\r\n                    case 255:\r\n                      setCurrentPart(4);\r\n                      break;\r\n\r\n                    case 220:\r\n                      setCurrentPart(2);\r\n                      break;\r\n\r\n                    case 210:\r\n                      setCurrentPart(0);\r\n                      break;\r\n\r\n                    case 200:\r\n                      setCurrentPart(5);\r\n                      break;\r\n\r\n                    case 190:\r\n                      setCurrentPart(3);\r\n                      break;\r\n\r\n                    case 180:\r\n                      setCurrentPart(1);\r\n                      break;\r\n\r\n                    case 170:\r\n                      setCurrentPart(16);\r\n                      break;\r\n\r\n                    case 160:\r\n                      setCurrentPart(15);\r\n                      break;\r\n\r\n                    case 150:\r\n                      setCurrentPart(14);\r\n                      break;\r\n\r\n                    case 140:\r\n                      setCurrentPart(9);\r\n                      break;\r\n\r\n                    case 130:\r\n                      setCurrentPart(13);\r\n                      break;\r\n\r\n                    case 120:\r\n                      setCurrentPart(11);\r\n                      break;\r\n\r\n                    case 110:\r\n                      setCurrentPart(12);\r\n                      break;\r\n\r\n                    case 100:\r\n                      setCurrentPart(8);\r\n                      break;\r\n\r\n                    case 90:\r\n                      setCurrentPart(10);\r\n                      break;\r\n\r\n                    case 80:\r\n                      setCurrentPart(7);\r\n                      break;\r\n\r\n                    case 70:\r\n                      setCurrentPart(6);\r\n                      break;\r\n\r\n                    case 60:\r\n                      setCurrentPart(17);\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          }\r\n        );\r\n      };\r\n\r\n      //===================================================== models\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(\r\n        `/api/assets/images/${design.configData.source.modelRight}`,\r\n        (gltf) => {\r\n          gltf.scene.traverse((node) => {\r\n            if (node.isMesh) {\r\n              node.material = rightMaterial;\r\n              node.layers.set(1);\r\n            }\r\n          });\r\n          const rightModel = gltf.scene;\r\n\r\n          rightModel.scale.set(0.35, 0.35, 0.35);\r\n          rightModel.position.y = -1;\r\n          rightModel.position.z = 1.25;\r\n          rightModel.rotation.y = -95 * (Math.PI / 180);\r\n          scene.add(rightModel);\r\n\r\n          const leftModel = gltf.scene.clone();\r\n\r\n          leftModel.scale.set(-0.35, 0.35, 0.35);\r\n          leftModel.position.y = -1;\r\n          leftModel.position.z = -1.25;\r\n          leftModel.rotation.y = -95 * (Math.PI / 180);\r\n          scene.add(leftModel);\r\n\r\n          leftModel.traverse((node) => {\r\n            if (node.isMesh) {\r\n              node.material = leftMaterial;\r\n              node.layers.set(2);\r\n            }\r\n          });\r\n\r\n          setupRaycasting(rightModel, leftModel);\r\n        }\r\n      );\r\n\r\n      //===================================================== animate\r\n      const render = () => {\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n        orbitControls.update();\r\n      };\r\n\r\n      render();\r\n\r\n      setSceneBuilt(true);\r\n\r\n      //===================================================== cleanup\r\n      const cleanup = () => {\r\n        cancelAnimationFrame(render);\r\n        // orbitControls.dispose();\r\n      };\r\n\r\n      return cleanup;\r\n    }\r\n  }, [\r\n    sceneBuilt,\r\n    rightMaterial,\r\n    leftMaterial,\r\n    renderer,\r\n    camera,\r\n    design.configData.source,\r\n    setCurrentPart,\r\n    orbitControls,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      className='scene-container'\r\n      id='scene-container-id'\r\n      ref={threeCanvasRef}\r\n    >\r\n      {!isLoading && initialLoaded ? null : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","export const uploadImage = (file, isNew) => {\r\n  const formData = new FormData();\r\n  if (isNew) {\r\n    formData.append('image', file, 'newImage');\r\n  } else {\r\n    formData.append('image', file);\r\n  }\r\n\r\n  return fetch('/api/assets/uploadimage', {\r\n    method: 'POST',\r\n    body: formData,\r\n  }).then((res) => res.json());\r\n};\r\n","export const takeScreenshot = (camera, fileName) => {\r\n  return new Promise((resolve) => {\r\n    camera.position.set(0, 0, 8.5);\r\n    setTimeout(() => {\r\n      const threeCanvas = document.getElementById('scene-container-id')\r\n        .firstElementChild;\r\n      const newCanvas = document.createElement('canvas');\r\n      newCanvas.width = 1024;\r\n      newCanvas.height = 1024;\r\n      const newCanvasCtx = newCanvas.getContext('2d');\r\n      newCanvasCtx.drawImage(threeCanvas, 0, 0, 1024, 1024);\r\n\r\n      const dataUrl = newCanvas.toDataURL('image/png');\r\n\r\n      var blobBin = atob(dataUrl.split(',')[1]);\r\n      var array = [];\r\n      for (var i = 0; i < blobBin.length; i++) {\r\n        array.push(blobBin.charCodeAt(i));\r\n      }\r\n      var blob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n      blob.name = 'theBlob';\r\n      blob.lastModifiedDate = new Date();\r\n      var file = new File([blob], fileName, { type: 'image/png' });\r\n      resolve(file);\r\n    }, 500);\r\n  });\r\n};\r\n","export const convertAwsLink = (url) => {\r\n  let awsFileName = url.split('/');\r\n  awsFileName = awsFileName[awsFileName.length - 1];\r\n  return awsFileName;\r\n};\r\n","import React, { useState } from 'react';\r\nimport './DesignPreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { takeScreenshot } from '../../helpers/takeScreenshot';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport { designFetch } from '../../helpers/fetchHelpers';\r\nimport {\r\n  FaPen,\r\n  FaLayerGroup,\r\n  FaTrashAlt,\r\n  FaSave,\r\n  FaTimes,\r\n  FaCamera,\r\n  FaSquare,\r\n  FaEye,\r\n} from 'react-icons/fa';\r\n\r\nfunction DesignPreview({\r\n  handleViewChange,\r\n  design,\r\n  camera,\r\n  orbitControls,\r\n  canSave,\r\n  setCanSave,\r\n  userData,\r\n  currentShoe,\r\n  setCurrentShoe,\r\n  shoeVisibility,\r\n  setShoeVisibility,\r\n}) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSaveDesign = async () => {\r\n    setCanSave(false);\r\n    // if new design\r\n    if (!design.author) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, 'newImage');\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch('/api/outlines', 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n    // if design is mine\r\n    else if (design.author === userData._id) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, false).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: design.author,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/${design._id}`, 'PUT', body);\r\n        setLoading(false);\r\n      });\r\n    }\r\n    // if design is not mine\r\n    else {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/`, 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteDesign = () => {\r\n    if (userData._id === design.author) {\r\n      fetch(`/api/outlines/${design._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const handleResetCamera = () => {\r\n    camera.layers.enableAll();\r\n    orbitControls.target.set(0, 0, 0);\r\n    setShoeVisibility({ right: true, left: true });\r\n    camera.position.set(0, 0, 8.5);\r\n  };\r\n\r\n  const handleCurrentShoe = (shoe) => {\r\n    // if right shoe\r\n    if (shoe === 'right' && shoe !== currentShoe) {\r\n      if (shoeVisibility.right) {\r\n        setCurrentShoe(shoe);\r\n      } else {\r\n        let cameraPosition = camera.position;\r\n        orbitControls.target.set(0, 0, 1.25);\r\n        camera.position.set(\r\n          cameraPosition.x,\r\n          cameraPosition.y,\r\n          cameraPosition.z + 2.5\r\n        );\r\n        // L => R\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = true;\r\n        visObj.left = false;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(1);\r\n        camera.layers.toggle(2);\r\n        setCurrentShoe(shoe);\r\n      }\r\n    }\r\n    // if left shoe\r\n    else if (shoe === 'left' && shoe !== currentShoe) {\r\n      if (shoeVisibility.left) {\r\n        setCurrentShoe(shoe);\r\n      } else {\r\n        let cameraPosition = camera.position;\r\n        orbitControls.target.set(0, 0, -1.25);\r\n        camera.position.set(\r\n          cameraPosition.x,\r\n          cameraPosition.y,\r\n          cameraPosition.z - 2.5\r\n        );\r\n        // R => L\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = false;\r\n        visObj.left = true;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(1);\r\n        camera.layers.toggle(2);\r\n        setCurrentShoe(shoe);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleShoeVisible = (index) => {\r\n    // if toggle right\r\n    if (index === 1) {\r\n      // if left is current - toggle right\r\n      if (currentShoe === 'left') {\r\n        if (shoeVisibility.right) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // LR => L\r\n        } else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 0);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // L => LR\r\n        }\r\n\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.right = !visObj.right;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(index);\r\n      }\r\n      // if right is current, we know it's visible\r\n      else if (currentShoe === 'right') {\r\n        // if left is visible - make left current, make right invisible\r\n        if (shoeVisibility.left) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // LR => L\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = false;\r\n          setShoeVisibility(visObj);\r\n\r\n          setCurrentShoe('left');\r\n          camera.layers.toggle(index);\r\n        }\r\n        // if left is invisible - make left visible and current, make right invisible\r\n        else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, -1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 2.5\r\n          );\r\n          // R => L\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = !visObj.right;\r\n          visObj.left = !visObj.left;\r\n          setShoeVisibility(visObj);\r\n\r\n          camera.layers.toggle(1);\r\n          camera.layers.toggle(2);\r\n          setCurrentShoe('left');\r\n        }\r\n      }\r\n    }\r\n    // if toggle left\r\n    else if (index === 2) {\r\n      // if right is current - toggle left\r\n      if (currentShoe === 'right') {\r\n        if (shoeVisibility.left) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // LR => R\r\n        } else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 0);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z - 1.25\r\n          );\r\n          // R => LR\r\n        }\r\n\r\n        let visObj = { ...shoeVisibility };\r\n        visObj.left = !visObj.left;\r\n        setShoeVisibility(visObj);\r\n\r\n        camera.layers.toggle(index);\r\n      }\r\n      // if left is current, we know it's visible\r\n      else if (currentShoe === 'left') {\r\n        // if right is visible - make right current, make left invisible\r\n        if (shoeVisibility.right) {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 1.25\r\n          );\r\n          // LR => R\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.left = false;\r\n          setShoeVisibility(visObj);\r\n\r\n          setCurrentShoe('right');\r\n          camera.layers.toggle(index);\r\n        }\r\n        // if right is invisible - make right visible and current, make left invisible\r\n        else {\r\n          let cameraPosition = camera.position;\r\n          orbitControls.target.set(0, 0, 1.25);\r\n          camera.position.set(\r\n            cameraPosition.x,\r\n            cameraPosition.y,\r\n            cameraPosition.z + 2.5\r\n          );\r\n          // L => R\r\n          let visObj = { ...shoeVisibility };\r\n          visObj.right = !visObj.right;\r\n          visObj.left = !visObj.left;\r\n          setShoeVisibility(visObj);\r\n\r\n          camera.layers.toggle(1);\r\n          camera.layers.toggle(2);\r\n          setCurrentShoe('right');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (userData) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div className='design-preview-info'>\r\n          <div className='design-title-container'>\r\n            <p className='design-title'>{design.title}</p>\r\n            <button\r\n              className='edit-design-title-button'\r\n              onClick={() => handleViewChange('ChangeDesignName')}\r\n            >\r\n              <FaPen />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='design-preview-buttons'>\r\n          <div className='design-preview-toggle-container'>\r\n            <div className='design-preview-toggle-left'>\r\n              <div\r\n                className={`design-preview-toggle-shoe ${\r\n                  currentShoe === 'right' ? null : 'disabled-shoe'\r\n                }`}\r\n                onClick={() => {\r\n                  handleCurrentShoe('right');\r\n                }}\r\n              >\r\n                <p>Right</p>\r\n              </div>\r\n              <div\r\n                className={`design-preview-toggle-shoe ${\r\n                  currentShoe === 'left' ? null : 'disabled-shoe'\r\n                }`}\r\n                onClick={() => {\r\n                  handleCurrentShoe('left');\r\n                }}\r\n              >\r\n                <p>Left</p>\r\n              </div>\r\n            </div>\r\n            <div className='design-preview-toggle-right'>\r\n              <div\r\n                className={`design-preview-toggle-visible ${\r\n                  shoeVisibility.right ? null : 'disabled-visibility'\r\n                }`}\r\n                onClick={() => {\r\n                  handleToggleShoeVisible(1);\r\n                }}\r\n              >\r\n                <FaEye />\r\n              </div>\r\n              <div\r\n                className={`design-preview-toggle-visible ${\r\n                  shoeVisibility.left ? null : 'disabled-visibility'\r\n                }`}\r\n                onClick={() => {\r\n                  handleToggleShoeVisible(2);\r\n                }}\r\n              >\r\n                <FaEye />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('ChangeBaseColor')}\r\n          >\r\n            <div\r\n              className='design-preview-button-icon'\r\n              style={{ color: design.outlineData.baseColor }}\r\n            >\r\n              <FaSquare />\r\n            </div>\r\n            <button>Base Color</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('Layers')}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaLayerGroup />\r\n            </div>\r\n            <button>Layers</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleResetCamera();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaCamera />\r\n            </div>\r\n            <button>Reset Camera</button>\r\n          </div>\r\n          {canSave ? (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleSaveDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          ) : (\r\n            <div className='design-preview-button save-deactivated'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          )}\r\n          {design.author === userData._id && (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleDeleteDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaTrashAlt />\r\n              </div>\r\n              <button>Delete</button>\r\n            </div>\r\n          )}\r\n          <Link to='/'>\r\n            <div className='design-preview-button'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaTimes />\r\n              </div>\r\n              <button>Exit</button>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>no data</div>;\r\n  }\r\n}\r\n\r\nexport default DesignPreview;\r\n","import React from 'react';\r\nimport './AddLayerType.css';\r\n\r\nfunction AddLayerType({ props }) {\r\n  const { design, currentPartName, handleAddLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Layer Type</p>\r\n      </div>\r\n      {design.configData.layerTypes[currentPartName].types.map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          {type === 'Mask' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('MaskTypes');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : type === 'Graphic' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('GraphicPicker');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                handleAddLayer(type);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLayerType;\r\n","export const handleConvertPartName = (partName) => {\r\n  let converted = partName.split(/(?=[A-Z])/).join(' ');\r\n  return converted.charAt(0).toUpperCase() + converted.substr(1);\r\n};\r\n","import React from 'react';\r\nimport './CurrentColors.css';\r\n\r\nfunction CurrentColors({ colorsArray, handleColorChange }) {\r\n  return (\r\n    <div className='current-colors-container'>\r\n      <div className='current-colors-scroll'>\r\n        {colorsArray.map((color, i) => (\r\n          <button\r\n            key={i}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handleColorChange(color)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentColors;\r\n","import React from 'react';\r\nimport './CustomPointer.css';\r\n\r\nconst CustomPointer = () => {\r\n  return <div className='custom-pointer'></div>;\r\n};\r\n\r\nexport default CustomPointer;\r\n","import React from 'react';\r\nimport './CustomColor.css';\r\nimport { CustomPicker } from 'react-color';\r\nimport CustomPointer from '../CustomPointer/CustomPointer';\r\nimport {\r\n  EditableInput,\r\n  Hue,\r\n  Saturation,\r\n} from 'react-color/lib/components/common';\r\n\r\nexport const CustomColor = ({ hex, hsl, hsv, onChange }) => {\r\n  const styles = {\r\n    hue: {\r\n      height: 15,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    saturation: {\r\n      width: '100%',\r\n      height: 120,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    input: {\r\n      width: '50%',\r\n      height: '30px',\r\n      border: 'none',\r\n      borderRadius: 'none',\r\n      fontSize: '.7rem',\r\n      // border: `1px solid ${hex}`,\r\n      WebkitAppearance: 'none',\r\n      WebkitBorderRadius: 0,\r\n      paddingLeft: 10,\r\n      boxShadow: 'none',\r\n      display: 'block',\r\n    },\r\n    swatch: {\r\n      width: '100%',\r\n      height: '100%',\r\n      background: hex,\r\n    },\r\n    inputContainer: {\r\n      background: hex,\r\n    },\r\n  };\r\n  return (\r\n    <div className='custom-color'>\r\n      <div style={styles.hue}>\r\n        <Hue hsl={hsl} onChange={onChange} pointer={CustomPointer} />\r\n      </div>\r\n\r\n      <div style={styles.saturation}>\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          onChange={onChange}\r\n          pointer={CustomPointer}\r\n        />\r\n      </div>\r\n\r\n      <div className='color-input' style={styles.inputContainer}>\r\n        <EditableInput\r\n          style={{ input: styles.input }}\r\n          className='custom-color-input'\r\n          value={hex}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(CustomColor);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport CurrentColors from '../CurrentColors/CurrentColors';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ColorPicker({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    handlePartChangeManager,\r\n    setLayersView,\r\n    setCanSave,\r\n    currentShoe,\r\n  } = props;\r\n\r\n  const [currentColor, setCurrentColor] = useState('#ffffaa');\r\n  const [colorsArray, setColorsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDesignColors = () => {\r\n      const colors = [];\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property][currentShoe]) {\r\n          const type =\r\n            design.outlineData.parts[property][currentShoe][layer].type;\r\n          if (type === 'color' || type === 'mask') {\r\n            const thisColor =\r\n              design.outlineData.parts[property][currentShoe][layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property][\r\n          currentShoe\r\n        ]) {\r\n          if (\r\n            design.outlineData.overlays[property][currentShoe][layer].type ===\r\n            'color'\r\n          ) {\r\n            const thisColor =\r\n              design.outlineData.overlays[property][currentShoe][layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const baseColor = design.outlineData.baseColor;\r\n\r\n      if (!colors.includes(baseColor)) {\r\n        colors.push(baseColor);\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    setColorsArray(getDesignColors());\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      setCurrentColor(\r\n        design.outlineData.overlays[currentPartName][currentShoe][currentLayer]\r\n          .color\r\n      );\r\n    } else {\r\n      setCurrentColor(\r\n        design.outlineData.parts[currentPartName][currentShoe][currentLayer]\r\n          .color\r\n      );\r\n    }\r\n  }, [design, currentPartName, currentLayer, setColorsArray, currentShoe]);\r\n\r\n  const handleColorChange = (color) => {\r\n    setCanSave(true);\r\n    const newColor = color.hex || color;\r\n    setCurrentColor(color);\r\n    handlePartChangeManager({\r\n      type: 'color-changed',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      newColor,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='color-picker-container'>\r\n      <div className='view-title'>\r\n        <p>{handleConvertPartName(currentPartName)}</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CurrentColors\r\n          colorsArray={colorsArray}\r\n          handleColorChange={handleColorChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomColor\r\n          color={currentColor}\r\n          onChangeComplete={handleColorChange}\r\n        />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowsAlt,\r\n  FaArrowUp,\r\n  FaCompressArrowsAlt,\r\n  FaRedoAlt,\r\n  FaUndoAlt,\r\n} from 'react-icons/fa';\r\nimport './GraphicEditor.css';\r\n\r\nfunction GraphicEditor({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    graphicVisualCanvas,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleMoveGraphic = (direction, distance) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'graphic-moved',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      direction,\r\n      distance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const placeGraphicVisual = () => {\r\n      let div = document.getElementById('graphic-visual-container');\r\n      div.innerHTML = '';\r\n      div.appendChild(graphicVisualCanvas);\r\n    };\r\n    placeGraphicVisual();\r\n    handleUpdateGraphicVisualCanvas(currentPartName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='graphic-editor-container'>\r\n      <div className='graphic-editor-upper'>\r\n        <div className='graphic-editor-buttons' id='edit-buttons-div'>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='up-button'\r\n            onClick={() => handleMoveGraphic('vert', -30)}\r\n          >\r\n            <FaArrowUp />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='down-button'\r\n            onClick={() => handleMoveGraphic('vert', 30)}\r\n          >\r\n            <FaArrowDown />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='left-button'\r\n            onClick={() => handleMoveGraphic('hor', -30)}\r\n          >\r\n            <FaArrowLeft />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='right-button'\r\n            onClick={() => handleMoveGraphic('hor', 30)}\r\n          >\r\n            <FaArrowRight />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-up-button'\r\n            onClick={() => handleMoveGraphic('scale', 1.1)}\r\n          >\r\n            <FaArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-down-button'\r\n            onClick={() => handleMoveGraphic('scale', 0.9)}\r\n          >\r\n            <FaCompressArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='clockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', 5)}\r\n          >\r\n            <FaRedoAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='counterclockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', -5)}\r\n          >\r\n            <FaUndoAlt />\r\n          </button>\r\n        </div>\r\n        <div id='graphic-visual-container'></div>\r\n      </div>\r\n      <div className='graphic-editor-lower'>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => handleMoveGraphic('reset', 0)}>Reset</button>\r\n        </div>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicEditor;\r\n","import React from 'react';\r\nimport './PartSelector.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\n\r\nfunction PartSelector({\r\n  design,\r\n  currentPart,\r\n  setCurrentPart,\r\n  setFocusLayer,\r\n  setLayersView,\r\n}) {\r\n  const numberOfParts = design.configData.partsArray.length;\r\n  const arrayOfParts = design.configData.partsArray;\r\n\r\n  const handlePartChange = (i) => {\r\n    if (currentPart === 0 && i < 0) {\r\n      setCurrentPart(numberOfParts - 1);\r\n    } else if (currentPart === numberOfParts - 1 && i > 0) {\r\n      setCurrentPart(0);\r\n    } else {\r\n      setCurrentPart(currentPart + i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='part-selector-container'>\r\n      <div>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(-1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button\r\n          className='partname-button'\r\n          onClick={() => {\r\n            setLayersView('PartList');\r\n          }}\r\n        >\r\n          {handleConvertPartName(arrayOfParts[currentPart])}\r\n        </button>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartSelector;\r\n","import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './LayerOverview.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport { FaChevronUp, FaChevronDown, FaPen, FaTimes } from 'react-icons/fa';\r\nimport PartSelector from '../PartSelector/PartSelector';\r\n\r\nfunction LayerOverview({ props }) {\r\n  const {\r\n    allLayers,\r\n    currentPart,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    handlePartChangeManager,\r\n    handleViewChange,\r\n    numberOfLayers,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    setCanSave,\r\n    currentShoe,\r\n  } = props;\r\n\r\n  const handleFocusLayer = (i) => {\r\n    setFocusLayer(i);\r\n  };\r\n\r\n  const handleClearFocusLayer = (aClass) => {\r\n    if (aClass === 'layers-view-container') {\r\n      setFocusLayer(-1);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLayer = (key) => {\r\n    setCurrentLayer(key);\r\n  };\r\n\r\n  const handleDeleteLayer = (layer) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-deleted',\r\n      partName: currentPartName,\r\n      layerIndex: layer,\r\n    });\r\n    setFocusLayer(-1);\r\n  };\r\n\r\n  const handleMoveLayer = (layer, direction) => {\r\n    setCanSave(true);\r\n    const tempDesign = cloneDeep(design);\r\n    let array;\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      array = tempDesign.outlineData.overlays[currentPartName][currentShoe];\r\n    } else {\r\n      array = tempDesign.outlineData.parts[currentPartName][currentShoe];\r\n    }\r\n\r\n    if (layer === array.length - 1 && direction === 1) {\r\n      return;\r\n    } else if (layer === 0 && direction === -1) {\r\n      return;\r\n    } else {\r\n      let tempElement = array[layer];\r\n      array[layer] = array[layer + direction];\r\n      array[layer + direction] = tempElement;\r\n      if (\r\n        currentPartName === 'outerOverlay' ||\r\n        currentPartName === 'innerOverlay'\r\n      ) {\r\n        tempDesign.outlineData.overlays[currentPartName][currentShoe] = array;\r\n      } else {\r\n        tempDesign.outlineData.parts[currentPartName][currentShoe] = array;\r\n      }\r\n      handlePartChangeManager({\r\n        type: 'layer-moved',\r\n        partName: currentPartName,\r\n        layerIndex: layer,\r\n        direction,\r\n      });\r\n      setFocusLayer(focusLayer + direction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='layers-view-container'\r\n      onClick={(e) => handleClearFocusLayer(e.target.className)}\r\n    >\r\n      <PartSelector\r\n        design={design}\r\n        currentPart={currentPart}\r\n        setCurrentPart={setCurrentPart}\r\n        setFocusLayer={setFocusLayer}\r\n        setLayersView={setLayersView}\r\n      />\r\n\r\n      <div className='add-layer-button'>\r\n        <button onClick={() => setLayersView('AddLayerType')}>Add Layer</button>\r\n      </div>\r\n\r\n      <div className='layers-box-container'>\r\n        {allLayers.map((layer, i) => (\r\n          <div key={i} className='layer-list-items'>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === numberOfLayers - 1 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, 1)}>\r\n                  <FaChevronUp />\r\n                </button>\r\n              </div>\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === 0 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, -1)}>\r\n                  <FaChevronDown />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className='layer-list-item-middle'\r\n              onClick={() => handleFocusLayer(i)}\r\n            >\r\n              <div\r\n                className={`layer-list-item-left ${\r\n                  focusLayer === i ? 'focus-layer-highlight' : ''\r\n                }`}\r\n              >\r\n                <div className='layer-list-item-type'>\r\n                  {layer.type === 'overlay'\r\n                    ? handleConvertPartName(layer.source).toLowerCase()\r\n                    : layer.type}\r\n                </div>\r\n              </div>\r\n\r\n              {layer.type === 'color' ? (\r\n                <div\r\n                  className='layer-list-item-right'\r\n                  style={{\r\n                    backgroundColor: layer.color,\r\n                  }}\r\n                ></div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.source}Mask.png`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              {layer.type === 'color' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('GraphicEditor');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCurrentPart(\r\n                        design.configData.partsArray.indexOf(layer.source)\r\n                      );\r\n                      setFocusLayer(-1);\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {layer.type === 'overlay' ? (\r\n                <div className='edit-layer-button edit-layer-button-dead'>\r\n                  <button>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button onClick={() => handleDeleteLayer(i)}>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='standard-button layer-back-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerOverview;\r\n","import React from 'react';\r\nimport './MaskTypes.css';\r\n\r\nfunction MaskTypes({ props }) {\r\n  const { design, currentPartName, handleAddMaskLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Mask Type</p>\r\n      </div>\r\n\r\n      {design.configData.maskTypes[currentPartName].map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          <button\r\n            onClick={() => {\r\n              handleAddMaskLayer(type[0], type[1]);\r\n              setLayersView('LayerOverview');\r\n            }}\r\n          >\r\n            {type[0]}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskTypes;\r\n","import React from 'react';\r\nimport './PartList.css';\r\n\r\nfunction PartList({ props }) {\r\n  const { setCurrentPart, setLayersView, handleViewChange, design } = props;\r\n\r\n  return (\r\n    <div className='partlist-container'>\r\n      <div className='partlist-title'>\r\n        <p>Parts</p>\r\n      </div>\r\n      <div className='partlist-buttons'>\r\n        {design.configData.partsArray.map((part, i) => (\r\n          <div className='standard-button' key={i}>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentPart(i);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {part}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='standard-button bottom-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartList;\r\n","import React from 'react';\r\nimport './CurrentGraphics.css';\r\n\r\nfunction CurrentGraphics({ graphicsArray, handleAddGraphicLayer }) {\r\n  return (\r\n    <div className='current-graphics-container'>\r\n      {graphicsArray.map((graphic, i) => (\r\n        <div\r\n          className='current-graphics-item'\r\n          key={i}\r\n          onClick={() => handleAddGraphicLayer(graphic)}\r\n        >\r\n          <img src={`/api/assets/images/${graphic}`} alt='used-already'></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentGraphics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './GraphicPicker.css';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport CurrentGraphics from '../CurrentGraphics/CurrentGraphics';\r\n\r\nfunction GraphicPicker({ props }) {\r\n  const { setLayersView, handleAddLayer, design } = props;\r\n\r\n  const [warning, setWarning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [graphicsArray, setGraphicsArray] = useState();\r\n\r\n  useEffect(() => {\r\n    const getGraphicsArray = () => {\r\n      const graphics = [];\r\n\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          if (\r\n            design.outlineData.parts[property].layers[layer].type === 'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.parts[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type ===\r\n            'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.overlays[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!graphics[0]) {\r\n        return null;\r\n      } else {\r\n        return graphics;\r\n      }\r\n    };\r\n\r\n    setGraphicsArray(getGraphicsArray());\r\n  }, [design]);\r\n\r\n  const onFileChange = async (e) => {\r\n    const fileSize = (e.target.files[0].size / 1024 / 1024).toFixed(4); // MB\r\n    if (fileSize < 2) {\r\n      setIsLoading(true);\r\n      const file = e.target.files[0];\r\n      await uploadImage(file, true).then((data) => {\r\n        const awsFileName = convertAwsLink(data.image);\r\n        handleAddGraphicLayer(awsFileName);\r\n      });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  const handleAddGraphicLayer = (fileName) => {\r\n    handleAddLayer('Graphic', fileName);\r\n    setLayersView('LayerOverview');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='upload-image-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='upload-image-container'>\r\n      {graphicsArray && (\r\n        <div className='used-graphics'>\r\n          <CurrentGraphics\r\n            graphicsArray={graphicsArray}\r\n            handleAddGraphicLayer={handleAddGraphicLayer}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className='view-title'>\r\n        <p>Upload Image</p>\r\n      </div> */}\r\n      <div className='upload-image-input'>\r\n        <label htmlFor='image-input-id' className='upload-image-label'>\r\n          <input\r\n            onChange={(e) => onFileChange(e)}\r\n            id='image-input-id'\r\n            type='file'\r\n            name='myImage'\r\n            accept='image/png, image/jpeg, .png, .jpg'\r\n          />\r\n          Upload\r\n        </label>\r\n      </div>\r\n\r\n      {warning && (\r\n        <div className='file-size-warning'>\r\n          <p>file must be less that 2MB.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicPicker;\r\n","import AddLayerType from '../AddLayerType/AddLayerType';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\r\nimport LayerOverview from '../LayerOverview/LayerOverview';\r\nimport MaskTypes from '../MaskTypes/MaskTypes';\r\nimport PartList from '../PartList/PartList';\r\nimport GraphicPicker from '../GraphicPicker/GraphicPicker';\r\n\r\nconst LayerDictionary = {\r\n  AddLayerType: AddLayerType,\r\n  ColorPicker: ColorPicker,\r\n  GraphicEditor: GraphicEditor,\r\n  LayerOverview: LayerOverview,\r\n  MaskTypes: MaskTypes,\r\n  PartList: PartList,\r\n  GraphicPicker: GraphicPicker,\r\n};\r\n\r\nexport default LayerDictionary;\r\n","import React, { useState } from 'react';\r\nimport LayerDictionary from './Constants';\r\nimport './LayersView.css';\r\n\r\nfunction LayersView({\r\n  currentLayer,\r\n  currentPart,\r\n  design,\r\n  graphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handleViewChange,\r\n  setCurrentLayer,\r\n  setCurrentPart,\r\n  setCanSave,\r\n  currentShoe,\r\n}) {\r\n  const [focusLayer, setFocusLayer] = useState();\r\n  const [layersView, setLayersView] = useState('PartList');\r\n\r\n  const currentPartName = Object.keys(design.configData.partsObject)[\r\n    currentPart\r\n  ];\r\n\r\n  let numberOfLayers;\r\n  let allLayers;\r\n\r\n  if (\r\n    currentPartName === 'outerOverlay' ||\r\n    currentPartName === 'innerOverlay'\r\n  ) {\r\n    numberOfLayers =\r\n      design.outlineData.overlays[currentPartName][currentShoe].length;\r\n    allLayers = design.outlineData.overlays[currentPartName][currentShoe];\r\n  } else {\r\n    // console.log(design.outlineData.parts[currentPartName], currentShoe);\r\n    numberOfLayers =\r\n      design.outlineData.parts[currentPartName][currentShoe].length;\r\n    allLayers = design.outlineData.parts[currentPartName][currentShoe];\r\n  }\r\n\r\n  const handleAddLayer = (type, fileName) => {\r\n    setCanSave(true);\r\n    if (fileName) {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n        fileName: fileName,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    } else {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    }\r\n  };\r\n\r\n  const handleAddMaskLayer = (maskType, maskLink) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-added',\r\n      partName: currentPartName,\r\n      layerType: 'Mask',\r\n      maskType,\r\n      maskLink,\r\n    });\r\n    setFocusLayer(numberOfLayers);\r\n  };\r\n\r\n  const Component = LayerDictionary[layersView];\r\n\r\n  const propsToPassDown = {\r\n    allLayers,\r\n    currentPart,\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    graphicVisualCanvas,\r\n    handleAddLayer,\r\n    handleAddMaskLayer,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    handleViewChange,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    numberOfLayers,\r\n    setCanSave,\r\n    currentShoe,\r\n  };\r\n\r\n  return <Component props={propsToPassDown} />;\r\n}\r\n\r\nexport default LayersView;\r\n","import React from 'react';\r\nimport './ChangeDesignName.css';\r\nimport { cloneDeep, startCase } from 'lodash';\r\n\r\nfunction ChangeDesignName({ handleViewChange, design, setDesign, setCanSave }) {\r\n  const handleUpdateDesignName = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    const newTitle = startCase(\r\n      document.getElementById('design-name-input').value\r\n    );\r\n    tempDesign.title = newTitle;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Design Name</p>\r\n      </div>\r\n      <div className='designer-input-div'>\r\n        <input\r\n          type='text'\r\n          id='design-name-input'\r\n          className='designer-input'\r\n          defaultValue={design.title}\r\n        ></input>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleUpdateDesignName()}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDesignName;\r\n","import React, { useState } from 'react';\r\nimport './ChangeBaseColor.css';\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ChangeBaseColor({\r\n  handleViewChange,\r\n  design,\r\n  setDesign,\r\n  setCanSave,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [baseColor, setBaseColor] = useState(design.outlineData.baseColor);\r\n\r\n  const updateBaseColor = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    tempDesign.outlineData.baseColors.right = baseColor;\r\n    tempDesign.outlineData.baseColors.left = baseColor;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleUpdateBaseColor(tempDesign);\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex || color;\r\n    setBaseColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='base-color-selector'>\r\n        <CustomColor color={baseColor} onChangeComplete={handleColorChange} />\r\n      </div>\r\n      <div className='base-color-buttons'>\r\n        <div className='base-color-button'>\r\n          <button\r\n            onClick={() =>\r\n              handleColorChange(\r\n                '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n              )\r\n            }\r\n          >\r\n            Random\r\n          </button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => updateBaseColor()}>Apply</button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => handleViewChange('DesignPreview')}>\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeBaseColor;\r\n","import React, { useState } from 'react';\r\nimport './Interface.css';\r\nimport DesignPreview from '../DesignPreview/DesignPreview';\r\nimport LayersView from '../LayersView/LayersView';\r\nimport ChangeDesignName from '../ChangeDesignName/ChangeDesignName';\r\nimport ChangeBaseColor from '../ChangeBaseColor/ChangeBaseColor';\r\n\r\nfunction Interface({\r\n  design,\r\n  setDesign,\r\n  graphicVisualCanvas,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  camera,\r\n  orbitControls,\r\n  handleUpdateBaseColor,\r\n  userData,\r\n  currentPart,\r\n  setCurrentPart,\r\n  currentShoe,\r\n  setCurrentShoe,\r\n  shoeVisibility,\r\n  setShoeVisibility,\r\n}) {\r\n  // const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const [view, setView] = useState('DesignPreview');\r\n  const [canSave, setCanSave] = useState(false);\r\n\r\n  const handleViewChange = (viewChange) => {\r\n    setView(viewChange);\r\n  };\r\n\r\n  if (view === 'DesignPreview') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <DesignPreview\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          camera={camera}\r\n          orbitControls={orbitControls}\r\n          canSave={canSave}\r\n          setCanSave={setCanSave}\r\n          userData={userData}\r\n          currentShoe={currentShoe}\r\n          setCurrentShoe={setCurrentShoe}\r\n          shoeVisibility={shoeVisibility}\r\n          setShoeVisibility={setShoeVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'Layers') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <LayersView\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          currentShoe={currentShoe}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentLayer={currentLayer}\r\n          setCurrentLayer={setCurrentLayer}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeDesignName') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeDesignName\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeBaseColor') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeBaseColor\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;\r\n","import {\r\n  designObjectToCanvasObject,\r\n  overlayCanvasObjectToTextureCanvas,\r\n  canvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\nexport const setup = async ({\r\n  setInitialLoaded,\r\n  design,\r\n  graphicVisualCanvas,\r\n  rightInnerOverlayCanvas,\r\n  rightOuterOverlayCanvas,\r\n  rightTexture,\r\n  rightTextureCanvas,\r\n  leftInnerOverlayCanvas,\r\n  leftOuterOverlayCanvas,\r\n  leftTexture,\r\n  leftTextureCanvas,\r\n  rightCanvasObjectRef,\r\n  rightOverlaysCanvasObjectRef,\r\n  rightBaseColorCanvasObjectRef,\r\n  leftBaseColorCanvasObjectRef,\r\n  leftCanvasObjectRef,\r\n  leftOverlaysCanvasObjectRef,\r\n}) => {\r\n  // Create Overlay Canvas Objects\r\n  rightOverlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'overlaysCanvasObject',\r\n    shoe: 'right',\r\n  });\r\n  leftOverlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'overlaysCanvasObject',\r\n    shoe: 'left',\r\n  });\r\n\r\n  // Outer Overlay Canvas Object to Texture Canvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject: rightOverlaysCanvasObjectRef.current,\r\n    overlayCanvas: rightOuterOverlayCanvas,\r\n    partName: 'outerOverlay',\r\n    graphicVisualCanvas,\r\n  });\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject: leftOverlaysCanvasObjectRef.current,\r\n    overlayCanvas: leftOuterOverlayCanvas,\r\n    partName: 'outerOverlay',\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // Inner Overlay Canvas Object to Texture Canvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject: rightOverlaysCanvasObjectRef.current,\r\n    overlayCanvas: rightInnerOverlayCanvas,\r\n    partName: 'innerOverlay',\r\n    graphicVisualCanvas,\r\n  });\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject: leftOverlaysCanvasObjectRef.current,\r\n    overlayCanvas: leftInnerOverlayCanvas,\r\n    partName: 'innerOverlay',\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // Design Object to Canvas Object\r\n  rightCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'partsCanvasObject',\r\n    overlays: [rightOuterOverlayCanvas, rightInnerOverlayCanvas],\r\n    shoe: 'right',\r\n  });\r\n  leftCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'partsCanvasObject',\r\n    overlays: [leftOuterOverlayCanvas, leftInnerOverlayCanvas],\r\n    shoe: 'left',\r\n  });\r\n\r\n  // baseColor to baseColor Canvas Object\r\n  rightBaseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'baseColorCanvasObject',\r\n    shoe: 'right',\r\n  });\r\n  leftBaseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n    design,\r\n    type: 'baseColorCanvasObject',\r\n    shoe: 'left',\r\n  });\r\n\r\n  // Canvas Object to Canvas\r\n  const rightCanvas = await canvasObjectToTextureCanvas({\r\n    design,\r\n    canvasObject: rightCanvasObjectRef.current,\r\n    baseColorCanvasObject: rightBaseColorCanvasObjectRef.current,\r\n  });\r\n  const leftCanvas = await canvasObjectToTextureCanvas({\r\n    design,\r\n    canvasObject: leftCanvasObjectRef.current,\r\n    baseColorCanvasObject: leftBaseColorCanvasObjectRef.current,\r\n  });\r\n\r\n  // Canvas to Texture Canvas\r\n  rightTextureCanvas.getContext('2d').drawImage(rightCanvas, 0, 0);\r\n  rightTexture.needsUpdate = true;\r\n  leftTextureCanvas.getContext('2d').drawImage(leftCanvas, 0, 0);\r\n  leftTexture.needsUpdate = true;\r\n  setInitialLoaded(true);\r\n};\r\n","import * as THREE from 'three';\r\n\r\nexport const createTexture = (textureCanvas) => {\r\n  const texture = new THREE.CanvasTexture(textureCanvas);\r\n  texture.flipY = false;\r\n  return texture;\r\n};\r\n\r\nexport const createCanvas = ({ design }) => {\r\n  return new Promise((resolve) => {\r\n    const { canvasSize } = design.configData;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = canvasSize;\r\n    canvas.height = canvasSize;\r\n    const canvasCTX = canvas.getContext('2d');\r\n\r\n    function waitForElement() {\r\n      if (canvasCTX !== null && typeof canvas === 'object') {\r\n        canvasCTX.fillStyle = '#ffffff';\r\n        canvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n        resolve(canvas);\r\n      } else {\r\n        setTimeout(waitForElement, 100);\r\n      }\r\n    }\r\n    waitForElement();\r\n  });\r\n};\r\n\r\nexport const createGraphicVisualCanvas = ({ design }) => {\r\n  // console.log('createGraphicVisualCanvas');\r\n  const { canvasSize } = design.configData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.id = 'graphic-visual-canvas';\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  return canvas;\r\n};\r\n","export const createColorLayerCanvas = ({ design, layer, partName }) => {\r\n  // console.log('createColorLayerCanvas');\r\n  // console.log(layer);\r\n  return new Promise((resolve) => {\r\n    let { mask } = design.configData.partsObject[partName];\r\n    const { color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createGraphicLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { link, x, y, scale, rotation } = layer;\r\n    const { canvasSize } = design.configData;\r\n    // Create layerCanvas to be returned\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      // Get graphic's diagnal length (pythagorean)\r\n      const graphicWidth = graphicImg.width;\r\n      const graphicHeight = graphicImg.height;\r\n      const graphicPythagorean = Math.round(\r\n        Math.sqrt(graphicWidth * graphicWidth + graphicHeight * graphicHeight)\r\n      );\r\n      // Create Pythagorean Canvas\r\n      const pythagoreanCanvas = document.createElement('canvas');\r\n      pythagoreanCanvas.id = 'pythagorean-canvas';\r\n      pythagoreanCanvas.width = graphicPythagorean;\r\n      pythagoreanCanvas.height = graphicPythagorean;\r\n      const pythagoreanCTX = pythagoreanCanvas.getContext('2d');\r\n\r\n      function waitForElement() {\r\n        if (\r\n          pythagoreanCTX !== null &&\r\n          typeof pythagoreanCanvas === 'object' &&\r\n          layerCanvasCTX !== null &&\r\n          typeof layerCanvas === 'object'\r\n        ) {\r\n          // Translate context to the center of the canvas\r\n          pythagoreanCTX.translate(\r\n            pythagoreanCanvas.width / 2,\r\n            pythagoreanCanvas.height / 2\r\n          );\r\n          // Rotate context\r\n          pythagoreanCTX.rotate((rotation * Math.PI) / 180);\r\n          pythagoreanCTX.drawImage(\r\n            graphicImg,\r\n            graphicImg.width / -2,\r\n            graphicImg.height / -2,\r\n            graphicImg.width,\r\n            graphicImg.height\r\n          );\r\n          const maskImg = new Image();\r\n          maskImg.src = `/api/assets/images/${mask}`;\r\n          maskImg.onload = function () {\r\n            layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n            layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n            // Calculate new position\r\n            const newX = x + (canvasSize - canvasSize * scale) / 2;\r\n            const newY = y + (canvasSize - canvasSize * scale) / 2;\r\n            const newScale = canvasSize * scale;\r\n            // Draw graphic on layerCanvas\r\n            layerCanvasCTX.drawImage(\r\n              pythagoreanCanvas,\r\n              newX,\r\n              newY,\r\n              newScale,\r\n              newScale\r\n            );\r\n            resolve(layerCanvas);\r\n          };\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createMaskLayerCanvas = ({ design, layer }) => {\r\n  return new Promise((resolve) => {\r\n    const { link, color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(graphicImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createOverlayLayerCanvas = ({\r\n  design,\r\n  layer,\r\n  partName,\r\n  overlayCanvas,\r\n}) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { source } = layer;\r\n    const { x, y, scale, rotation } = design.configData.translations[source][\r\n      partName\r\n    ];\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      function waitForElement() {\r\n        if (layerCanvasCTX !== null && typeof layerCanvas === 'object') {\r\n          layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.translate(canvasSize * x, canvasSize * y);\r\n          layerCanvasCTX.rotate(rotation);\r\n          layerCanvasCTX.drawImage(\r\n            overlayCanvas,\r\n            0,\r\n            0,\r\n            canvasSize * scale,\r\n            canvasSize * scale\r\n          );\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","import {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n// create canvasObject part with designObject part\r\nconst createCanvasObjectPart = async ({\r\n  design,\r\n  designLayers,\r\n  partName,\r\n  overlays,\r\n}) => {\r\n  const canvasLayers = [];\r\n  // For each layer in part of design object\r\n  for (let layer in designLayers) {\r\n    if (designLayers[layer].type === 'color') {\r\n      // console.log('found one');\r\n      const thisLayer = await createColorLayerCanvas({\r\n        design,\r\n        layer: designLayers[layer],\r\n        partName,\r\n      });\r\n      canvasLayers.push(thisLayer);\r\n    } else if (designLayers[layer].type === 'graphic') {\r\n      canvasLayers.push(\r\n        await createGraphicLayerCanvas({\r\n          design,\r\n          layer: designLayers[layer],\r\n          partName,\r\n        })\r\n      );\r\n    } else if (designLayers[layer].type === 'mask') {\r\n      canvasLayers.push(\r\n        await createMaskLayerCanvas({ design, layer: designLayers[layer] })\r\n      );\r\n    } else if (designLayers[layer].type === 'overlay') {\r\n      if (designLayers[layer].source === 'outerOverlay') {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[0],\r\n          })\r\n        );\r\n      } else {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[1],\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return { layers: canvasLayers };\r\n};\r\n\r\n// Create Base Color Canvas Object\r\nconst createBaseColorCanvasObjectPart = async ({ design, partName, shoe }) => {\r\n  // console.log(shoe);\r\n  const canvas = await createColorLayerCanvas({\r\n    design,\r\n    layer: { color: design.outlineData.baseColors[shoe] },\r\n    partName,\r\n  });\r\n  return canvas;\r\n};\r\n\r\n// turn designObject into canvasObject\r\nexport const designObjectToCanvasObject = ({\r\n  design,\r\n  type,\r\n  overlays,\r\n  shoe,\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvasObject = {};\r\n    const createAllParts = async () => {\r\n      if (type === 'partsCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.parts[partName][shoe],\r\n            partName,\r\n            overlays,\r\n          });\r\n        }\r\n      } else if (type === 'overlaysCanvasObject') {\r\n        for (let partName in design.outlineData.overlays) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.overlays[partName][shoe],\r\n            partName,\r\n          });\r\n        }\r\n      } else if (type === 'baseColorCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createBaseColorCanvasObjectPart({\r\n            design,\r\n            partName,\r\n            shoe,\r\n          });\r\n        }\r\n      }\r\n      resolve(canvasObject);\r\n    };\r\n    createAllParts();\r\n  });\r\n};\r\n\r\nexport const overlayCanvasObjectToTextureCanvas = ({\r\n  design,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  partName,\r\n  graphicVisualCanvas,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const overlayCanvasCTX = overlayCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  overlayCanvasCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in overlayCanvasObject[partName].layers) {\r\n    const layerCanvas = overlayCanvasObject[partName].layers[layer];\r\n    overlayCanvasCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n\r\n// update graphicVisualCanvas\r\nexport const updateGraphicVisualCanvas = ({\r\n  design,\r\n  graphicVisualCanvas,\r\n  partName,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  if (baseColorCanvasObject[partName]) {\r\n    const baseColorCanvas = baseColorCanvasObject[partName];\r\n    graphicCTX.drawImage(baseColorCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n\r\n  for (let layer in canvasObject[partName].layers) {\r\n    const layerCanvas = canvasObject[partName].layers[layer];\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Part Change Functions\r\nexport const partChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n  currentShoe,\r\n}) => {\r\n  // console.log(currentShoe);\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.parts[partName][currentShoe][layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer;\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      thisLayer = tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    } else {\r\n      thisLayer =\r\n        tempDesign.outlineData.parts[partName][currentShoe][layerIndex];\r\n    }\r\n\r\n    thisLayer.color = newColor;\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.parts[partName][currentShoe].push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else if (layerType === 'Graphic') {\r\n      tempDesign.outlineData.parts[partName][currentShoe].push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    } else {\r\n      const { maskLink } = changeObject;\r\n      tempDesign.outlineData.parts[partName][currentShoe].push({\r\n        type: 'mask',\r\n        link: maskLink,\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    const layerObject = tempDesign.outlineData.parts[partName][\r\n      currentShoe\r\n    ].slice(-1)[0];\r\n    addLayerToCanvasObject({\r\n      canvasObject,\r\n      graphicVisualCanvas,\r\n      layerObject,\r\n      partName,\r\n      texture,\r\n      textureCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.parts[partName][currentShoe];\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.parts[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.parts[partName][currentShoe].splice(layerIndex, 1);\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  canvasObject,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else if (layerObject.type === 'graphic') {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createMaskLayerCanvas({ design, layer: layerObject });\r\n  }\r\n  canvasObject[partName].layers[layerIndex] = layerCanvas;\r\n  // redraw part\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst addLayerToCanvasObject = async ({\r\n  canvasObject,\r\n  graphicVisualCanvas,\r\n  layerObject,\r\n  partName,\r\n  texture,\r\n  textureCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else {\r\n    const newLayerCanvas = await createMaskLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst deleteLayerFromCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  canvasObject[partName].layers.splice(layerIndex, 1);\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst moveLayerInCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = canvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  canvasObject[partName].layers = array;\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst redrawCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  graphicCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    graphicCTX.drawImage(\r\n      layerCanvas,\r\n      0,\r\n      0,\r\n      design.configData.canvasSize,\r\n      design.configData.canvasSize\r\n    );\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  overlayCanvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Overlay Change Functions\r\nexport const overlayChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  overlayCanvas,\r\n  overlayCanvasObject,\r\n  baseColorCanvasObject,\r\n  currentShoe,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.overlays[partName][currentShoe][layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n      currentShoe,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer =\r\n      tempDesign.outlineData.overlays[partName][currentShoe][layerIndex];\r\n    thisLayer.color = newColor;\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n      currentShoe,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    // add layers to design if this is the first overlay layer added\r\n    if (design.outlineData.overlays[partName][currentShoe].length === 0) {\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        tempDesign.outlineData.parts[currentPart][currentShoe].push({\r\n          type: 'overlay',\r\n          source: partName,\r\n        });\r\n      }\r\n    }\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.overlays[partName][currentShoe].push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else {\r\n      tempDesign.outlineData.overlays[partName][currentShoe].push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    addLayerToOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerObject: tempDesign.outlineData.overlays[partName][currentShoe].slice(\r\n        -1\r\n      )[0],\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n      currentShoe,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.overlays[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.overlays[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.overlays[partName][currentShoe].splice(\r\n      layerIndex,\r\n      1\r\n    );\r\n    if (tempDesign.outlineData.overlays[partName][currentShoe].length === 0) {\r\n      // remove layers from design if this is the last overlay layer deleted\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        for (\r\n          let i = 0;\r\n          i < tempDesign.outlineData.parts[currentPart][currentShoe].length;\r\n          i++\r\n        ) {\r\n          const layerIndex = i;\r\n          if (\r\n            tempDesign.outlineData.parts[currentPart][currentShoe][i].type ===\r\n            'overlay'\r\n          ) {\r\n            if (\r\n              tempDesign.outlineData.parts[currentPart][currentShoe][i]\r\n                .source === partName\r\n            ) {\r\n              tempDesign.outlineData.parts[currentPart][currentShoe].splice(\r\n                layerIndex,\r\n                1\r\n              );\r\n              canvasObject[currentPart].layers.splice(layerIndex, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n      currentShoe,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOverlayLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  canvasObject,\r\n  textureCanvas,\r\n  baseColorCanvasObject,\r\n  currentShoe,\r\n}) => {\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  }\r\n  overlayCanvasObject[partName].layers[layerIndex] = layerCanvas;\r\n\r\n  // redraw part on overlayCanvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // update effected layers in canvas object\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart][currentShoe].length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        design.outlineData.parts[currentPart][currentShoe][i].type === 'overlay'\r\n      ) {\r\n        if (\r\n          design.outlineData.parts[currentPart][currentShoe][i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart][currentShoe][i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst addLayerToOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n  currentShoe,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n  // update effected layers in canvas object\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart][currentShoe].length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart][currentShoe][i].type ===\r\n        'overlay'\r\n      ) {\r\n        if (\r\n          tempDesign.outlineData.parts[currentPart][currentShoe][i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: tempDesign.outlineData.parts[currentPart][currentShoe][i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst moveLayerInOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = overlayCanvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  overlayCanvasObject[partName].layers = array;\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst deleteLayerFromOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n  currentShoe,\r\n}) => {\r\n  overlayCanvasObject[partName].layers.splice(layerIndex, 1);\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart][currentShoe].length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart][currentShoe][i].type ===\r\n          'overlay' &&\r\n        tempDesign.outlineData.parts[currentPart][currentShoe][i].source ===\r\n          partName\r\n      ) {\r\n        const layerCanvas = await createOverlayLayerCanvas({\r\n          design,\r\n          layer: design.outlineData.parts[currentPart][currentShoe][i],\r\n          partName: currentPart,\r\n          overlayCanvas,\r\n        });\r\n        canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n      }\r\n    }\r\n    // redraw effected parts in textureCanvas\r\n    redrawOverlayCanvasObjectPart({\r\n      textureCanvas,\r\n      canvasObjectPart: canvasObject[currentPart],\r\n      partName: currentPart,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst redrawOverlayCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n  }\r\n};\r\n","// turn canvasObject into a finalTexture\r\nexport const canvasObjectToTextureCanvas = ({\r\n  design,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = design.configData.canvasSize;\r\n    canvas.height = design.configData.canvasSize;\r\n    const finalCanvasCTX = canvas.getContext('2d');\r\n\r\n    function waitForElement() {\r\n      if (typeof finalCanvasCTX !== 'undefined') {\r\n        for (let property in canvasObject) {\r\n          const { x, y, width, height } = design.configData.partsObject[\r\n            property\r\n          ];\r\n          const { divider } = design.configData;\r\n          finalCanvasCTX.drawImage(\r\n            baseColorCanvasObject[property],\r\n            x / divider,\r\n            y / divider,\r\n            width / divider,\r\n            height / divider\r\n          );\r\n          for (let layer in canvasObject[property].layers) {\r\n            const layerCanvas = canvasObject[property].layers[layer];\r\n            finalCanvasCTX.drawImage(\r\n              layerCanvas,\r\n              x / divider,\r\n              y / divider,\r\n              width / divider,\r\n              height / divider\r\n            );\r\n          }\r\n        }\r\n        resolve(canvas);\r\n      } else {\r\n        setTimeout(waitForElement, 100);\r\n      }\r\n    }\r\n    waitForElement();\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DesignerContainer.css';\r\nimport Scene from '../../components/Scene/Scene.js';\r\nimport Interface from '../../components/Interface/Interface.js';\r\nimport {\r\n  setup,\r\n  designObjectToCanvasObject,\r\n  updateGraphicVisualCanvas,\r\n  partChangeManager,\r\n  canvasObjectToTextureCanvas,\r\n  overlayChangeManager,\r\n} from '../../canvasFunctions';\r\n\r\nfunction DesignerContainer({\r\n  userData,\r\n  designSpec,\r\n  graphicVisualCanvas,\r\n  rightInnerOverlayCanvas,\r\n  rightOuterOverlayCanvas,\r\n  rightTexture,\r\n  rightTextureCanvas,\r\n  leftInnerOverlayCanvas,\r\n  leftOuterOverlayCanvas,\r\n  leftTexture,\r\n  leftTextureCanvas,\r\n}) {\r\n  const [design, setDesign] = useState(designSpec);\r\n  const [initialLoaded, setInitialLoaded] = useState(false);\r\n  const [camera, setCamera] = useState(null);\r\n  const [orbitControls, setOrbitControls] = useState(null);\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentShoe, setCurrentShoe] = useState('right');\r\n  const [shoeVisibility, setShoeVisibility] = useState({\r\n    right: true,\r\n    left: true,\r\n  });\r\n\r\n  const rightBaseColorCanvasObjectRef = useRef();\r\n  const rightCanvasObjectRef = useRef();\r\n  const rightOverlaysCanvasObjectRef = useRef();\r\n  const leftBaseColorCanvasObjectRef = useRef();\r\n  const leftCanvasObjectRef = useRef();\r\n  const leftOverlaysCanvasObjectRef = useRef();\r\n\r\n  const handleUpdateGraphicVisualCanvas = (partName) => {\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: rightOverlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: rightBaseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: rightCanvasObjectRef.current,\r\n        baseColorCanvasObject: rightBaseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePartChangeManager = (changeObject) => {\r\n    const { partName } = changeObject;\r\n    if (partName === 'outerOverlay') {\r\n      console.log(currentShoe);\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture: currentShoe === 'right' ? rightTexture : leftTexture,\r\n        textureCanvas:\r\n          currentShoe === 'right' ? rightTextureCanvas : leftTextureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject:\r\n          currentShoe === 'right'\r\n            ? rightCanvasObjectRef.current\r\n            : leftCanvasObjectRef.current,\r\n        overlayCanvas:\r\n          currentShoe === 'right'\r\n            ? rightOuterOverlayCanvas\r\n            : leftOuterOverlayCanvas,\r\n        overlayCanvasObject:\r\n          currentShoe === 'right'\r\n            ? rightOverlaysCanvasObjectRef.current\r\n            : leftOverlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject:\r\n          currentShoe === 'right'\r\n            ? rightBaseColorCanvasObjectRef.current\r\n            : leftBaseColorCanvasObjectRef.current,\r\n        currentShoe,\r\n      });\r\n    } else if (partName === 'innerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture: currentShoe === 'right' ? rightTexture : leftTexture,\r\n        textureCanvas:\r\n          currentShoe === 'right' ? rightTextureCanvas : leftTextureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject:\r\n          currentShoe === 'right'\r\n            ? rightCanvasObjectRef.current\r\n            : leftCanvasObjectRef.current,\r\n        overlayCanvas:\r\n          currentShoe === 'right'\r\n            ? rightInnerOverlayCanvas\r\n            : leftInnerOverlayCanvas,\r\n        overlayCanvasObject:\r\n          currentShoe === 'right'\r\n            ? rightOverlaysCanvasObjectRef.current\r\n            : leftOverlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject:\r\n          currentShoe === 'right'\r\n            ? rightBaseColorCanvasObjectRef.current\r\n            : leftBaseColorCanvasObjectRef.current,\r\n        currentShoe,\r\n      });\r\n    } else {\r\n      partChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture: currentShoe === 'right' ? rightTexture : leftTexture,\r\n        textureCanvas:\r\n          currentShoe === 'right' ? rightTextureCanvas : leftTextureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject:\r\n          currentShoe === 'right'\r\n            ? rightCanvasObjectRef.current\r\n            : leftCanvasObjectRef.current,\r\n        baseColorCanvasObject:\r\n          currentShoe === 'right'\r\n            ? rightBaseColorCanvasObjectRef.current\r\n            : leftBaseColorCanvasObjectRef.current,\r\n        currentShoe,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateBaseColor = async (tempDesign) => {\r\n    // baseColor to baseColor Canvas Object\r\n    rightBaseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n      shoe: 'right',\r\n    });\r\n    leftBaseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n      shoe: 'left',\r\n    });\r\n    // Canvas Object to Canvas\r\n    const rightCanvas = await canvasObjectToTextureCanvas({\r\n      design,\r\n      canvasObject: rightCanvasObjectRef.current,\r\n      baseColorCanvasObject: rightBaseColorCanvasObjectRef.current,\r\n    });\r\n    const leftCanvas = await canvasObjectToTextureCanvas({\r\n      design,\r\n      canvasObject: leftCanvasObjectRef.current,\r\n      baseColorCanvasObject: leftBaseColorCanvasObjectRef.current,\r\n    });\r\n    // Canvas to Texture Canvas\r\n    rightTextureCanvas.getContext('2d').drawImage(rightCanvas, 0, 0);\r\n    rightTexture.needsUpdate = true;\r\n    leftTextureCanvas.getContext('2d').drawImage(leftCanvas, 0, 0);\r\n    leftTexture.needsUpdate = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!rightCanvasObjectRef.current || !leftCanvasObjectRef.current) {\r\n      setup({\r\n        setInitialLoaded,\r\n        design,\r\n        graphicVisualCanvas,\r\n        rightBaseColorCanvasObjectRef,\r\n        rightInnerOverlayCanvas,\r\n        rightOuterOverlayCanvas,\r\n        rightTexture,\r\n        rightTextureCanvas,\r\n        rightCanvasObjectRef,\r\n        rightOverlaysCanvasObjectRef,\r\n        leftBaseColorCanvasObjectRef,\r\n        leftInnerOverlayCanvas,\r\n        leftOuterOverlayCanvas,\r\n        leftTexture,\r\n        leftTextureCanvas,\r\n        leftCanvasObjectRef,\r\n        leftOverlaysCanvasObjectRef,\r\n      });\r\n    }\r\n  }, [\r\n    design,\r\n    graphicVisualCanvas,\r\n    rightInnerOverlayCanvas,\r\n    rightOuterOverlayCanvas,\r\n    rightTexture,\r\n    rightTextureCanvas,\r\n    leftInnerOverlayCanvas,\r\n    leftOuterOverlayCanvas,\r\n    leftTexture,\r\n    leftTextureCanvas,\r\n  ]);\r\n\r\n  if (design && userData) {\r\n    return (\r\n      <div className='designer-container'>\r\n        <Scene\r\n          design={design}\r\n          rightTexture={rightTexture}\r\n          leftTexture={leftTexture}\r\n          initialLoaded={initialLoaded}\r\n          camera={camera}\r\n          setCamera={setCamera}\r\n          orbitControls={orbitControls}\r\n          setOrbitControls={setOrbitControls}\r\n          setCurrentPart={setCurrentPart}\r\n        />\r\n        <Interface\r\n          design={design}\r\n          setDesign={setDesign}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setInitialLoaded={setInitialLoaded}\r\n          camera={camera}\r\n          orbitControls={orbitControls}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n          userData={userData}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentShoe={currentShoe}\r\n          setCurrentShoe={setCurrentShoe}\r\n          shoeVisibility={shoeVisibility}\r\n          setShoeVisibility={setShoeVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>hi</div>;\r\n  }\r\n}\r\n\r\nexport default DesignerContainer;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport './Designer.css';\r\nimport DesignerContainer from '../../components/DesignerContainer/DesignerContainer';\r\nimport {\r\n  createTexture,\r\n  createCanvas,\r\n  createGraphicVisualCanvas,\r\n} from '../../canvasFunctions';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserProvider from '../../context/UserProvider';\r\n\r\nfunction Designer() {\r\n  const { id } = useParams();\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const [designSpec, setDesignSpec] = useState(null);\r\n  const [graphicVisualCanvas, setGraphicVisualCanvas] = useState(null);\r\n\r\n  const [rightInnerOverlayCanvas, setRightInnerOverlayCanvas] = useState(null);\r\n  const [rightOuterOverlayCanvas, setRightOuterOverlayCanvas] = useState(null);\r\n  const [rightTextureCanvas, setRightTextureCanvas] = useState(null);\r\n  const [rightTexture, setRightTexture] = useState(null);\r\n\r\n  const [leftInnerOverlayCanvas, setLeftInnerOverlayCanvas] = useState(null);\r\n  const [leftOuterOverlayCanvas, setLeftOuterOverlayCanvas] = useState(null);\r\n  const [leftTextureCanvas, setLeftTextureCanvas] = useState(null);\r\n  const [leftTexture, setLeftTexture] = useState(null);\r\n\r\n  const setup = async (data) => {\r\n    setDesignSpec(data);\r\n    setGraphicVisualCanvas(createGraphicVisualCanvas({ design: data }));\r\n    const canvasOne = await createCanvas({ design: data });\r\n    setRightInnerOverlayCanvas(canvasOne);\r\n    const canvasTwo = await createCanvas({ design: data });\r\n    setRightOuterOverlayCanvas(canvasTwo);\r\n    const canvasThree = await createCanvas({ design: data });\r\n    setRightTextureCanvas(canvasThree);\r\n\r\n    const canvasFour = await createCanvas({ design: data });\r\n    setLeftInnerOverlayCanvas(canvasFour);\r\n    const canvasFive = await createCanvas({ design: data });\r\n    setLeftOuterOverlayCanvas(canvasFive);\r\n    const canvasSix = await createCanvas({ design: data });\r\n    setLeftTextureCanvas(canvasSix);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      simpleFetch(`/api/outlines/${id}`, 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setup(data);\r\n        });\r\n    } else {\r\n      simpleFetch('/api/outlines/newdesign', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setup(data);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (rightTextureCanvas && leftTextureCanvas) {\r\n      setRightTexture(createTexture(rightTextureCanvas));\r\n      setLeftTexture(createTexture(leftTextureCanvas));\r\n    }\r\n  }, [rightTextureCanvas, leftTextureCanvas]);\r\n\r\n  const initialized =\r\n    userData &&\r\n    designSpec &&\r\n    graphicVisualCanvas &&\r\n    rightInnerOverlayCanvas &&\r\n    rightOuterOverlayCanvas &&\r\n    rightTextureCanvas &&\r\n    rightTexture &&\r\n    leftInnerOverlayCanvas &&\r\n    leftOuterOverlayCanvas &&\r\n    leftTextureCanvas &&\r\n    leftTexture;\r\n\r\n  if (initialized) {\r\n    return (\r\n      <div className='designer-root-container'>\r\n        <DesignerContainer\r\n          userData={userData}\r\n          designSpec={designSpec}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          rightInnerOverlayCanvas={rightInnerOverlayCanvas}\r\n          rightOuterOverlayCanvas={rightOuterOverlayCanvas}\r\n          rightTexture={rightTexture}\r\n          rightTextureCanvas={rightTextureCanvas}\r\n          leftInnerOverlayCanvas={leftInnerOverlayCanvas}\r\n          leftOuterOverlayCanvas={leftOuterOverlayCanvas}\r\n          leftTexture={leftTexture}\r\n          leftTextureCanvas={leftTextureCanvas}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Designer;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/google`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/google`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-google-button'>\r\n        <button onClick={() => loginWithGoogle()}>Login With Google</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport './Profile.css';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const handleLogout = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/logout`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/logout`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <p className='basic-paragraph'>{userData.firstName}</p>\r\n      <p className='basic-paragraph'>{userData.email}</p>\r\n      <div className='basic-button'>\r\n        <button onClick={() => handleLogout()}>Log Out</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './NoPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <div className='no-page-container'>\r\n      <p className='basic-paragraph'>404 - PAGE NOT FOUND</p>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Home</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserProvider from './context/UserProvider';\r\nimport Landing from './pages/Landing/Landing';\r\nimport Designer from './pages/Designer/Designer';\r\nimport Login from './components/Login/Login';\r\nimport Profile from './components/Profile/Profile';\r\n\r\nimport NoPage from './components/NoPage/NoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Router>\r\n        <UserProvider>\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/designer' component={Designer} />\r\n            <Route exact path='/designer/:id' component={Designer} />\r\n            <Route path='*' component={NoPage} />\r\n          </Switch>\r\n        </UserProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import * as Sentry from '@sentry/react';\r\n// import { Integrations } from '@sentry/tracing';\r\n\r\n// Sentry.init({\r\n//   dsn:\r\n//     'https://d98f16c7cc0f4230b7ba30f6a76ef259@o484792.ingest.sentry.io/5538538',\r\n//   integrations: [new Integrations.BrowserTracing()],\r\n//   tracesSampleRate: 1.0,\r\n// });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}