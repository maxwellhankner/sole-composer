{"version":3,"sources":["context/UserProvider.js","components/NewDesignButton/NewDesignButton.js","components/FeaturedDesignCard/FeaturedDesignCard.js","components/MyDesignTiles/MyDesignTiles.js","helpers/fetchHelpers.js","pages/Landing/Landing.js","components/LoadingSpinner/LoadingSpinner.js","components/Scene/Scene.js","helpers/uploadImage.js","helpers/takeScreenshot.js","helpers/convertAwsLink.js","components/DesignPreview/DesignPreview.js","components/AddLayerType/AddLayerType.js","helpers/convertPartNames.js","components/CurrentColors/CurrentColors.js","components/CustomPointer/CustomPointer.js","components/CustomColor/CustomColor.js","components/ColorPicker/ColorPicker.js","components/GraphicEditor/GraphicEditor.js","components/PartSelector/PartSelector.js","components/LayerOverview/LayerOverview.js","components/MaskTypes/MaskTypes.js","components/PartList/PartList.js","components/CurrentGraphics/CurrentGraphics.js","components/GraphicPicker/GraphicPicker.js","components/LayersView/Constants.js","components/LayersView/LayersView.js","components/ChangeDesignName/ChangeDesignName.js","components/ChangeBaseColor/ChangeBaseColor.js","components/Interface/Interface.js","canvasFunctions/create/createCanvasFunctions.js","canvasFunctions/create/createColorLayerCanvas.js","canvasFunctions/create/createGraphicLayerCanvas.js","canvasFunctions/create/createMaskLayerCanvas.js","canvasFunctions/create/createOverlayLayerCanvas.js","canvasFunctions/create/initialFunctions.js","canvasFunctions/update/partChangeManager.js","canvasFunctions/update/overlayChangeManager.js","canvasFunctions/update/canvasObjectToTextureCanvas.js","components/DesignerContainer/DesignerContainer.js","pages/Designer/Designer.js","components/Login/Login.js","components/Profile/Profile.js","components/NoPage/NoPage.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","method","credentials","then","res","json","data","err","Provider","value","NewDesignButton","userData","history","useHistory","className","onClick","push","FeaturedDesignCard","props","_id","title","configId","author","screenshot","src","alt","modelName","firstName","MyDesignTiles","myDesigns","map","design","key","to","simpleFetch","link","designFetch","body","headers","JSON","stringify","Landing","useContext","featured","setFeatured","setMyDesigns","LoadingSpinner","id","textureLoader","THREE","raycaster","Scene","texture","initialLoaded","camera","setCamera","setCurrentPart","threeCanvasRef","useRef","renderer","setRenderer","newMaterial","setNewMaterial","isLoading","setIsLoading","createMaterial","Promise","resolve","aoimg","Image","onload","ao","flipY","aoMap","a","mat","antialias","preserveDrawingBuffer","alpha","createMat","setSize","current","appendChild","domElement","position","z","y","scene","light","add","controls","OrbitControls","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enablePan","enableDamping","dampingFactor","update","manager","onLoad","GLTFLoader","load","configData","source","gltf","traverse","node","isMesh","material","model","scale","set","rotation","mouse","img","image","textureCanvas","document","createElement","width","height","getContext","drawImage","drag","addEventListener","event","preventDefault","box","getBoundingClientRect","x","clientX","clientY","setFromCamera","intersects","intersectObject","length","uv","uv2","getImageData","setupRaycasting","render","requestAnimationFrame","cancelAnimationFrame","dispose","ref","uploadImage","file","isNew","formData","FormData","append","takeScreenshot","fileName","setTimeout","threeCanvas","getElementById","firstElementChild","newCanvas","dataUrl","toDataURL","blobBin","atob","split","array","i","charCodeAt","blob","Blob","Uint8Array","type","name","lastModifiedDate","Date","File","convertAwsLink","url","awsFileName","DesignPreview","handleViewChange","canSave","setCanSave","loading","setLoading","handleSaveDesign","imageName","outlineData","window","location","href","style","color","baseColor","AddLayerType","currentPartName","handleAddLayer","setLayersView","layerTypes","types","handleConvertPartName","partName","converted","join","charAt","toUpperCase","substr","CurrentColors","colorsArray","handleColorChange","backgroundColor","CustomPointer","CustomPicker","hex","hsl","hsv","onChange","styles","hue","marginBottom","overflow","saturation","input","border","borderRadius","fontSize","WebkitAppearance","WebkitBorderRadius","paddingLeft","boxShadow","display","swatch","background","inputContainer","pointer","ColorPicker","currentLayer","handlePartChangeManager","currentColor","setCurrentColor","setColorsArray","colors","property","parts","layer","layers","thisColor","includes","overlays","getDesignColors","newColor","layerIndex","floor","random","toString","onChangeComplete","GraphicEditor","graphicVisualCanvas","handleUpdateGraphicVisualCanvas","handleMoveGraphic","direction","distance","div","innerHTML","placeGraphicVisual","PartSelector","currentPart","setFocusLayer","numberOfParts","partsArray","arrayOfParts","handlePartChange","LayerOverview","allLayers","focusLayer","numberOfLayers","setCurrentLayer","handleCurrentLayer","handleMoveLayer","tempDesign","cloneDeep","tempElement","e","target","handleFocusLayer","toLowerCase","objectFit","indexOf","handleDeleteLayer","MaskTypes","handleAddMaskLayer","maskTypes","PartList","part","CurrentGraphics","graphicsArray","handleAddGraphicLayer","graphic","GraphicPicker","LayerDictionary","warning","setWarning","setGraphicsArray","graphics","thisGraphic","getGraphicsArray","onFileChange","files","size","toFixed","htmlFor","accept","LayersView","layersView","Object","keys","partsObject","Component","propsToPassDown","layerType","maskType","maskLink","ChangeDesignName","setDesign","defaultValue","newTitle","startCase","handleUpdateDesignName","ChangeBaseColor","handleUpdateBaseColor","setBaseColor","updateBaseColor","Interface","view","setView","viewChange","createCanvas","canvasSize","canvas","canvasCTX","fillStyle","fillRect","createColorLayerCanvas","mask","layerCanvas","layerCanvasCTX","maskImg","waitForElement","globalCompositeOperation","createGraphicLayerCanvas","graphicImg","graphicWidth","graphicHeight","graphicPythagorean","round","sqrt","pythagoreanCanvas","pythagoreanCTX","translate","rotate","newX","newY","newScale","createMaskLayerCanvas","createOverlayLayerCanvas","overlayCanvas","translations","createCanvasObjectPart","designLayers","canvasLayers","thisLayer","createBaseColorCanvasObjectPart","designObjectToCanvasObject","reject","canvasObject","createAllParts","overlayCanvasObjectToTextureCanvas","overlayCanvasObject","overlayCanvasCTX","graphicCTX","clearRect","updateGraphicVisualCanvas","baseColorCanvasObject","baseColorCanvas","updateLayer","layerObject","redrawCanvasObjectPart","canvasObjectPart","addLayerToCanvasObject","newLayerCanvas","deleteLayerFromCanvasObject","splice","moveLayerInCanvasObject","textureCanvasCTX","divider","needsUpdate","overlayChangeManager","changeObject","updateOverlayLayer","effectedParts","overlayParts","addLayerToOverlayCanvasObject","slice","moveLayerInOverlayCanvasObject","deleteLayerFromOverlayCanvasObject","redrawOverlayCanvasObjectPart","canvasObjectToTextureCanvas","finalCanvasCTX","DesignerContainer","designSpec","innerOverlayCanvas","outerOverlayCanvas","setInitialLoaded","canvasObjectRef","overlaysCanvasObjectRef","baseColorCanvasObjectRef","buildTexture","partChangeManager","Designer","setDesignSpec","setGraphicVisualCanvas","setInnerOverlayCanvas","setOuterOverlayCanvas","setTextureCanvas","setTexture","useParams","createGraphicVisualCanvas","createTexture","Login","open","Profile","email","NoPage","App","exact","path","component","Boolean","hostname","match","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a04d04a4.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('/auth/getsession', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n        } else {\r\n          setUser(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <context.Provider value={user}>{children}</context.Provider>;\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport './NewDesignButton.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NewDesignButton({ userData }) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='new-design-button standard-button'\r\n      onClick={() => handleClick()}\r\n    >\r\n      <button>N E W &nbsp; D E S I G N</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDesignButton;\r\n","import React from 'react';\r\nimport './FeaturedDesignCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction FeaturedDesignCard({ props, userData }) {\r\n  const { _id, title, configId, author, screenshot } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer/${_id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='featureddesigncard-container' onClick={() => handleClick()}>\r\n      <div className='featureddesigncard-image'>\r\n        <img src={`api/assets/images/${screenshot}`} alt='feature-design' />\r\n      </div>\r\n\r\n      <p className='featureddesigncard-title'>{title}</p>\r\n      <p className='featureddesigncard-model'>{configId.modelName}</p>\r\n      <p className='featureddesigncard-author'>{author.firstName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedDesignCard;\r\n","import React from 'react';\r\nimport './MyDesignTiles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyDesignTiles({ myDesigns }) {\r\n  return (\r\n    <div className='mydesigntiles-container'>\r\n      <div>\r\n        <p className='landing-section-label'>MY DESIGNS</p>\r\n      </div>\r\n      <div className='my-designs-grid'>\r\n        {myDesigns.map((design, key) => (\r\n          <Link\r\n            key={key}\r\n            to={`/designer/${design._id}`}\r\n            className='link-to-designer'\r\n          >\r\n            <div className='my-design-tile'>\r\n              <img\r\n                src={`/api/assets/images/${design.screenshot}`}\r\n                alt='my-design-preview'\r\n              />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyDesignTiles;\r\n","export const simpleFetch = (link, method) => {\r\n  return fetch(link, { method: method });\r\n};\r\n\r\nexport const designFetch = (link, method, body) => {\r\n  return fetch(link, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './Landing.css';\r\nimport NewDesignButton from '../../components/NewDesignButton/NewDesignButton';\r\nimport FeaturedDesignCard from '../../components/FeaturedDesignCard/FeaturedDesignCard';\r\nimport MyDesignTiles from '../../components/MyDesignTiles/MyDesignTiles';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Landing() {\r\n  const userData = useContext(UserProvider.context);\r\n  const [featured, setFeatured] = useState();\r\n  const [myDesigns, setMyDesigns] = useState();\r\n\r\n  useEffect(() => {\r\n    simpleFetch('/api/featured', 'GET')\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatured(data));\r\n\r\n    if (userData) {\r\n      simpleFetch('/api/outlines/mydesigns', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => setMyDesigns(data));\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-header'>\r\n        <p>\r\n          <strong>Sole</strong> Composer\r\n        </p>\r\n        {userData ? (\r\n          <Link to='/profile'>{userData.firstName}</Link>\r\n        ) : (\r\n          <Link to='/login'>Login</Link>\r\n        )}\r\n      </div>\r\n      <div className='landing-content'>\r\n        <div className='featured-designs-container'>\r\n          <p className='landing-section-label'>FEATURED</p>\r\n          <div className='feature-designs'>\r\n            {featured\r\n              ? featured.featured.map((design, key) => (\r\n                  <FeaturedDesignCard\r\n                    props={design}\r\n                    userData={userData}\r\n                    key={key}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <NewDesignButton userData={userData} />\r\n        {myDesigns && <MyDesignTiles myDesigns={myDesigns} />}\r\n      </div>\r\n      {userData ? null : (\r\n        <div>\r\n          <p className='basic-paragraph'>Please Login</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div id='loading-screen'>\r\n      <div id='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Scene.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst textureLoader = new THREE.TextureLoader();\r\nconst raycaster = new THREE.Raycaster();\r\n\r\nconst Scene = ({\r\n  design,\r\n  texture,\r\n  initialLoaded,\r\n  camera,\r\n  setCamera,\r\n  setCurrentPart,\r\n}) => {\r\n  const threeCanvasRef = useRef(null);\r\n  const [renderer, setRenderer] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const createMaterial = (texture) => {\r\n    return new Promise((resolve) => {\r\n      const aoimg = new Image();\r\n      aoimg.src = '/api/assets/images/ao_map.png';\r\n\r\n      aoimg.onload = () => {\r\n        const ao = new THREE.CanvasTexture(aoimg);\r\n        ao.flipY = false;\r\n        resolve(\r\n          new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            aoMap: ao,\r\n          })\r\n        );\r\n      };\r\n    });\r\n  };\r\n\r\n  // Initialize Renderer and newMaterial\r\n  useEffect(() => {\r\n    setRenderer(\r\n      new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n      })\r\n    );\r\n    async function createMat() {\r\n      const mat = await createMaterial(texture);\r\n      setNewMaterial(mat);\r\n    }\r\n    createMat();\r\n  }, [texture]);\r\n\r\n  useEffect(() => {\r\n    //===================================================== camera\r\n    if (renderer && newMaterial) {\r\n      renderer.setSize(2048, 2048);\r\n      threeCanvasRef.current.appendChild(renderer.domElement);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 7.5;\r\n      camera.position.y = 0;\r\n      setCamera(camera);\r\n    }\r\n  }, [renderer, newMaterial, setCamera]);\r\n\r\n  // Build threeJS Scene\r\n  useEffect(() => {\r\n    if (renderer && newMaterial && camera) {\r\n      //===================================================== scene\r\n      const scene = new THREE.Scene();\r\n\r\n      //===================================================== lights\r\n      const light = new THREE.AmbientLight(0xffffff, 1);\r\n      scene.add(light);\r\n\r\n      //===================================================== orbit controls\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.maxDistance = 10;\r\n      controls.minDistance = 4;\r\n      controls.minPolarAngle = Math.PI * (1 / 5);\r\n      controls.maxPolarAngle = Math.PI * (6 / 7);\r\n      controls.enablePan = false;\r\n      controls.enableDamping = true;\r\n      controls.dampingFactor = 0.18;\r\n      controls.update();\r\n\r\n      //===================================================== loading mananger\r\n      const manager = new THREE.LoadingManager();\r\n      manager.onLoad = () => {\r\n        setIsLoading(false);\r\n      };\r\n\r\n      //===================================================== raycasting\r\n      const setupRaycasting = (model) => {\r\n        textureLoader.load('/api/assets/images/colorUVsmall.png', (texture) => {\r\n          const mouse = new THREE.Vector2();\r\n          const img = texture.image;\r\n          const textureCanvas = document.createElement('canvas');\r\n          textureCanvas.width = img.width;\r\n          textureCanvas.height = img.height;\r\n          textureCanvas\r\n            .getContext('2d')\r\n            .drawImage(img, 0, 0, img.width, img.height);\r\n\r\n          let drag = false;\r\n\r\n          renderer.domElement.addEventListener('pointerdown', (event) => {\r\n            drag = false;\r\n          });\r\n\r\n          renderer.domElement.addEventListener('pointermove', (event) => {\r\n            event.preventDefault();\r\n            drag = true;\r\n          });\r\n\r\n          renderer.domElement.addEventListener('pointerup', (event) => {\r\n            event.preventDefault();\r\n            if (!drag) {\r\n              // check intersections with imported model\r\n              const box = renderer.domElement.getBoundingClientRect();\r\n\r\n              mouse.x = (event.clientX / box.width) * 2 - 1;\r\n              mouse.y = -(event.clientY / box.height) * 2 + 1;\r\n\r\n              raycaster.setFromCamera(mouse, camera);\r\n\r\n              const intersects = raycaster.intersectObject(model, true);\r\n\r\n              // if there is any intersection, continue\r\n\r\n              if (intersects.length) {\r\n                // get pixel coordinates on texture\r\n                // console.log(intersects);\r\n\r\n                const uv = intersects[0].uv2;\r\n                uv.x *= img.width;\r\n                uv.y *= img.height;\r\n\r\n                // get pixel value\r\n\r\n                const colorValues = textureCanvas\r\n                  .getContext('2d')\r\n                  .getImageData(uv.x, uv.y, 1, 1).data;\r\n\r\n                // console.log(colorValues[0]);\r\n                switch (colorValues[0]) {\r\n                  case 255:\r\n                    setCurrentPart(4);\r\n                    break;\r\n\r\n                  case 220:\r\n                    setCurrentPart(2);\r\n                    break;\r\n\r\n                  case 210:\r\n                    setCurrentPart(0);\r\n                    break;\r\n\r\n                  case 200:\r\n                    setCurrentPart(5);\r\n                    break;\r\n\r\n                  case 190:\r\n                    setCurrentPart(3);\r\n                    break;\r\n\r\n                  case 180:\r\n                    setCurrentPart(1);\r\n                    break;\r\n\r\n                  case 170:\r\n                    setCurrentPart(16);\r\n                    break;\r\n\r\n                  case 160:\r\n                    setCurrentPart(15);\r\n                    break;\r\n\r\n                  case 150:\r\n                    setCurrentPart(14);\r\n                    break;\r\n\r\n                  case 140:\r\n                    setCurrentPart(9);\r\n                    break;\r\n\r\n                  case 130:\r\n                    setCurrentPart(13);\r\n                    break;\r\n\r\n                  case 120:\r\n                    setCurrentPart(11);\r\n                    break;\r\n\r\n                  case 110:\r\n                    setCurrentPart(12);\r\n                    break;\r\n\r\n                  case 100:\r\n                    setCurrentPart(8);\r\n                    break;\r\n\r\n                  case 90:\r\n                    setCurrentPart(10);\r\n                    break;\r\n\r\n                  case 80:\r\n                    setCurrentPart(7);\r\n                    break;\r\n\r\n                  case 70:\r\n                    setCurrentPart(6);\r\n                    break;\r\n\r\n                  case 60:\r\n                    setCurrentPart(17);\r\n                    break;\r\n                  default:\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        });\r\n      };\r\n\r\n      //===================================================== model\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(`/api/assets/models/${design.configData.source}`, (gltf) => {\r\n        gltf.scene.traverse((node) => {\r\n          if (node.isMesh) node.material = newMaterial;\r\n        });\r\n        const model = gltf.scene;\r\n        model.scale.set(0.35, 0.35, 0.35);\r\n        model.position.y = -1;\r\n        model.rotation.y = -95 * (Math.PI / 180);\r\n        scene.add(model);\r\n        setupRaycasting(model);\r\n      });\r\n\r\n      //===================================================== animate\r\n      const render = () => {\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n        controls.update();\r\n      };\r\n\r\n      render();\r\n\r\n      //===================================================== cleanup\r\n      const cleanup = () => {\r\n        cancelAnimationFrame(render);\r\n        controls.dispose();\r\n      };\r\n\r\n      return cleanup;\r\n    }\r\n  }, [newMaterial, renderer, camera, design.configData.source, setCurrentPart]);\r\n\r\n  return (\r\n    <div\r\n      className='scene-container'\r\n      id='scene-container-id'\r\n      ref={threeCanvasRef}\r\n    >\r\n      {!isLoading && initialLoaded ? null : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","export const uploadImage = (file, isNew) => {\r\n  const formData = new FormData();\r\n  if (isNew) {\r\n    formData.append('image', file, 'newImage');\r\n  } else {\r\n    formData.append('image', file);\r\n  }\r\n\r\n  return fetch('/api/assets/uploadimage', {\r\n    method: 'POST',\r\n    body: formData,\r\n  }).then((res) => res.json());\r\n};\r\n","export const takeScreenshot = (camera, fileName) => {\r\n  return new Promise((resolve) => {\r\n    camera.position.set(0, 0, 7.5);\r\n    setTimeout(() => {\r\n      const threeCanvas = document.getElementById('scene-container-id')\r\n        .firstElementChild;\r\n      const newCanvas = document.createElement('canvas');\r\n      newCanvas.width = 1024;\r\n      newCanvas.height = 1024;\r\n      const newCanvasCtx = newCanvas.getContext('2d');\r\n      newCanvasCtx.drawImage(threeCanvas, 0, 0, 1024, 1024);\r\n\r\n      const dataUrl = newCanvas.toDataURL('image/png');\r\n\r\n      var blobBin = atob(dataUrl.split(',')[1]);\r\n      var array = [];\r\n      for (var i = 0; i < blobBin.length; i++) {\r\n        array.push(blobBin.charCodeAt(i));\r\n      }\r\n      var blob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n      blob.name = 'theBlob';\r\n      blob.lastModifiedDate = new Date();\r\n      var file = new File([blob], fileName, { type: 'image/png' });\r\n      resolve(file);\r\n    }, 500);\r\n  });\r\n};\r\n","export const convertAwsLink = (url) => {\r\n  let awsFileName = url.split('/');\r\n  awsFileName = awsFileName[awsFileName.length - 1];\r\n  return awsFileName;\r\n};\r\n","import React, { useState } from 'react';\r\nimport './DesignPreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { takeScreenshot } from '../../helpers/takeScreenshot';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport { designFetch } from '../../helpers/fetchHelpers';\r\nimport {\r\n  FaPen,\r\n  FaLayerGroup,\r\n  FaTrashAlt,\r\n  FaSave,\r\n  FaTimes,\r\n  FaCamera,\r\n  FaSquare,\r\n} from 'react-icons/fa';\r\n// import { response } from 'express';\r\n// import UserProvider from '../../context/UserProvider';\r\n\r\nfunction DesignPreview({\r\n  handleViewChange,\r\n  design,\r\n  camera,\r\n  canSave,\r\n  setCanSave,\r\n  userData,\r\n}) {\r\n  // const userData = useContext(UserProvider.context);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSaveDesign = async () => {\r\n    setCanSave(false);\r\n    // if new design\r\n    if (!design.author) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, 'newImage');\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch('/api/outlines', 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            // setTimeout(() => {\r\n            window.location.href = `/designer/${data._id}`;\r\n            // }, 2000);\r\n          });\r\n      });\r\n    }\r\n    // if design is mine\r\n    else if (design.author === userData._id) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, false).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: design.author,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/${design._id}`, 'PUT', body);\r\n        setLoading(false);\r\n      });\r\n    }\r\n    // if design is not mine\r\n    else {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/`, 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteDesign = () => {\r\n    if (userData._id === design.author) {\r\n      fetch(`/api/outlines/${design._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const handleMoveCamera = () => {\r\n    camera.position.set(0, 0, 7.5);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (userData) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div className='design-preview-info'>\r\n          <div className='design-title-container'>\r\n            <p className='design-title'>{design.title}</p>\r\n            <button\r\n              className='edit-design-title-button'\r\n              onClick={() => handleViewChange('ChangeDesignName')}\r\n            >\r\n              <FaPen />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='design-preview-buttons'>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('ChangeBaseColor')}\r\n          >\r\n            <div\r\n              className='design-preview-button-icon'\r\n              style={{ color: design.outlineData.baseColor }}\r\n            >\r\n              <FaSquare />\r\n            </div>\r\n            <button>Base Color</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => handleViewChange('Layers')}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaLayerGroup />\r\n            </div>\r\n            <button>Layers</button>\r\n          </div>\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleMoveCamera();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaCamera />\r\n            </div>\r\n            <button>Reset Camera</button>\r\n          </div>\r\n          {canSave ? (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleSaveDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          ) : (\r\n            <div className='design-preview-button save-deactivated'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaSave />\r\n              </div>\r\n              <button>Save</button>\r\n            </div>\r\n          )}\r\n          {design.author === userData._id && (\r\n            <div\r\n              className='design-preview-button'\r\n              onClick={() => {\r\n                handleDeleteDesign();\r\n              }}\r\n            >\r\n              <div className='design-preview-button-icon'>\r\n                <FaTrashAlt />\r\n              </div>\r\n              <button>Delete</button>\r\n            </div>\r\n          )}\r\n          <Link to='/'>\r\n            <div className='design-preview-button'>\r\n              <div className='design-preview-button-icon'>\r\n                <FaTimes />\r\n              </div>\r\n              <button>Exit</button>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>no data</div>;\r\n  }\r\n}\r\n\r\nexport default DesignPreview;\r\n","import React from 'react';\r\nimport './AddLayerType.css';\r\n\r\nfunction AddLayerType({ props }) {\r\n  const { design, currentPartName, handleAddLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Layer Type</p>\r\n      </div>\r\n      {design.configData.layerTypes[currentPartName].types.map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          {type === 'Mask' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('MaskTypes');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : type === 'Graphic' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('GraphicPicker');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                handleAddLayer(type);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLayerType;\r\n","export const handleConvertPartName = (partName) => {\r\n  let converted = partName.split(/(?=[A-Z])/).join(' ');\r\n  return converted.charAt(0).toUpperCase() + converted.substr(1);\r\n};\r\n","import React from 'react';\r\nimport './CurrentColors.css';\r\n\r\nfunction CurrentColors({ colorsArray, handleColorChange }) {\r\n  return (\r\n    <div className='current-colors-container'>\r\n      <div className='current-colors-scroll'>\r\n        {colorsArray.map((color, i) => (\r\n          <button\r\n            key={i}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handleColorChange(color)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentColors;\r\n","import React from 'react';\r\nimport './CustomPointer.css';\r\n\r\nconst CustomPointer = () => {\r\n  return <div className='custom-pointer'></div>;\r\n};\r\n\r\nexport default CustomPointer;\r\n","import React from 'react';\r\nimport './CustomColor.css';\r\nimport { CustomPicker } from 'react-color';\r\nimport CustomPointer from '../CustomPointer/CustomPointer';\r\nimport {\r\n  EditableInput,\r\n  Hue,\r\n  Saturation,\r\n} from 'react-color/lib/components/common';\r\n\r\nexport const CustomColor = ({ hex, hsl, hsv, onChange }) => {\r\n  const styles = {\r\n    hue: {\r\n      height: 15,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    saturation: {\r\n      width: '100%',\r\n      height: 120,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    input: {\r\n      width: '50%',\r\n      height: '30px',\r\n      border: 'none',\r\n      borderRadius: 'none',\r\n      fontSize: '.7rem',\r\n      // border: `1px solid ${hex}`,\r\n      WebkitAppearance: 'none',\r\n      WebkitBorderRadius: 0,\r\n      paddingLeft: 10,\r\n      boxShadow: 'none',\r\n      display: 'block',\r\n    },\r\n    swatch: {\r\n      width: '100%',\r\n      height: '100%',\r\n      background: hex,\r\n    },\r\n    inputContainer: {\r\n      background: hex,\r\n    },\r\n  };\r\n  return (\r\n    <div className='custom-color'>\r\n      <div style={styles.hue}>\r\n        <Hue hsl={hsl} onChange={onChange} pointer={CustomPointer} />\r\n      </div>\r\n\r\n      <div style={styles.saturation}>\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          onChange={onChange}\r\n          pointer={CustomPointer}\r\n        />\r\n      </div>\r\n\r\n      <div className='color-input' style={styles.inputContainer}>\r\n        <EditableInput\r\n          style={{ input: styles.input }}\r\n          className='custom-color-input'\r\n          value={hex}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(CustomColor);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport CurrentColors from '../CurrentColors/CurrentColors';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ColorPicker({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    handlePartChangeManager,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const [currentColor, setCurrentColor] = useState('#ffffaa');\r\n  const [colorsArray, setColorsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDesignColors = () => {\r\n      const colors = [];\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          const type = design.outlineData.parts[property].layers[layer].type;\r\n          if (type === 'color' || type === 'mask') {\r\n            const thisColor =\r\n              design.outlineData.parts[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type === 'color'\r\n          ) {\r\n            const thisColor =\r\n              design.outlineData.overlays[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const baseColor = design.outlineData.baseColor;\r\n\r\n      if (!colors.includes(baseColor)) {\r\n        colors.push(baseColor);\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    setColorsArray(getDesignColors());\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      setCurrentColor(\r\n        design.outlineData.overlays[currentPartName].layers[currentLayer].color\r\n      );\r\n    } else {\r\n      setCurrentColor(\r\n        design.outlineData.parts[currentPartName].layers[currentLayer].color\r\n      );\r\n    }\r\n  }, [design, currentPartName, currentLayer, setColorsArray]);\r\n\r\n  const handleColorChange = (color) => {\r\n    setCanSave(true);\r\n    const newColor = color.hex || color;\r\n    setCurrentColor(color);\r\n    handlePartChangeManager({\r\n      type: 'color-changed',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      newColor,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='color-picker-container'>\r\n      <div className='view-title'>\r\n        <p>{handleConvertPartName(currentPartName)}</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CurrentColors\r\n          colorsArray={colorsArray}\r\n          handleColorChange={handleColorChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomColor\r\n          color={currentColor}\r\n          onChangeComplete={handleColorChange}\r\n        />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowsAlt,\r\n  FaArrowUp,\r\n  FaCompressArrowsAlt,\r\n  FaRedoAlt,\r\n  FaUndoAlt,\r\n} from 'react-icons/fa';\r\nimport './GraphicEditor.css';\r\n\r\nfunction GraphicEditor({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    graphicVisualCanvas,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleMoveGraphic = (direction, distance) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'graphic-moved',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      direction,\r\n      distance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const placeGraphicVisual = () => {\r\n      let div = document.getElementById('graphic-visual-container');\r\n      div.innerHTML = '';\r\n      div.appendChild(graphicVisualCanvas);\r\n    };\r\n    placeGraphicVisual();\r\n    handleUpdateGraphicVisualCanvas(currentPartName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='graphic-editor-container'>\r\n      <div className='graphic-editor-upper'>\r\n        <div className='graphic-editor-buttons' id='edit-buttons-div'>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='up-button'\r\n            onClick={() => handleMoveGraphic('vert', -30)}\r\n          >\r\n            <FaArrowUp />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='down-button'\r\n            onClick={() => handleMoveGraphic('vert', 30)}\r\n          >\r\n            <FaArrowDown />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='left-button'\r\n            onClick={() => handleMoveGraphic('hor', -30)}\r\n          >\r\n            <FaArrowLeft />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='right-button'\r\n            onClick={() => handleMoveGraphic('hor', 30)}\r\n          >\r\n            <FaArrowRight />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-up-button'\r\n            onClick={() => handleMoveGraphic('scale', 1.1)}\r\n          >\r\n            <FaArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-down-button'\r\n            onClick={() => handleMoveGraphic('scale', 0.9)}\r\n          >\r\n            <FaCompressArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='clockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', 5)}\r\n          >\r\n            <FaRedoAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='counterclockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', -5)}\r\n          >\r\n            <FaUndoAlt />\r\n          </button>\r\n        </div>\r\n        <div id='graphic-visual-container'></div>\r\n      </div>\r\n      <div className='graphic-editor-lower'>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => handleMoveGraphic('reset', 0)}>Reset</button>\r\n        </div>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicEditor;\r\n","import React from 'react';\r\nimport './PartSelector.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\n\r\nfunction PartSelector({\r\n  design,\r\n  currentPart,\r\n  setCurrentPart,\r\n  setFocusLayer,\r\n  setLayersView,\r\n}) {\r\n  const numberOfParts = design.configData.partsArray.length;\r\n  const arrayOfParts = design.configData.partsArray;\r\n\r\n  const handlePartChange = (i) => {\r\n    if (currentPart === 0 && i < 0) {\r\n      setCurrentPart(numberOfParts - 1);\r\n    } else if (currentPart === numberOfParts - 1 && i > 0) {\r\n      setCurrentPart(0);\r\n    } else {\r\n      setCurrentPart(currentPart + i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='part-selector-container'>\r\n      <div>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(-1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button\r\n          className='partname-button'\r\n          onClick={() => {\r\n            setLayersView('PartList');\r\n          }}\r\n        >\r\n          {handleConvertPartName(arrayOfParts[currentPart])}\r\n        </button>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartSelector;\r\n","import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './LayerOverview.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport { FaChevronUp, FaChevronDown, FaPen, FaTimes } from 'react-icons/fa';\r\nimport PartSelector from '../PartSelector/PartSelector';\r\n\r\nfunction LayerOverview({ props }) {\r\n  const {\r\n    allLayers,\r\n    currentPart,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    handlePartChangeManager,\r\n    handleViewChange,\r\n    numberOfLayers,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleFocusLayer = (i) => {\r\n    setFocusLayer(i);\r\n  };\r\n\r\n  const handleClearFocusLayer = (aClass) => {\r\n    if (aClass === 'layers-view-container') {\r\n      setFocusLayer(-1);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLayer = (key) => {\r\n    setCurrentLayer(key);\r\n  };\r\n\r\n  const handleDeleteLayer = (layer) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-deleted',\r\n      partName: currentPartName,\r\n      layerIndex: layer,\r\n    });\r\n    setFocusLayer(-1);\r\n  };\r\n\r\n  const handleMoveLayer = (layer, direction) => {\r\n    setCanSave(true);\r\n    const tempDesign = cloneDeep(design);\r\n    let array;\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      array = tempDesign.outlineData.overlays[currentPartName].layers;\r\n    } else {\r\n      array = tempDesign.outlineData.parts[currentPartName].layers;\r\n    }\r\n\r\n    if (layer === array.length - 1 && direction === 1) {\r\n      return;\r\n    } else if (layer === 0 && direction === -1) {\r\n      return;\r\n    } else {\r\n      let tempElement = array[layer];\r\n      array[layer] = array[layer + direction];\r\n      array[layer + direction] = tempElement;\r\n      if (\r\n        currentPartName === 'outerOverlay' ||\r\n        currentPartName === 'innerOverlay'\r\n      ) {\r\n        tempDesign.outlineData.overlays[currentPartName].layers = array;\r\n      } else {\r\n        tempDesign.outlineData.parts[currentPartName].layers = array;\r\n      }\r\n      handlePartChangeManager({\r\n        type: 'layer-moved',\r\n        partName: currentPartName,\r\n        layerIndex: layer,\r\n        direction,\r\n      });\r\n      setFocusLayer(focusLayer + direction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='layers-view-container'\r\n      onClick={(e) => handleClearFocusLayer(e.target.className)}\r\n    >\r\n      <PartSelector\r\n        design={design}\r\n        currentPart={currentPart}\r\n        setCurrentPart={setCurrentPart}\r\n        setFocusLayer={setFocusLayer}\r\n        setLayersView={setLayersView}\r\n      />\r\n\r\n      <div className='add-layer-button'>\r\n        <button onClick={() => setLayersView('AddLayerType')}>Add Layer</button>\r\n      </div>\r\n\r\n      <div className='layers-box-container'>\r\n        {allLayers.map((layer, i) => (\r\n          <div key={i} className='layer-list-items'>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === numberOfLayers - 1 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, 1)}>\r\n                  <FaChevronUp />\r\n                </button>\r\n              </div>\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === 0 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, -1)}>\r\n                  <FaChevronDown />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className='layer-list-item-middle'\r\n              onClick={() => handleFocusLayer(i)}\r\n            >\r\n              <div\r\n                className={`layer-list-item-left ${\r\n                  focusLayer === i ? 'focus-layer-highlight' : ''\r\n                }`}\r\n              >\r\n                <div className='layer-list-item-type'>\r\n                  {layer.type === 'overlay'\r\n                    ? handleConvertPartName(layer.source).toLowerCase()\r\n                    : layer.type}\r\n                </div>\r\n              </div>\r\n\r\n              {layer.type === 'color' ? (\r\n                <div\r\n                  className='layer-list-item-right'\r\n                  style={{\r\n                    backgroundColor: layer.color,\r\n                  }}\r\n                ></div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.source}Mask.png`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              {layer.type === 'color' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('GraphicEditor');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCurrentPart(\r\n                        design.configData.partsArray.indexOf(layer.source)\r\n                      );\r\n                      setFocusLayer(-1);\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {layer.type === 'overlay' ? (\r\n                <div className='edit-layer-button edit-layer-button-dead'>\r\n                  <button>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button onClick={() => handleDeleteLayer(i)}>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='standard-button layer-back-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerOverview;\r\n","import React from 'react';\r\nimport './MaskTypes.css';\r\n\r\nfunction MaskTypes({ props }) {\r\n  const { design, currentPartName, handleAddMaskLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Mask Type</p>\r\n      </div>\r\n\r\n      {design.configData.maskTypes[currentPartName].map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          <button\r\n            onClick={() => {\r\n              handleAddMaskLayer(type[0], type[1]);\r\n              setLayersView('LayerOverview');\r\n            }}\r\n          >\r\n            {type[0]}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskTypes;\r\n","import React from 'react';\r\nimport './PartList.css';\r\n\r\nfunction PartList({ props }) {\r\n  const { setCurrentPart, setLayersView, handleViewChange, design } = props;\r\n\r\n  return (\r\n    <div className='partlist-container'>\r\n      <div className='partlist-title'>\r\n        <p>Parts</p>\r\n      </div>\r\n      <div className='partlist-buttons'>\r\n        {design.configData.partsArray.map((part, i) => (\r\n          <div className='standard-button' key={i}>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentPart(i);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {part}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='standard-button bottom-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartList;\r\n","import React from 'react';\r\nimport './CurrentGraphics.css';\r\n\r\nfunction CurrentGraphics({ graphicsArray, handleAddGraphicLayer }) {\r\n  return (\r\n    <div className='current-graphics-container'>\r\n      {graphicsArray.map((graphic, i) => (\r\n        <div\r\n          className='current-graphics-item'\r\n          key={i}\r\n          onClick={() => handleAddGraphicLayer(graphic)}\r\n        >\r\n          <img src={`/api/assets/images/${graphic}`} alt='used-already'></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentGraphics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './GraphicPicker.css';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport CurrentGraphics from '../CurrentGraphics/CurrentGraphics';\r\n\r\nfunction GraphicPicker({ props }) {\r\n  const { setLayersView, handleAddLayer, design } = props;\r\n\r\n  const [warning, setWarning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [graphicsArray, setGraphicsArray] = useState();\r\n\r\n  useEffect(() => {\r\n    const getGraphicsArray = () => {\r\n      const graphics = [];\r\n\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          if (\r\n            design.outlineData.parts[property].layers[layer].type === 'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.parts[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type ===\r\n            'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.overlays[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!graphics[0]) {\r\n        return null;\r\n      } else {\r\n        return graphics;\r\n      }\r\n    };\r\n\r\n    setGraphicsArray(getGraphicsArray());\r\n  }, [design]);\r\n\r\n  const onFileChange = async (e) => {\r\n    const fileSize = (e.target.files[0].size / 1024 / 1024).toFixed(4); // MB\r\n    if (fileSize < 2) {\r\n      setIsLoading(true);\r\n      const file = e.target.files[0];\r\n      await uploadImage(file, true).then((data) => {\r\n        const awsFileName = convertAwsLink(data.image);\r\n        handleAddGraphicLayer(awsFileName);\r\n      });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  const handleAddGraphicLayer = (fileName) => {\r\n    handleAddLayer('Graphic', fileName);\r\n    setLayersView('LayerOverview');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='upload-image-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='upload-image-container'>\r\n      {graphicsArray && (\r\n        <div className='used-graphics'>\r\n          <CurrentGraphics\r\n            graphicsArray={graphicsArray}\r\n            handleAddGraphicLayer={handleAddGraphicLayer}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className='view-title'>\r\n        <p>Upload Image</p>\r\n      </div> */}\r\n      <div className='upload-image-input'>\r\n        <label htmlFor='image-input-id' className='upload-image-label'>\r\n          <input\r\n            onChange={(e) => onFileChange(e)}\r\n            id='image-input-id'\r\n            type='file'\r\n            name='myImage'\r\n            accept='image/png, image/jpeg, .png, .jpg'\r\n          />\r\n          Upload\r\n        </label>\r\n      </div>\r\n\r\n      {warning && (\r\n        <div className='file-size-warning'>\r\n          <p>file must be less that 2MB.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicPicker;\r\n","import AddLayerType from '../AddLayerType/AddLayerType';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\r\nimport LayerOverview from '../LayerOverview/LayerOverview';\r\nimport MaskTypes from '../MaskTypes/MaskTypes';\r\nimport PartList from '../PartList/PartList';\r\nimport GraphicPicker from '../GraphicPicker/GraphicPicker';\r\n\r\nconst LayerDictionary = {\r\n  AddLayerType: AddLayerType,\r\n  ColorPicker: ColorPicker,\r\n  GraphicEditor: GraphicEditor,\r\n  LayerOverview: LayerOverview,\r\n  MaskTypes: MaskTypes,\r\n  PartList: PartList,\r\n  GraphicPicker: GraphicPicker,\r\n};\r\n\r\nexport default LayerDictionary;\r\n","import React, { useState } from 'react';\r\nimport LayerDictionary from './Constants';\r\nimport './LayersView.css';\r\n\r\nfunction LayersView({\r\n  currentLayer,\r\n  currentPart,\r\n  design,\r\n  graphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handleViewChange,\r\n  setCurrentLayer,\r\n  setCurrentPart,\r\n  setCanSave,\r\n}) {\r\n  const [focusLayer, setFocusLayer] = useState();\r\n  const [layersView, setLayersView] = useState('PartList');\r\n\r\n  const currentPartName = Object.keys(design.configData.partsObject)[\r\n    currentPart\r\n  ];\r\n\r\n  let numberOfLayers;\r\n  let allLayers;\r\n\r\n  if (\r\n    currentPartName === 'outerOverlay' ||\r\n    currentPartName === 'innerOverlay'\r\n  ) {\r\n    numberOfLayers = design.outlineData.overlays[currentPartName].layers.length;\r\n    allLayers = design.outlineData.overlays[currentPartName].layers;\r\n  } else {\r\n    numberOfLayers = design.outlineData.parts[currentPartName].layers.length;\r\n    allLayers = design.outlineData.parts[currentPartName].layers;\r\n  }\r\n\r\n  const handleAddLayer = (type, fileName) => {\r\n    setCanSave(true);\r\n    if (fileName) {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n        fileName: fileName,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    } else {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    }\r\n  };\r\n\r\n  const handleAddMaskLayer = (maskType, maskLink) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-added',\r\n      partName: currentPartName,\r\n      layerType: 'Mask',\r\n      maskType,\r\n      maskLink,\r\n    });\r\n    setFocusLayer(numberOfLayers);\r\n  };\r\n\r\n  const Component = LayerDictionary[layersView];\r\n\r\n  const propsToPassDown = {\r\n    allLayers,\r\n    currentPart,\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    graphicVisualCanvas,\r\n    handleAddLayer,\r\n    handleAddMaskLayer,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    handleViewChange,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    numberOfLayers,\r\n    setCanSave,\r\n  };\r\n\r\n  return <Component props={propsToPassDown} />;\r\n}\r\n\r\nexport default LayersView;\r\n","import React from 'react';\r\nimport './ChangeDesignName.css';\r\nimport { cloneDeep, startCase } from 'lodash';\r\n\r\nfunction ChangeDesignName({ handleViewChange, design, setDesign, setCanSave }) {\r\n  const handleUpdateDesignName = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    const newTitle = startCase(\r\n      document.getElementById('design-name-input').value\r\n    );\r\n    tempDesign.title = newTitle;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Design Name</p>\r\n      </div>\r\n      <div className='designer-input-div'>\r\n        <input\r\n          type='text'\r\n          id='design-name-input'\r\n          className='designer-input'\r\n          defaultValue={design.title}\r\n        ></input>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleUpdateDesignName()}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDesignName;\r\n","import React, { useState } from 'react';\r\nimport './ChangeBaseColor.css';\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ChangeBaseColor({\r\n  handleViewChange,\r\n  design,\r\n  setDesign,\r\n  setCanSave,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [baseColor, setBaseColor] = useState(design.outlineData.baseColor);\r\n\r\n  const updateBaseColor = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    tempDesign.outlineData.baseColor = baseColor;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleUpdateBaseColor(tempDesign);\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex || color;\r\n    setBaseColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='base-color-selector'>\r\n        <CustomColor color={baseColor} onChangeComplete={handleColorChange} />\r\n      </div>\r\n      <div className='base-color-buttons'>\r\n        <div className='base-color-button'>\r\n          <button\r\n            onClick={() =>\r\n              handleColorChange(\r\n                '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n              )\r\n            }\r\n          >\r\n            Random\r\n          </button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => updateBaseColor()}>Apply</button>\r\n        </div>\r\n        <div className='base-color-button'>\r\n          <button onClick={() => handleViewChange('DesignPreview')}>\r\n            Done\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeBaseColor;\r\n","import React, { useState } from 'react';\r\nimport './Interface.css';\r\nimport DesignPreview from '../DesignPreview/DesignPreview';\r\nimport LayersView from '../LayersView/LayersView';\r\nimport ChangeDesignName from '../ChangeDesignName/ChangeDesignName';\r\nimport ChangeBaseColor from '../ChangeBaseColor/ChangeBaseColor';\r\n\r\nfunction Interface({\r\n  design,\r\n  setDesign,\r\n  graphicVisualCanvas,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  camera,\r\n  handleUpdateBaseColor,\r\n  userData,\r\n  currentPart,\r\n  setCurrentPart,\r\n}) {\r\n  // const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const [view, setView] = useState('DesignPreview');\r\n  const [canSave, setCanSave] = useState(false);\r\n\r\n  const handleViewChange = (viewChange) => {\r\n    setView(viewChange);\r\n  };\r\n\r\n  if (view === 'DesignPreview') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <DesignPreview\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          camera={camera}\r\n          canSave={canSave}\r\n          setCanSave={setCanSave}\r\n          userData={userData}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'Layers') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <LayersView\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentLayer={currentLayer}\r\n          setCurrentLayer={setCurrentLayer}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeDesignName') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeDesignName\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeBaseColor') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeBaseColor\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;\r\n","import * as THREE from 'three';\r\n\r\nexport const createTexture = (textureCanvas) => {\r\n  const texture = new THREE.CanvasTexture(textureCanvas);\r\n  texture.flipY = false;\r\n  return texture;\r\n};\r\n\r\nexport const createCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  // const { baseColor } = design.outlineData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  const canvasCTX = canvas.getContext('2d');\r\n  canvasCTX.fillStyle = '#ffffff';\r\n  canvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n  return canvas;\r\n};\r\n\r\nexport const createGraphicVisualCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.id = 'graphic-visual-canvas';\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  return canvas;\r\n};\r\n","export const createColorLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    let { mask } = design.configData.partsObject[partName];\r\n    const { color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      function waitForElement() {\r\n        if (\r\n          typeof layerCanvasCTX !== 'undefined' &&\r\n          typeof layerCanvas !== 'undefined'\r\n        ) {\r\n          layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createGraphicLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { link, x, y, scale, rotation } = layer;\r\n    const { canvasSize } = design.configData;\r\n    // Create layerCanvas to be returned\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      // Get graphic's diagnal length (pythagorean)\r\n      const graphicWidth = graphicImg.width;\r\n      const graphicHeight = graphicImg.height;\r\n      const graphicPythagorean = Math.round(\r\n        Math.sqrt(graphicWidth * graphicWidth + graphicHeight * graphicHeight)\r\n      );\r\n      // Create Pythagorean Canvas\r\n      const pythagoreanCanvas = document.createElement('canvas');\r\n      pythagoreanCanvas.id = 'pythagorean-canvas';\r\n      pythagoreanCanvas.width = graphicPythagorean;\r\n      pythagoreanCanvas.height = graphicPythagorean;\r\n      const pythagoreanCTX = pythagoreanCanvas.getContext('2d');\r\n      // Translate context to the center of the canvas\r\n      pythagoreanCTX.translate(\r\n        pythagoreanCanvas.width / 2,\r\n        pythagoreanCanvas.height / 2\r\n      );\r\n      // Rotate context\r\n      pythagoreanCTX.rotate((rotation * Math.PI) / 180);\r\n      pythagoreanCTX.drawImage(\r\n        graphicImg,\r\n        graphicImg.width / -2,\r\n        graphicImg.height / -2,\r\n        graphicImg.width,\r\n        graphicImg.height\r\n      );\r\n      const maskImg = new Image();\r\n      maskImg.src = `/api/assets/images/${mask}`;\r\n      maskImg.onload = function () {\r\n        layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n        layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n        // Calculate new position\r\n        const newX = x + (canvasSize - canvasSize * scale) / 2;\r\n        const newY = y + (canvasSize - canvasSize * scale) / 2;\r\n        const newScale = canvasSize * scale;\r\n        // Draw graphic on layerCanvas\r\n        layerCanvasCTX.drawImage(\r\n          pythagoreanCanvas,\r\n          newX,\r\n          newY,\r\n          newScale,\r\n          newScale\r\n        );\r\n        resolve(layerCanvas);\r\n      };\r\n    };\r\n  });\r\n};\r\n","export const createMaskLayerCanvas = ({ design, layer }) => {\r\n  return new Promise((resolve) => {\r\n    const { link, color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      function waitForElement() {\r\n        if (typeof layerCanvasCTX !== 'undefined') {\r\n          layerCanvasCTX.drawImage(graphicImg, 0, 0, canvasSize, canvasSize);\r\n          layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n          layerCanvasCTX.fillStyle = color;\r\n          layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n          resolve(layerCanvas);\r\n        } else {\r\n          setTimeout(waitForElement, 100);\r\n        }\r\n      }\r\n      waitForElement();\r\n    };\r\n  });\r\n};\r\n","export const createOverlayLayerCanvas = ({\r\n  design,\r\n  layer,\r\n  partName,\r\n  overlayCanvas,\r\n}) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { source } = layer;\r\n    const { x, y, scale, rotation } = design.configData.translations[source][\r\n      partName\r\n    ];\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.translate(canvasSize * x, canvasSize * y);\r\n      layerCanvasCTX.rotate(rotation);\r\n      layerCanvasCTX.drawImage(\r\n        overlayCanvas,\r\n        0,\r\n        0,\r\n        canvasSize * scale,\r\n        canvasSize * scale\r\n      );\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","import {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n// create canvasObject part with designObject part\r\nconst createCanvasObjectPart = async ({\r\n  design,\r\n  designLayers,\r\n  partName,\r\n  overlays,\r\n}) => {\r\n  const canvasLayers = [];\r\n\r\n  // For each layer in part of design object\r\n  for (let layer in designLayers) {\r\n    if (designLayers[layer].type === 'color') {\r\n      const thisLayer = await createColorLayerCanvas({\r\n        design,\r\n        layer: designLayers[layer],\r\n        partName,\r\n      });\r\n      canvasLayers.push(thisLayer);\r\n    } else if (designLayers[layer].type === 'graphic') {\r\n      canvasLayers.push(\r\n        await createGraphicLayerCanvas({\r\n          design,\r\n          layer: designLayers[layer],\r\n          partName,\r\n        })\r\n      );\r\n    } else if (designLayers[layer].type === 'mask') {\r\n      canvasLayers.push(\r\n        await createMaskLayerCanvas({ design, layer: designLayers[layer] })\r\n      );\r\n    } else if (designLayers[layer].type === 'overlay') {\r\n      if (designLayers[layer].source === 'outerOverlay') {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[0],\r\n          })\r\n        );\r\n      } else {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[1],\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return { layers: canvasLayers };\r\n};\r\n\r\n// Create Base Color Canvas Object\r\nconst createBaseColorCanvasObjectPart = async ({ design, partName }) => {\r\n  const canvas = await createColorLayerCanvas({\r\n    design,\r\n    layer: { color: design.outlineData.baseColor },\r\n    partName,\r\n  });\r\n  return canvas;\r\n};\r\n\r\n// turn designObject into canvasObject\r\nexport const designObjectToCanvasObject = ({ design, type, overlays }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvasObject = {};\r\n    const createAllParts = async () => {\r\n      if (type === 'partsCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.parts[partName].layers,\r\n            partName,\r\n            overlays,\r\n          });\r\n        }\r\n      } else if (type === 'overlaysCanvasObject') {\r\n        for (let partName in design.outlineData.overlays) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.overlays[partName].layers,\r\n            partName,\r\n          });\r\n        }\r\n      } else if (type === 'baseColorCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createBaseColorCanvasObjectPart({\r\n            design,\r\n            partName,\r\n          });\r\n        }\r\n      }\r\n      resolve(canvasObject);\r\n    };\r\n    createAllParts();\r\n  });\r\n};\r\n\r\nexport const overlayCanvasObjectToTextureCanvas = ({\r\n  design,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  partName,\r\n  graphicVisualCanvas,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const overlayCanvasCTX = overlayCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  overlayCanvasCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in overlayCanvasObject[partName].layers) {\r\n    const layerCanvas = overlayCanvasObject[partName].layers[layer];\r\n    overlayCanvasCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n\r\n// update graphicVisualCanvas\r\nexport const updateGraphicVisualCanvas = ({\r\n  design,\r\n  graphicVisualCanvas,\r\n  partName,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  if (baseColorCanvasObject[partName]) {\r\n    const baseColorCanvas = baseColorCanvasObject[partName];\r\n    graphicCTX.drawImage(baseColorCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n\r\n  for (let layer in canvasObject[partName].layers) {\r\n    const layerCanvas = canvasObject[partName].layers[layer];\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Part Change Functions\r\nexport const partChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer;\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      thisLayer = tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    } else {\r\n      thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    }\r\n\r\n    thisLayer.color = newColor;\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else if (layerType === 'Graphic') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    } else {\r\n      const { maskLink } = changeObject;\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'mask',\r\n        link: maskLink,\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    const layerObject = tempDesign.outlineData.parts[partName].layers.slice(\r\n      -1\r\n    )[0];\r\n    addLayerToCanvasObject({\r\n      canvasObject,\r\n      graphicVisualCanvas,\r\n      layerObject,\r\n      partName,\r\n      texture,\r\n      textureCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.parts[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.parts[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.parts[partName].layers.splice(layerIndex, 1);\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  canvasObject,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else if (layerObject.type === 'graphic') {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createMaskLayerCanvas({ design, layer: layerObject });\r\n  }\r\n  canvasObject[partName].layers[layerIndex] = layerCanvas;\r\n  // redraw part\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst addLayerToCanvasObject = async ({\r\n  canvasObject,\r\n  graphicVisualCanvas,\r\n  layerObject,\r\n  partName,\r\n  texture,\r\n  textureCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else {\r\n    const newLayerCanvas = await createMaskLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst deleteLayerFromCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  canvasObject[partName].layers.splice(layerIndex, 1);\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst moveLayerInCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = canvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  canvasObject[partName].layers = array;\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst redrawCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  graphicCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    graphicCTX.drawImage(\r\n      layerCanvas,\r\n      0,\r\n      0,\r\n      design.configData.canvasSize,\r\n      design.configData.canvasSize\r\n    );\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  overlayCanvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Overlay Change Functions\r\nexport const overlayChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  overlayCanvas,\r\n  overlayCanvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    thisLayer.color = newColor;\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    // add layers to design if this is the first overlay layer added\r\n    if (design.outlineData.overlays[partName].layers.length === 0) {\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        tempDesign.outlineData.parts[currentPart].layers.push({\r\n          type: 'overlay',\r\n          source: partName,\r\n        });\r\n      }\r\n    }\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    addLayerToOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerObject: tempDesign.outlineData.overlays[partName].layers.slice(\r\n        -1\r\n      )[0],\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.overlays[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.overlays[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.overlays[partName].layers.splice(layerIndex, 1);\r\n    if (tempDesign.outlineData.overlays[partName].layers.length === 0) {\r\n      // remove layers from design if this is the last overlay layer deleted\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        for (\r\n          let i = 0;\r\n          i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n          i++\r\n        ) {\r\n          const layerIndex = i;\r\n          if (\r\n            tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n            'overlay'\r\n          ) {\r\n            if (\r\n              tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n              partName\r\n            ) {\r\n              tempDesign.outlineData.parts[currentPart].layers.splice(\r\n                layerIndex,\r\n                1\r\n              );\r\n              canvasObject[currentPart].layers.splice(layerIndex, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOverlayLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  canvasObject,\r\n  textureCanvas,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  }\r\n  overlayCanvasObject[partName].layers[layerIndex] = layerCanvas;\r\n\r\n  // redraw part on overlayCanvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // update effected layers in canvas object\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst addLayerToOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n  // update effected layers in canvas object\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type === 'overlay'\r\n      ) {\r\n        if (\r\n          tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: tempDesign.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst moveLayerInOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = overlayCanvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  overlayCanvasObject[partName].layers = array;\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst deleteLayerFromOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  overlayCanvasObject[partName].layers.splice(layerIndex, 1);\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n          'overlay' &&\r\n        tempDesign.outlineData.parts[currentPart].layers[i].source === partName\r\n      ) {\r\n        const layerCanvas = await createOverlayLayerCanvas({\r\n          design,\r\n          layer: design.outlineData.parts[currentPart].layers[i],\r\n          partName: currentPart,\r\n          overlayCanvas,\r\n        });\r\n        canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n      }\r\n    }\r\n    // redraw effected parts in textureCanvas\r\n    redrawOverlayCanvasObjectPart({\r\n      textureCanvas,\r\n      canvasObjectPart: canvasObject[currentPart],\r\n      partName: currentPart,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst redrawOverlayCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n  }\r\n};\r\n","// turn canvasObject into a finalTexture\r\nexport const canvasObjectToTextureCanvas = ({\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n  size,\r\n  design,\r\n}) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    const finalCanvasCTX = canvas.getContext('2d');\r\n\r\n    function waitForElement() {\r\n      if (typeof finalCanvasCTX !== 'undefined') {\r\n        for (let property in canvasObject) {\r\n          const { x, y, width, height } = design.configData.partsObject[\r\n            property\r\n          ];\r\n          const { divider } = design.configData;\r\n          finalCanvasCTX.drawImage(\r\n            baseColorCanvasObject[property],\r\n            x / divider,\r\n            y / divider,\r\n            width / divider,\r\n            height / divider\r\n          );\r\n          for (let layer in canvasObject[property].layers) {\r\n            const layerCanvas = canvasObject[property].layers[layer];\r\n            finalCanvasCTX.drawImage(\r\n              layerCanvas,\r\n              x / divider,\r\n              y / divider,\r\n              width / divider,\r\n              height / divider\r\n            );\r\n          }\r\n        }\r\n        resolve(canvas);\r\n      } else {\r\n        setTimeout(waitForElement, 100);\r\n      }\r\n    }\r\n    waitForElement();\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DesignerContainer.css';\r\nimport Scene from '../../components/Scene/Scene.js';\r\nimport Interface from '../../components/Interface/Interface.js';\r\nimport {\r\n  designObjectToCanvasObject,\r\n  updateGraphicVisualCanvas,\r\n  partChangeManager,\r\n  overlayCanvasObjectToTextureCanvas,\r\n  overlayChangeManager,\r\n} from '../../canvasFunctions';\r\nimport { canvasObjectToTextureCanvas } from '../../canvasFunctions';\r\n\r\nfunction DesignerContainer({\r\n  designSpec,\r\n  graphicVisualCanvas,\r\n  innerOverlayCanvas,\r\n  outerOverlayCanvas,\r\n  texture,\r\n  textureCanvas,\r\n  userData,\r\n}) {\r\n  const [design, setDesign] = useState(designSpec);\r\n  const [camera, setCamera] = useState(null);\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [initialLoaded, setInitialLoaded] = useState(false);\r\n  const canvasObjectRef = useRef();\r\n  const overlaysCanvasObjectRef = useRef();\r\n  const baseColorCanvasObjectRef = useRef();\r\n\r\n  const handleUpdateGraphicVisualCanvas = (partName) => {\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePartChangeManager = (changeObject) => {\r\n    const { partName } = changeObject;\r\n    if (partName === 'outerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: outerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else if (partName === 'innerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: innerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      partChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateBaseColor = async (tempDesign) => {\r\n    // baseColor to baseColor Canvas Object\r\n    baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n    });\r\n    // Canvas Object to Canvas\r\n    const newCanvas = await canvasObjectToTextureCanvas({\r\n      canvasObject: canvasObjectRef.current,\r\n      baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      size: textureCanvas.height,\r\n      design,\r\n    });\r\n    // Canvas to Texture Canvas\r\n    textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n    texture.needsUpdate = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasObjectRef.current) {\r\n      const buildTexture = async () => {\r\n        // Overlay Canvas Object Created\r\n        overlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'overlaysCanvasObject',\r\n        });\r\n        // Outer Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: outerOverlayCanvas,\r\n          partName: 'outerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Inner Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: innerOverlayCanvas,\r\n          partName: 'innerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Design Object to Canvas Object\r\n        canvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'partsCanvasObject',\r\n          overlays: [outerOverlayCanvas, innerOverlayCanvas],\r\n        });\r\n        // baseColor to baseColor Canvas Object\r\n        baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'baseColorCanvasObject',\r\n        });\r\n        // Canvas Object to Canvas\r\n        const newCanvas = await canvasObjectToTextureCanvas({\r\n          canvasObject: canvasObjectRef.current,\r\n          baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n          size: textureCanvas.height,\r\n          design,\r\n        });\r\n        // Canvas to Texture Canvas\r\n        textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n        texture.needsUpdate = true;\r\n        setInitialLoaded(true);\r\n      };\r\n      buildTexture();\r\n    }\r\n  });\r\n\r\n  if (design && userData) {\r\n    return (\r\n      <div className='designer-container'>\r\n        <Scene\r\n          design={design}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n          initialLoaded={initialLoaded}\r\n          camera={camera}\r\n          setCamera={setCamera}\r\n          setCurrentPart={setCurrentPart}\r\n        />\r\n        <Interface\r\n          design={design}\r\n          setDesign={setDesign}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setInitialLoaded={setInitialLoaded}\r\n          camera={camera}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n          userData={userData}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>hi</div>;\r\n  }\r\n}\r\n\r\nexport default DesignerContainer;\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport './Designer.css';\r\nimport DesignerContainer from '../../components/DesignerContainer/DesignerContainer';\r\nimport {\r\n  createTexture,\r\n  createCanvas,\r\n  createGraphicVisualCanvas,\r\n} from '../../canvasFunctions';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { useParams } from 'react-router-dom';\r\nimport UserProvider from '../../context/UserProvider';\r\n\r\nfunction Designer() {\r\n  const [designSpec, setDesignSpec] = useState(null);\r\n  const [graphicVisualCanvas, setGraphicVisualCanvas] = useState(null);\r\n  const [innerOverlayCanvas, setInnerOverlayCanvas] = useState(null);\r\n  const [outerOverlayCanvas, setOuterOverlayCanvas] = useState(null);\r\n  const [textureCanvas, setTextureCanvas] = useState(null);\r\n  const [texture, setTexture] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      simpleFetch(`/api/outlines/${id}`, 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    } else {\r\n      simpleFetch('/api/outlines/newdesign', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (designSpec) {\r\n      setGraphicVisualCanvas(createGraphicVisualCanvas({ design: designSpec }));\r\n      setInnerOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setOuterOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setTextureCanvas(createCanvas({ design: designSpec }));\r\n    }\r\n  }, [designSpec]);\r\n\r\n  useEffect(() => {\r\n    if (textureCanvas) {\r\n      setTexture(createTexture(textureCanvas));\r\n    }\r\n  }, [textureCanvas]);\r\n\r\n  const initialized =\r\n    designSpec &&\r\n    graphicVisualCanvas &&\r\n    innerOverlayCanvas &&\r\n    outerOverlayCanvas &&\r\n    textureCanvas &&\r\n    texture &&\r\n    userData;\r\n\r\n  if (initialized) {\r\n    return (\r\n      <div className='designer-root-container'>\r\n        <DesignerContainer\r\n          designSpec={designSpec}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          innerOverlayCanvas={innerOverlayCanvas}\r\n          outerOverlayCanvas={outerOverlayCanvas}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n          userData={userData}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Designer;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/google`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/google`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-google-button'>\r\n        <button onClick={() => loginWithGoogle()}>Login With Google</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport './Profile.css';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const handleLogout = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/logout`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/logout`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <p className='basic-paragraph'>{userData.firstName}</p>\r\n      <p className='basic-paragraph'>{userData.email}</p>\r\n      <div className='basic-button'>\r\n        <button onClick={() => handleLogout()}>Log Out</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './NoPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <div className='no-page-container'>\r\n      <p className='basic-paragraph'>404 - PAGE NOT FOUND</p>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Home</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserProvider from './context/UserProvider';\r\nimport Landing from './pages/Landing/Landing';\r\nimport Designer from './pages/Designer/Designer';\r\nimport Login from './components/Login/Login';\r\nimport Profile from './components/Profile/Profile';\r\n\r\nimport NoPage from './components/NoPage/NoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Router>\r\n        <UserProvider>\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/designer' component={Designer} />\r\n            <Route exact path='/designer/:id' component={Designer} />\r\n            <Route path='*' component={NoPage} />\r\n          </Switch>\r\n        </UserProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as Sentry from '@sentry/react';\r\nimport { Integrations } from '@sentry/tracing';\r\n\r\nSentry.init({\r\n  dsn:\r\n    'https://d98f16c7cc0f4230b7ba30f6a76ef259@o484792.ingest.sentry.io/5538538',\r\n  integrations: [new Integrations.BrowserTracing()],\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}