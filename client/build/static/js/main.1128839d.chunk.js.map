{"version":3,"sources":["context/UserProvider.js","components/NewDesignButton/NewDesignButton.js","components/FeaturedDesignCard/FeaturedDesignCard.js","components/MyDesignTiles/MyDesignTiles.js","helpers/fetchHelpers.js","pages/Landing/Landing.js","components/LoadingSpinner/LoadingSpinner.js","components/Scene/Scene.js","helpers/uploadImage.js","helpers/takeScreenshot.js","helpers/convertAwsLink.js","components/DesignPreview/DesignPreview.js","components/AddLayerType/AddLayerType.js","helpers/convertPartNames.js","components/CurrentColors/CurrentColors.js","components/CustomPointer/CustomPointer.js","components/CustomColor/CustomColor.js","components/ColorPicker/ColorPicker.js","components/GraphicEditor/GraphicEditor.js","components/PartSelector/PartSelector.js","components/LayerOverview/LayerOverview.js","components/MaskTypes/MaskTypes.js","components/PartList/PartList.js","components/CurrentGraphics/CurrentGraphics.js","components/GraphicPicker/GraphicPicker.js","components/LayersView/Constants.js","components/LayersView/LayersView.js","components/ChangeDesignName/ChangeDesignName.js","components/ChangeBaseColor/ChangeBaseColor.js","components/Interface/Interface.js","canvasFunctions/create/createCanvasFunctions.js","canvasFunctions/create/createColorLayerCanvas.js","canvasFunctions/create/createGraphicLayerCanvas.js","canvasFunctions/create/createMaskLayerCanvas.js","canvasFunctions/create/createOverlayLayerCanvas.js","canvasFunctions/create/initialFunctions.js","canvasFunctions/update/partChangeManager.js","canvasFunctions/update/overlayChangeManager.js","canvasFunctions/update/canvasObjectToTextureCanvas.js","components/DesignerContainer/DesignerContainer.js","pages/Designer/Designer.js","components/Login/Login.js","components/Profile/Profile.js","components/NoPage/NoPage.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","method","credentials","then","res","json","data","err","Provider","value","NewDesignButton","userData","history","useHistory","className","onClick","push","FeaturedDesignCard","props","_id","title","configId","author","screenshot","src","alt","modelName","firstName","MyDesignTiles","myDesigns","map","design","key","to","simpleFetch","link","designFetch","body","headers","JSON","stringify","Landing","useContext","featured","setFeatured","setMyDesigns","LoadingSpinner","id","Scene","texture","initialLoaded","camera","setCamera","threeCanvasRef","useRef","renderer","setRenderer","newMaterial","setNewMaterial","isLoading","setIsLoading","createMaterial","Promise","resolve","aoimg","Image","onload","ao","THREE","flipY","aoMap","a","mat","antialias","preserveDrawingBuffer","alpha","createMat","setSize","current","appendChild","domElement","position","z","y","scene","light","add","controls","OrbitControls","maxDistance","minDistance","minPolarAngle","Math","PI","maxPolarAngle","enablePan","update","manager","onLoad","GLTFLoader","load","configData","source","gltf","traverse","node","isMesh","material","model","scale","set","rotation","render","requestAnimationFrame","cancelAnimationFrame","dispose","ref","uploadImage","file","isNew","formData","FormData","append","takeScreenshot","fileName","setTimeout","threeCanvas","document","getElementById","firstElementChild","newCanvas","createElement","width","height","getContext","drawImage","dataUrl","toDataURL","blobBin","atob","split","array","i","length","charCodeAt","blob","Blob","Uint8Array","type","name","lastModifiedDate","Date","File","convertAwsLink","url","awsFileName","DesignPreview","handleViewChange","canSave","setCanSave","loading","setLoading","handleSaveDesign","imageName","image","outlineData","window","location","href","style","color","baseColor","AddLayerType","currentPartName","handleAddLayer","setLayersView","layerTypes","types","handleConvertPartName","partName","converted","join","charAt","toUpperCase","substr","CurrentColors","colorsArray","handleColorChange","backgroundColor","CustomPointer","CustomPicker","hex","hsl","hsv","onChange","styles","hue","marginBottom","overflow","saturation","input","border","borderRadius","fontSize","WebkitAppearance","WebkitBorderRadius","paddingLeft","boxShadow","display","swatch","background","inputContainer","pointer","ColorPicker","currentLayer","handlePartChangeManager","currentColor","setCurrentColor","setColorsArray","colors","property","parts","layer","layers","thisColor","includes","overlays","getDesignColors","newColor","layerIndex","floor","random","toString","onChangeComplete","GraphicEditor","graphicVisualCanvas","handleUpdateGraphicVisualCanvas","handleMoveGraphic","direction","distance","div","innerHTML","placeGraphicVisual","PartSelector","currentPart","setCurrentPart","setFocusLayer","numberOfParts","partsArray","arrayOfParts","handlePartChange","LayerOverview","allLayers","focusLayer","numberOfLayers","setCurrentLayer","handleCurrentLayer","handleMoveLayer","tempDesign","cloneDeep","tempElement","e","target","handleFocusLayer","toLowerCase","objectFit","indexOf","handleDeleteLayer","MaskTypes","handleAddMaskLayer","maskTypes","PartList","part","CurrentGraphics","graphicsArray","handleAddGraphicLayer","graphic","GraphicPicker","LayerDictionary","warning","setWarning","setGraphicsArray","graphics","thisGraphic","getGraphicsArray","onFileChange","files","size","toFixed","htmlFor","accept","LayersView","layersView","Object","keys","partsObject","Component","propsToPassDown","layerType","maskType","maskLink","ChangeDesignName","setDesign","defaultValue","newTitle","startCase","handleUpdateDesignName","ChangeBaseColor","handleUpdateBaseColor","setBaseColor","updateBaseColor","Interface","view","setView","viewChange","createCanvas","canvasSize","canvas","canvasCTX","fillStyle","fillRect","createColorLayerCanvas","mask","layerCanvas","layerCanvasCTX","maskImg","globalCompositeOperation","createGraphicLayerCanvas","x","graphicImg","graphicWidth","graphicHeight","graphicPythagorean","round","sqrt","pythagoreanCanvas","pythagoreanCTX","translate","rotate","newX","newY","newScale","createMaskLayerCanvas","createOverlayLayerCanvas","overlayCanvas","translations","createCanvasObjectPart","designLayers","canvasLayers","thisLayer","createBaseColorCanvasObjectPart","designObjectToCanvasObject","reject","canvasObject","createAllParts","overlayCanvasObjectToTextureCanvas","overlayCanvasObject","overlayCanvasCTX","graphicCTX","clearRect","updateGraphicVisualCanvas","baseColorCanvasObject","baseColorCanvas","updateLayer","layerObject","textureCanvas","redrawCanvasObjectPart","canvasObjectPart","addLayerToCanvasObject","newLayerCanvas","deleteLayerFromCanvasObject","splice","moveLayerInCanvasObject","textureCanvasCTX","divider","needsUpdate","overlayChangeManager","changeObject","updateOverlayLayer","effectedParts","overlayParts","addLayerToOverlayCanvasObject","slice","moveLayerInOverlayCanvasObject","deleteLayerFromOverlayCanvasObject","redrawOverlayCanvasObjectPart","canvasObjectToTextureCanvas","finalCanvasCTX","DesignerContainer","designSpec","innerOverlayCanvas","outerOverlayCanvas","setInitialLoaded","canvasObjectRef","overlaysCanvasObjectRef","baseColorCanvasObjectRef","buildTexture","partChangeManager","Designer","setDesignSpec","setGraphicVisualCanvas","setInnerOverlayCanvas","setOuterOverlayCanvas","setTextureCanvas","setTexture","useParams","createGraphicVisualCanvas","createTexture","Login","open","Profile","email","NoPage","App","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1128839d.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch('/auth/getsession', {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n        } else {\r\n          setUser(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return <context.Provider value={user}>{children}</context.Provider>;\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;\r\n","import React from 'react';\r\nimport './NewDesignButton.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NewDesignButton({ userData }) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer`);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className='new-design-button standard-button'\r\n      onClick={() => handleClick()}\r\n    >\r\n      <button>N E W &nbsp; D E S I G N</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDesignButton;\r\n","import React from 'react';\r\nimport './FeaturedDesignCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction FeaturedDesignCard({ props, userData }) {\r\n  const { _id, title, configId, author, screenshot } = props;\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    if (userData) {\r\n      history.push(`/designer/${_id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='featureddesigncard-container' onClick={() => handleClick()}>\r\n      <div className='featureddesigncard-image'>\r\n        <img src={`api/assets/images/${screenshot}`} alt='feature-design' />\r\n      </div>\r\n\r\n      <p className='featureddesigncard-title'>{title}</p>\r\n      <p className='featureddesigncard-model'>{configId.modelName}</p>\r\n      <p className='featureddesigncard-author'>{author.firstName}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeaturedDesignCard;\r\n","import React from 'react';\r\nimport './MyDesignTiles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MyDesignTiles({ myDesigns }) {\r\n  return (\r\n    <div className='mydesigntiles-container'>\r\n      <div>\r\n        <p className='landing-section-label'>MY DESIGNS</p>\r\n      </div>\r\n      <div className='my-designs-grid'>\r\n        {myDesigns.map((design, key) => (\r\n          <Link\r\n            key={key}\r\n            to={`/designer/${design._id}`}\r\n            className='link-to-designer'\r\n          >\r\n            <div className='my-design-tile'>\r\n              <img\r\n                src={`/api/assets/images/${design.screenshot}`}\r\n                alt='my-design-preview'\r\n              />\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyDesignTiles;\r\n","export const simpleFetch = (link, method) => {\r\n  return fetch(link, { method: method });\r\n};\r\n\r\nexport const designFetch = (link, method, body) => {\r\n  return fetch(link, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport './Landing.css';\r\nimport NewDesignButton from '../../components/NewDesignButton/NewDesignButton';\r\nimport FeaturedDesignCard from '../../components/FeaturedDesignCard/FeaturedDesignCard';\r\nimport MyDesignTiles from '../../components/MyDesignTiles/MyDesignTiles';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Landing() {\r\n  const userData = useContext(UserProvider.context);\r\n  const [featured, setFeatured] = useState();\r\n  const [myDesigns, setMyDesigns] = useState();\r\n\r\n  useEffect(() => {\r\n    simpleFetch('/api/featured', 'GET')\r\n      .then((res) => res.json())\r\n      .then((data) => setFeatured(data));\r\n\r\n    if (userData) {\r\n      simpleFetch('/api/outlines/mydesigns', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => setMyDesigns(data));\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-header'>\r\n        <p>\r\n          <strong>Sole</strong> Composer\r\n        </p>\r\n        {userData ? (\r\n          <Link to='/profile'>{userData.firstName}</Link>\r\n        ) : (\r\n          <Link to='/login'>Login</Link>\r\n        )}\r\n      </div>\r\n      {userData ? null : (\r\n        <div>\r\n          <p className='basic-paragraph'>Please Login</p>\r\n        </div>\r\n      )}\r\n      <div className='landing-content'>\r\n        <div className='featured-designs-container'>\r\n          <p className='landing-section-label'>FEATURED</p>\r\n          <div className='feature-designs'>\r\n            {featured\r\n              ? featured.featured.map((design, key) => (\r\n                  <FeaturedDesignCard\r\n                    props={design}\r\n                    userData={userData}\r\n                    key={key}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <NewDesignButton userData={userData} />\r\n        {myDesigns && <MyDesignTiles myDesigns={myDesigns} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div id='loading-screen'>\r\n      <div id='loader'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Scene.css';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\r\n\r\nconst Scene = ({ design, texture, initialLoaded, camera, setCamera }) => {\r\n  const threeCanvasRef = useRef(null);\r\n  const [renderer, setRenderer] = useState(null);\r\n  const [newMaterial, setNewMaterial] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const createMaterial = (texture) => {\r\n    return new Promise((resolve) => {\r\n      const aoimg = new Image();\r\n      aoimg.src = '/api/assets/images/ao_map.png';\r\n\r\n      aoimg.onload = () => {\r\n        const ao = new THREE.CanvasTexture(aoimg);\r\n        ao.flipY = false;\r\n        resolve(\r\n          new THREE.MeshStandardMaterial({\r\n            map: texture,\r\n            aoMap: ao,\r\n          })\r\n        );\r\n      };\r\n    });\r\n  };\r\n\r\n  // Initialize Renderer and newMaterial\r\n  useEffect(() => {\r\n    setRenderer(\r\n      new THREE.WebGLRenderer({\r\n        antialias: true,\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n      })\r\n    );\r\n    async function createMat() {\r\n      const mat = await createMaterial(texture);\r\n      setNewMaterial(mat);\r\n    }\r\n    createMat();\r\n  }, [texture]);\r\n\r\n  useEffect(() => {\r\n    //===================================================== camera\r\n    if (renderer && newMaterial) {\r\n      renderer.setSize(2048, 2048);\r\n      threeCanvasRef.current.appendChild(renderer.domElement);\r\n      const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 1000);\r\n      camera.position.z = 7.5;\r\n      camera.position.y = 0;\r\n      setCamera(camera);\r\n    }\r\n  }, [renderer, newMaterial, setCamera]);\r\n\r\n  // Build threeJS Scene\r\n  useEffect(() => {\r\n    if (renderer && newMaterial && camera) {\r\n      //===================================================== scene\r\n      const scene = new THREE.Scene();\r\n      // scene.background = new THREE.Color(0xf9f9f9);\r\n\r\n      //===================================================== lights\r\n      const light = new THREE.AmbientLight(0xffffff, 1);\r\n      scene.add(light);\r\n\r\n      //===================================================== orbit controls\r\n      const controls = new OrbitControls(camera, renderer.domElement);\r\n      controls.maxDistance = 10;\r\n      controls.minDistance = 4;\r\n      controls.minPolarAngle = Math.PI * (1 / 5);\r\n      controls.maxPolarAngle = Math.PI * (6 / 7);\r\n      controls.enablePan = false;\r\n      controls.update();\r\n\r\n      //===================================================== loading mananger\r\n      const manager = new THREE.LoadingManager();\r\n      manager.onLoad = () => {\r\n        setIsLoading(false);\r\n      };\r\n\r\n      //===================================================== model\r\n      const loader = new GLTFLoader(manager);\r\n      loader.load(`/api/assets/models/${design.configData.source}`, (gltf) => {\r\n        gltf.scene.traverse((node) => {\r\n          if (node.isMesh) node.material = newMaterial;\r\n        });\r\n        const model = gltf.scene;\r\n        model.scale.set(0.35, 0.35, 0.35);\r\n        model.position.y = -1;\r\n        model.rotation.y = -95 * (Math.PI / 180);\r\n        scene.add(model);\r\n      });\r\n\r\n      //===================================================== animate\r\n      const render = () => {\r\n        renderer.render(scene, camera);\r\n        requestAnimationFrame(render);\r\n        controls.update();\r\n      };\r\n\r\n      render();\r\n\r\n      //===================================================== cleanup\r\n      const cleanup = () => {\r\n        cancelAnimationFrame(render);\r\n        controls.dispose();\r\n      };\r\n\r\n      return cleanup;\r\n    }\r\n  }, [newMaterial, renderer, camera, design.configData.source]);\r\n\r\n  return (\r\n    <div\r\n      className='scene-container'\r\n      id='scene-container-id'\r\n      ref={threeCanvasRef}\r\n    >\r\n      {!isLoading && initialLoaded ? null : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n","export const uploadImage = (file, isNew) => {\r\n  const formData = new FormData();\r\n  if (isNew) {\r\n    formData.append('image', file, 'newImage');\r\n  } else {\r\n    formData.append('image', file);\r\n  }\r\n\r\n  return fetch('/api/assets/uploadimage', {\r\n    method: 'POST',\r\n    body: formData,\r\n  }).then((res) => res.json());\r\n};\r\n","export const takeScreenshot = (camera, fileName) => {\r\n  return new Promise((resolve) => {\r\n    camera.position.set(0, 0, 7.5);\r\n    setTimeout(() => {\r\n      const threeCanvas = document.getElementById('scene-container-id')\r\n        .firstElementChild;\r\n      const newCanvas = document.createElement('canvas');\r\n      newCanvas.width = 1024;\r\n      newCanvas.height = 1024;\r\n      const newCanvasCtx = newCanvas.getContext('2d');\r\n      newCanvasCtx.drawImage(threeCanvas, 0, 0, 1024, 1024);\r\n\r\n      const dataUrl = newCanvas.toDataURL('image/png');\r\n\r\n      var blobBin = atob(dataUrl.split(',')[1]);\r\n      var array = [];\r\n      for (var i = 0; i < blobBin.length; i++) {\r\n        array.push(blobBin.charCodeAt(i));\r\n      }\r\n      var blob = new Blob([new Uint8Array(array)], { type: 'image/png' });\r\n      blob.name = 'theBlob';\r\n      blob.lastModifiedDate = new Date();\r\n      var file = new File([blob], fileName, { type: 'image/png' });\r\n      resolve(file);\r\n    }, 500);\r\n  });\r\n};\r\n","export const convertAwsLink = (url) => {\r\n  let awsFileName = url.split('/');\r\n  awsFileName = awsFileName[awsFileName.length - 1];\r\n  return awsFileName;\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport './DesignPreview.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { takeScreenshot } from '../../helpers/takeScreenshot';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport { designFetch } from '../../helpers/fetchHelpers';\r\nimport {\r\n  FaPen,\r\n  FaLayerGroup,\r\n  FaTrashAlt,\r\n  FaSave,\r\n  FaTimes,\r\n  FaCamera,\r\n  FaSquare,\r\n} from 'react-icons/fa';\r\nimport UserProvider from '../../context/UserProvider';\r\n\r\nfunction DesignPreview({\r\n  handleViewChange,\r\n  design,\r\n  camera,\r\n  canSave,\r\n  setCanSave,\r\n}) {\r\n  const userData = useContext(UserProvider.context);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSaveDesign = async () => {\r\n    setCanSave(false);\r\n    // if new design\r\n    if (!design.author) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, 'newImage');\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch('/api/outlines', 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            // setTimeout(() => {\r\n            window.location.href = `/designer/${data._id}`;\r\n            // }, 500);\r\n          });\r\n      });\r\n    }\r\n    // if design is mine\r\n    else if (design.author === userData._id) {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, false).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: design.author,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/${design._id}`, 'PUT', body);\r\n        setLoading(false);\r\n      });\r\n    }\r\n    // if design is not mine\r\n    else {\r\n      setLoading(true);\r\n      const file = await takeScreenshot(camera, design.screenshot);\r\n      uploadImage(file, true).then((data) => {\r\n        const imageName = convertAwsLink(data.image);\r\n        const body = {\r\n          author: userData._id,\r\n          title: design.title,\r\n          screenshot: imageName,\r\n          configId: '5f925589cc6d6c16e44d5dfd',\r\n          outlineData: design.outlineData,\r\n        };\r\n        designFetch(`/api/outlines/`, 'POST', body)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            window.location.href = `/designer/${data._id}`;\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteDesign = () => {\r\n    if (userData._id === design.author) {\r\n      fetch(`/api/outlines/${design._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  const handleMoveCamera = () => {\r\n    camera.position.set(0, 0, 7.5);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (userData) {\r\n    return (\r\n      <div className='design-preview-container'>\r\n        <div className='design-preview-info'>\r\n          <div className='design-title-container'>\r\n            <p className='design-title'>{design.title}</p>\r\n            <button\r\n              className='edit-design-title-button'\r\n              onClick={() => handleViewChange('ChangeDesignName')}\r\n            >\r\n              <FaPen />\r\n            </button>\r\n          </div>\r\n          <p className='design-model'>{design.model}</p>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => handleViewChange('ChangeBaseColor')}\r\n        >\r\n          <div\r\n            className='design-preview-button-icon'\r\n            style={{ color: design.outlineData.baseColor }}\r\n          >\r\n            <FaSquare />\r\n          </div>\r\n          <button>BaseColor</button>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => handleViewChange('Layers')}\r\n        >\r\n          <div className='design-preview-button-icon'>\r\n            <FaLayerGroup />\r\n          </div>\r\n          <button>Layers</button>\r\n        </div>\r\n        <div\r\n          className='design-preview-button'\r\n          onClick={() => {\r\n            handleMoveCamera();\r\n          }}\r\n        >\r\n          <div className='design-preview-button-icon'>\r\n            <FaCamera />\r\n          </div>\r\n          <button>Reset Camera</button>\r\n        </div>\r\n        {canSave ? (\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleSaveDesign();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaSave />\r\n            </div>\r\n            <button>Save</button>\r\n          </div>\r\n        ) : (\r\n          <div className='design-preview-button save-deactivated'>\r\n            <div className='design-preview-button-icon'>\r\n              <FaSave />\r\n            </div>\r\n            <button>Save</button>\r\n          </div>\r\n        )}\r\n        {design.author === userData._id && (\r\n          <div\r\n            className='design-preview-button'\r\n            onClick={() => {\r\n              handleDeleteDesign();\r\n            }}\r\n          >\r\n            <div className='design-preview-button-icon'>\r\n              <FaTrashAlt />\r\n            </div>\r\n            <button>Delete</button>\r\n          </div>\r\n        )}\r\n        <Link to='/'>\r\n          <div className='design-preview-button'>\r\n            <div className='design-preview-button-icon'>\r\n              <FaTimes />\r\n            </div>\r\n            <button>Exit</button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>no data</div>;\r\n  }\r\n}\r\n\r\nexport default DesignPreview;\r\n","import React from 'react';\r\nimport './AddLayerType.css';\r\n\r\nfunction AddLayerType({ props }) {\r\n  const { design, currentPartName, handleAddLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Layer Type</p>\r\n      </div>\r\n      {design.configData.layerTypes[currentPartName].types.map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          {type === 'Mask' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('MaskTypes');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : type === 'Graphic' ? (\r\n            <button\r\n              onClick={() => {\r\n                setLayersView('GraphicPicker');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                handleAddLayer(type);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLayerType;\r\n","export const handleConvertPartName = (partName) => {\r\n  let converted = partName.split(/(?=[A-Z])/).join(' ');\r\n  return converted.charAt(0).toUpperCase() + converted.substr(1);\r\n};\r\n","import React from 'react';\r\nimport './CurrentColors.css';\r\n\r\nfunction CurrentColors({ colorsArray, handleColorChange }) {\r\n  return (\r\n    <div className='current-colors-container'>\r\n      <div className='current-colors-scroll'>\r\n        {colorsArray.map((color, i) => (\r\n          <button\r\n            key={i}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handleColorChange(color)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentColors;\r\n","import React from 'react';\r\nimport './CustomPointer.css';\r\n\r\nconst CustomPointer = () => {\r\n  return <div className='custom-pointer'></div>;\r\n};\r\n\r\nexport default CustomPointer;\r\n","import React from 'react';\r\nimport './CustomColor.css';\r\nimport { CustomPicker } from 'react-color';\r\nimport CustomPointer from '../CustomPointer/CustomPointer';\r\nimport {\r\n  EditableInput,\r\n  Hue,\r\n  Saturation,\r\n} from 'react-color/lib/components/common';\r\n\r\nexport const CustomColor = ({ hex, hsl, hsv, onChange }) => {\r\n  const styles = {\r\n    hue: {\r\n      height: 15,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    saturation: {\r\n      width: '100%',\r\n      height: 120,\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      overflow: 'hidden',\r\n    },\r\n    input: {\r\n      width: '50%',\r\n      height: '30px',\r\n      border: 'none',\r\n      borderRadius: 'none',\r\n      fontSize: '.7rem',\r\n      // border: `1px solid ${hex}`,\r\n      WebkitAppearance: 'none',\r\n      WebkitBorderRadius: 0,\r\n      paddingLeft: 10,\r\n      boxShadow: 'none',\r\n      display: 'block',\r\n    },\r\n    swatch: {\r\n      width: '100%',\r\n      height: '100%',\r\n      background: hex,\r\n    },\r\n    inputContainer: {\r\n      background: hex,\r\n    },\r\n  };\r\n  return (\r\n    <div className='custom-color'>\r\n      <div style={styles.hue}>\r\n        <Hue hsl={hsl} onChange={onChange} pointer={CustomPointer} />\r\n      </div>\r\n\r\n      <div style={styles.saturation}>\r\n        <Saturation\r\n          hsl={hsl}\r\n          hsv={hsv}\r\n          onChange={onChange}\r\n          pointer={CustomPointer}\r\n        />\r\n      </div>\r\n\r\n      <div className='color-input' style={styles.inputContainer}>\r\n        <EditableInput\r\n          style={{ input: styles.input }}\r\n          className='custom-color-input'\r\n          value={hex}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomPicker(CustomColor);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport CurrentColors from '../CurrentColors/CurrentColors';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ColorPicker({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    handlePartChangeManager,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const [currentColor, setCurrentColor] = useState('#ffffaa');\r\n  const [colorsArray, setColorsArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDesignColors = () => {\r\n      const colors = [];\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          const type = design.outlineData.parts[property].layers[layer].type;\r\n          if (type === 'color' || type === 'mask') {\r\n            const thisColor =\r\n              design.outlineData.parts[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type === 'color'\r\n          ) {\r\n            const thisColor =\r\n              design.outlineData.overlays[property].layers[layer].color;\r\n            if (!colors.includes(thisColor)) {\r\n              colors.push(thisColor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const baseColor = design.outlineData.baseColor;\r\n\r\n      if (!colors.includes(baseColor)) {\r\n        colors.push(baseColor);\r\n      }\r\n\r\n      return colors;\r\n    };\r\n\r\n    setColorsArray(getDesignColors());\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      setCurrentColor(\r\n        design.outlineData.overlays[currentPartName].layers[currentLayer].color\r\n      );\r\n    } else {\r\n      setCurrentColor(\r\n        design.outlineData.parts[currentPartName].layers[currentLayer].color\r\n      );\r\n    }\r\n  }, [design, currentPartName, currentLayer, setColorsArray]);\r\n\r\n  const handleColorChange = (color) => {\r\n    setCanSave(true);\r\n    const newColor = color.hex || color;\r\n    setCurrentColor(color);\r\n    handlePartChangeManager({\r\n      type: 'color-changed',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      newColor,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='color-picker-container'>\r\n      <div className='view-title'>\r\n        <p>{handleConvertPartName(currentPartName)}</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CurrentColors\r\n          colorsArray={colorsArray}\r\n          handleColorChange={handleColorChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomColor\r\n          color={currentColor}\r\n          onChangeComplete={handleColorChange}\r\n        />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FaArrowDown,\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowsAlt,\r\n  FaArrowUp,\r\n  FaCompressArrowsAlt,\r\n  FaRedoAlt,\r\n  FaUndoAlt,\r\n} from 'react-icons/fa';\r\nimport './GraphicEditor.css';\r\n\r\nfunction GraphicEditor({ props }) {\r\n  const {\r\n    currentLayer,\r\n    currentPartName,\r\n    graphicVisualCanvas,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleMoveGraphic = (direction, distance) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'graphic-moved',\r\n      partName: currentPartName,\r\n      layerIndex: currentLayer,\r\n      direction,\r\n      distance,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const placeGraphicVisual = () => {\r\n      let div = document.getElementById('graphic-visual-container');\r\n      div.innerHTML = '';\r\n      div.appendChild(graphicVisualCanvas);\r\n    };\r\n    placeGraphicVisual();\r\n    handleUpdateGraphicVisualCanvas(currentPartName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='graphic-editor-container'>\r\n      <div className='graphic-editor-upper'>\r\n        <div className='graphic-editor-buttons' id='edit-buttons-div'>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='up-button'\r\n            onClick={() => handleMoveGraphic('vert', -30)}\r\n          >\r\n            <FaArrowUp />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='down-button'\r\n            onClick={() => handleMoveGraphic('vert', 30)}\r\n          >\r\n            <FaArrowDown />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='left-button'\r\n            onClick={() => handleMoveGraphic('hor', -30)}\r\n          >\r\n            <FaArrowLeft />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='right-button'\r\n            onClick={() => handleMoveGraphic('hor', 30)}\r\n          >\r\n            <FaArrowRight />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-up-button'\r\n            onClick={() => handleMoveGraphic('scale', 1.1)}\r\n          >\r\n            <FaArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='scale-down-button'\r\n            onClick={() => handleMoveGraphic('scale', 0.9)}\r\n          >\r\n            <FaCompressArrowsAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='clockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', 5)}\r\n          >\r\n            <FaRedoAlt />\r\n          </button>\r\n          <button\r\n            className='graphic-edit-button'\r\n            id='counterclockwise-button'\r\n            onClick={() => handleMoveGraphic('rotate', -5)}\r\n          >\r\n            <FaUndoAlt />\r\n          </button>\r\n        </div>\r\n        <div id='graphic-visual-container'></div>\r\n      </div>\r\n      <div className='graphic-editor-lower'>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => handleMoveGraphic('reset', 0)}>Reset</button>\r\n        </div>\r\n        <div className='standard-button graphic-editor-lower-button'>\r\n          <button onClick={() => setLayersView('LayerOverview')}>Back</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicEditor;\r\n","import React from 'react';\r\nimport './PartSelector.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\n\r\nfunction PartSelector({\r\n  design,\r\n  currentPart,\r\n  setCurrentPart,\r\n  setFocusLayer,\r\n  setLayersView,\r\n}) {\r\n  const numberOfParts = design.configData.partsArray.length;\r\n  const arrayOfParts = design.configData.partsArray;\r\n\r\n  const handlePartChange = (i) => {\r\n    if (currentPart === 0 && i < 0) {\r\n      setCurrentPart(numberOfParts - 1);\r\n    } else if (currentPart === numberOfParts - 1 && i > 0) {\r\n      setCurrentPart(0);\r\n    } else {\r\n      setCurrentPart(currentPart + i);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='part-selector-container'>\r\n      <div>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(-1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button\r\n          className='partname-button'\r\n          onClick={() => {\r\n            setLayersView('PartList');\r\n          }}\r\n        >\r\n          {handleConvertPartName(arrayOfParts[currentPart])}\r\n        </button>\r\n        <button\r\n          className='change-part-button'\r\n          onClick={() => {\r\n            handlePartChange(1);\r\n            setFocusLayer(-1);\r\n          }}\r\n        >\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartSelector;\r\n","import React from 'react';\r\nimport { cloneDeep } from 'lodash';\r\nimport './LayerOverview.css';\r\nimport { handleConvertPartName } from '../../helpers/convertPartNames';\r\nimport { FaChevronUp, FaChevronDown, FaPen, FaTimes } from 'react-icons/fa';\r\nimport PartSelector from '../PartSelector/PartSelector';\r\n\r\nfunction LayerOverview({ props }) {\r\n  const {\r\n    allLayers,\r\n    currentPart,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    handlePartChangeManager,\r\n    handleViewChange,\r\n    numberOfLayers,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    setCanSave,\r\n  } = props;\r\n\r\n  const handleFocusLayer = (i) => {\r\n    setFocusLayer(i);\r\n  };\r\n\r\n  const handleClearFocusLayer = (aClass) => {\r\n    if (aClass === 'layers-view-container') {\r\n      setFocusLayer(-1);\r\n    }\r\n  };\r\n\r\n  const handleCurrentLayer = (key) => {\r\n    setCurrentLayer(key);\r\n  };\r\n\r\n  const handleDeleteLayer = (layer) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-deleted',\r\n      partName: currentPartName,\r\n      layerIndex: layer,\r\n    });\r\n    setFocusLayer(-1);\r\n  };\r\n\r\n  const handleMoveLayer = (layer, direction) => {\r\n    setCanSave(true);\r\n    const tempDesign = cloneDeep(design);\r\n    let array;\r\n\r\n    if (\r\n      currentPartName === 'outerOverlay' ||\r\n      currentPartName === 'innerOverlay'\r\n    ) {\r\n      array = tempDesign.outlineData.overlays[currentPartName].layers;\r\n    } else {\r\n      array = tempDesign.outlineData.parts[currentPartName].layers;\r\n    }\r\n\r\n    if (layer === array.length - 1 && direction === 1) {\r\n      return;\r\n    } else if (layer === 0 && direction === -1) {\r\n      return;\r\n    } else {\r\n      let tempElement = array[layer];\r\n      array[layer] = array[layer + direction];\r\n      array[layer + direction] = tempElement;\r\n      if (\r\n        currentPartName === 'outerOverlay' ||\r\n        currentPartName === 'innerOverlay'\r\n      ) {\r\n        tempDesign.outlineData.overlays[currentPartName].layers = array;\r\n      } else {\r\n        tempDesign.outlineData.parts[currentPartName].layers = array;\r\n      }\r\n      handlePartChangeManager({\r\n        type: 'layer-moved',\r\n        partName: currentPartName,\r\n        layerIndex: layer,\r\n        direction,\r\n      });\r\n      setFocusLayer(focusLayer + direction);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='layers-view-container'\r\n      onClick={(e) => handleClearFocusLayer(e.target.className)}\r\n    >\r\n      <PartSelector\r\n        design={design}\r\n        currentPart={currentPart}\r\n        setCurrentPart={setCurrentPart}\r\n        setFocusLayer={setFocusLayer}\r\n        setLayersView={setLayersView}\r\n      />\r\n\r\n      <div className='add-layer-button'>\r\n        <button onClick={() => setLayersView('AddLayerType')}>Add Layer</button>\r\n      </div>\r\n\r\n      <div className='layers-box-container'>\r\n        {allLayers.map((layer, i) => (\r\n          <div key={i} className='layer-list-items'>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === numberOfLayers - 1 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, 1)}>\r\n                  <FaChevronUp />\r\n                </button>\r\n              </div>\r\n              <div\r\n                className={`edit-layer-button ${\r\n                  i === 0 ? 'edit-layer-button-dead' : ''\r\n                }`}\r\n              >\r\n                <button onClick={() => handleMoveLayer(i, -1)}>\r\n                  <FaChevronDown />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className='layer-list-item-middle'\r\n              onClick={() => handleFocusLayer(i)}\r\n            >\r\n              <div\r\n                className={`layer-list-item-left ${\r\n                  focusLayer === i ? 'focus-layer-highlight' : ''\r\n                }`}\r\n              >\r\n                <div className='layer-list-item-type'>\r\n                  {layer.type === 'overlay'\r\n                    ? handleConvertPartName(layer.source).toLowerCase()\r\n                    : layer.type}\r\n                </div>\r\n              </div>\r\n\r\n              {layer.type === 'color' ? (\r\n                <div\r\n                  className='layer-list-item-right'\r\n                  style={{\r\n                    backgroundColor: layer.color,\r\n                  }}\r\n                ></div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.link}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className='layer-list-item-right'>\r\n                  <img\r\n                    src={`/api/assets/images/${layer.source}Mask.png`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                    alt='design-graphic'\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`layer-list-item-end ${\r\n                focusLayer !== i ? 'hide-edit-buttons' : ''\r\n              }`}\r\n            >\r\n              {layer.type === 'color' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'graphic' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('GraphicEditor');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : layer.type === 'mask' ? (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleCurrentLayer(i);\r\n                      setLayersView('ColorPicker');\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button\r\n                    onClick={() => {\r\n                      setCurrentPart(\r\n                        design.configData.partsArray.indexOf(layer.source)\r\n                      );\r\n                      setFocusLayer(-1);\r\n                    }}\r\n                  >\r\n                    <FaPen />\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {layer.type === 'overlay' ? (\r\n                <div className='edit-layer-button edit-layer-button-dead'>\r\n                  <button>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className='edit-layer-button'>\r\n                  <button onClick={() => handleDeleteLayer(i)}>\r\n                    <FaTimes />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='standard-button layer-back-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerOverview;\r\n","import React from 'react';\r\nimport './MaskTypes.css';\r\n\r\nfunction MaskTypes({ props }) {\r\n  const { design, currentPartName, handleAddMaskLayer, setLayersView } = props;\r\n  return (\r\n    <div className='design-preview-container'>\r\n      <div className='view-title'>\r\n        <p>Select Mask Type</p>\r\n      </div>\r\n\r\n      {design.configData.maskTypes[currentPartName].map((type, i) => (\r\n        <div key={i} className='standard-button'>\r\n          <button\r\n            onClick={() => {\r\n              handleAddMaskLayer(type[0], type[1]);\r\n              setLayersView('LayerOverview');\r\n            }}\r\n          >\r\n            {type[0]}\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskTypes;\r\n","import React from 'react';\r\nimport './PartList.css';\r\n\r\nfunction PartList({ props }) {\r\n  const { setCurrentPart, setLayersView, handleViewChange, design } = props;\r\n\r\n  return (\r\n    <div className='partlist-container'>\r\n      <div className='partlist-title'>\r\n        <p>Parts</p>\r\n      </div>\r\n      <div className='partlist-buttons'>\r\n        {design.configData.partsArray.map((part, i) => (\r\n          <div className='standard-button' key={i}>\r\n            <button\r\n              onClick={() => {\r\n                setCurrentPart(i);\r\n                setLayersView('LayerOverview');\r\n              }}\r\n            >\r\n              {part}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='standard-button bottom-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PartList;\r\n","import React from 'react';\r\nimport './CurrentGraphics.css';\r\n\r\nfunction CurrentGraphics({ graphicsArray, handleAddGraphicLayer }) {\r\n  return (\r\n    <div className='current-graphics-container'>\r\n      {graphicsArray.map((graphic, i) => (\r\n        <div\r\n          className='current-graphics-item'\r\n          key={i}\r\n          onClick={() => handleAddGraphicLayer(graphic)}\r\n        >\r\n          <img src={`/api/assets/images/${graphic}`} alt='used-already'></img>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentGraphics;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './GraphicPicker.css';\r\nimport { uploadImage } from '../../helpers/uploadImage';\r\nimport { convertAwsLink } from '../../helpers/convertAwsLink';\r\nimport CurrentGraphics from '../CurrentGraphics/CurrentGraphics';\r\n\r\nfunction GraphicPicker({ props }) {\r\n  const { setLayersView, handleAddLayer, design } = props;\r\n\r\n  const [warning, setWarning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [graphicsArray, setGraphicsArray] = useState();\r\n\r\n  useEffect(() => {\r\n    const getGraphicsArray = () => {\r\n      const graphics = [];\r\n\r\n      for (const property in design.outlineData.parts) {\r\n        for (const layer in design.outlineData.parts[property].layers) {\r\n          if (\r\n            design.outlineData.parts[property].layers[layer].type === 'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.parts[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (const property in design.outlineData.overlays) {\r\n        for (const layer in design.outlineData.overlays[property].layers) {\r\n          if (\r\n            design.outlineData.overlays[property].layers[layer].type ===\r\n            'graphic'\r\n          ) {\r\n            const thisGraphic =\r\n              design.outlineData.overlays[property].layers[layer].link;\r\n            if (!graphics.includes(thisGraphic)) {\r\n              graphics.push(thisGraphic);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!graphics[0]) {\r\n        return null;\r\n      } else {\r\n        return graphics;\r\n      }\r\n    };\r\n\r\n    setGraphicsArray(getGraphicsArray());\r\n  }, [design]);\r\n\r\n  const onFileChange = async (e) => {\r\n    const fileSize = (e.target.files[0].size / 1024 / 1024).toFixed(4); // MB\r\n    if (fileSize < 2) {\r\n      setIsLoading(true);\r\n      const file = e.target.files[0];\r\n      await uploadImage(file, true).then((data) => {\r\n        const awsFileName = convertAwsLink(data.image);\r\n        handleAddGraphicLayer(awsFileName);\r\n      });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  const handleAddGraphicLayer = (fileName) => {\r\n    handleAddLayer('Graphic', fileName);\r\n    setLayersView('LayerOverview');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='upload-image-container'>\r\n        <div id='loading-small'>\r\n          <div id='loader'></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='upload-image-container'>\r\n      {graphicsArray && (\r\n        <div className='used-graphics'>\r\n          <CurrentGraphics\r\n            graphicsArray={graphicsArray}\r\n            handleAddGraphicLayer={handleAddGraphicLayer}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* <div className='view-title'>\r\n        <p>Upload Image</p>\r\n      </div> */}\r\n      <div className='upload-image-input'>\r\n        <label htmlFor='image-input-id' className='upload-image-label'>\r\n          <input\r\n            onChange={(e) => onFileChange(e)}\r\n            id='image-input-id'\r\n            type='file'\r\n            name='myImage'\r\n            accept='image/png, image/jpeg, .png, .jpg'\r\n          />\r\n          Upload\r\n        </label>\r\n      </div>\r\n\r\n      {warning && (\r\n        <div className='file-size-warning'>\r\n          <p>file must be less that 2MB.</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className='standard-button'>\r\n        <button onClick={() => setLayersView('LayerOverview')}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GraphicPicker;\r\n","import AddLayerType from '../AddLayerType/AddLayerType';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\r\nimport LayerOverview from '../LayerOverview/LayerOverview';\r\nimport MaskTypes from '../MaskTypes/MaskTypes';\r\nimport PartList from '../PartList/PartList';\r\nimport GraphicPicker from '../GraphicPicker/GraphicPicker';\r\n\r\nconst LayerDictionary = {\r\n  AddLayerType: AddLayerType,\r\n  ColorPicker: ColorPicker,\r\n  GraphicEditor: GraphicEditor,\r\n  LayerOverview: LayerOverview,\r\n  MaskTypes: MaskTypes,\r\n  PartList: PartList,\r\n  GraphicPicker: GraphicPicker,\r\n};\r\n\r\nexport default LayerDictionary;\r\n","import React, { useState } from 'react';\r\nimport LayerDictionary from './Constants';\r\nimport './LayersView.css';\r\n\r\nfunction LayersView({\r\n  currentLayer,\r\n  currentPart,\r\n  design,\r\n  graphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handleViewChange,\r\n  setCurrentLayer,\r\n  setCurrentPart,\r\n  setCanSave,\r\n}) {\r\n  const [focusLayer, setFocusLayer] = useState();\r\n  const [layersView, setLayersView] = useState('PartList');\r\n\r\n  const currentPartName = Object.keys(design.configData.partsObject)[\r\n    currentPart\r\n  ];\r\n\r\n  let numberOfLayers;\r\n  let allLayers;\r\n\r\n  if (\r\n    currentPartName === 'outerOverlay' ||\r\n    currentPartName === 'innerOverlay'\r\n  ) {\r\n    numberOfLayers = design.outlineData.overlays[currentPartName].layers.length;\r\n    allLayers = design.outlineData.overlays[currentPartName].layers;\r\n  } else {\r\n    numberOfLayers = design.outlineData.parts[currentPartName].layers.length;\r\n    allLayers = design.outlineData.parts[currentPartName].layers;\r\n  }\r\n\r\n  const handleAddLayer = (type, fileName) => {\r\n    setCanSave(true);\r\n    if (fileName) {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n        fileName: fileName,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    } else {\r\n      handlePartChangeManager({\r\n        type: 'layer-added',\r\n        partName: currentPartName,\r\n        layerType: type,\r\n      });\r\n      setFocusLayer(numberOfLayers);\r\n    }\r\n  };\r\n\r\n  const handleAddMaskLayer = (maskType, maskLink) => {\r\n    setCanSave(true);\r\n    handlePartChangeManager({\r\n      type: 'layer-added',\r\n      partName: currentPartName,\r\n      layerType: 'Mask',\r\n      maskType,\r\n      maskLink,\r\n    });\r\n    setFocusLayer(numberOfLayers);\r\n  };\r\n\r\n  const Component = LayerDictionary[layersView];\r\n\r\n  const propsToPassDown = {\r\n    allLayers,\r\n    currentPart,\r\n    currentLayer,\r\n    currentPartName,\r\n    design,\r\n    focusLayer,\r\n    graphicVisualCanvas,\r\n    handleAddLayer,\r\n    handleAddMaskLayer,\r\n    handlePartChangeManager,\r\n    handleUpdateGraphicVisualCanvas,\r\n    handleViewChange,\r\n    setCurrentLayer,\r\n    setCurrentPart,\r\n    setFocusLayer,\r\n    setLayersView,\r\n    numberOfLayers,\r\n    setCanSave,\r\n  };\r\n\r\n  return <Component props={propsToPassDown} />;\r\n}\r\n\r\nexport default LayersView;\r\n","import React from 'react';\r\nimport './ChangeDesignName.css';\r\nimport { cloneDeep, startCase } from 'lodash';\r\n\r\nfunction ChangeDesignName({ handleViewChange, design, setDesign, setCanSave }) {\r\n  const handleUpdateDesignName = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    const newTitle = startCase(\r\n      document.getElementById('design-name-input').value\r\n    );\r\n    tempDesign.title = newTitle;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Design Name</p>\r\n      </div>\r\n      <div className='designer-input-div'>\r\n        <input\r\n          type='text'\r\n          id='design-name-input'\r\n          className='designer-input'\r\n          defaultValue={design.title}\r\n        ></input>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleUpdateDesignName()}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeDesignName;\r\n","import React, { useState } from 'react';\r\nimport './ChangeBaseColor.css';\r\nimport { cloneDeep } from 'lodash';\r\nimport CustomColor from '../CustomColor/CustomColor';\r\n\r\nfunction ChangeBaseColor({\r\n  handleViewChange,\r\n  design,\r\n  setDesign,\r\n  setCanSave,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [baseColor, setBaseColor] = useState(design.outlineData.baseColor);\r\n\r\n  const updateBaseColor = () => {\r\n    const tempDesign = cloneDeep(design);\r\n    tempDesign.outlineData.baseColor = baseColor;\r\n    setCanSave(true);\r\n    setDesign(tempDesign);\r\n    handleUpdateBaseColor(tempDesign);\r\n    handleViewChange('DesignPreview');\r\n  };\r\n\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex || color;\r\n    setBaseColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <div className='changedesignname-container'>\r\n      <div className='view-title'>\r\n        <p>Change Base Color</p>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button\r\n          onClick={() =>\r\n            handleColorChange(\r\n              '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n            )\r\n          }\r\n        >\r\n          Random Color\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <CustomColor color={baseColor} onChangeComplete={handleColorChange} />\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => updateBaseColor()}>Apply</button>\r\n      </div>\r\n      <div className='standard-button'>\r\n        <button onClick={() => handleViewChange('DesignPreview')}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeBaseColor;\r\n","import React, { useState } from 'react';\r\nimport './Interface.css';\r\nimport DesignPreview from '../DesignPreview/DesignPreview';\r\nimport LayersView from '../LayersView/LayersView';\r\nimport ChangeDesignName from '../ChangeDesignName/ChangeDesignName';\r\nimport ChangeBaseColor from '../ChangeBaseColor/ChangeBaseColor';\r\n\r\nfunction Interface({\r\n  design,\r\n  setDesign,\r\n  graphicVisualCanvas,\r\n  handleUpdateGraphicVisualCanvas,\r\n  handlePartChangeManager,\r\n  camera,\r\n  handleUpdateBaseColor,\r\n}) {\r\n  const [currentPart, setCurrentPart] = useState(0);\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const [view, setView] = useState('DesignPreview');\r\n  const [canSave, setCanSave] = useState(false);\r\n\r\n  const handleViewChange = (viewChange) => {\r\n    setView(viewChange);\r\n  };\r\n\r\n  if (view === 'DesignPreview') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <DesignPreview\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          camera={camera}\r\n          canSave={canSave}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'Layers') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <LayersView\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          currentPart={currentPart}\r\n          setCurrentPart={setCurrentPart}\r\n          currentLayer={currentLayer}\r\n          setCurrentLayer={setCurrentLayer}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeDesignName') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeDesignName\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (view === 'ChangeBaseColor') {\r\n    return (\r\n      <div className='interface-container'>\r\n        <ChangeBaseColor\r\n          handleViewChange={handleViewChange}\r\n          design={design}\r\n          setDesign={setDesign}\r\n          setCanSave={setCanSave}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interface;\r\n","import * as THREE from 'three';\r\n\r\nexport const createTexture = (textureCanvas) => {\r\n  const texture = new THREE.CanvasTexture(textureCanvas);\r\n  texture.flipY = false;\r\n  return texture;\r\n};\r\n\r\nexport const createCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  // const { baseColor } = design.outlineData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  const canvasCTX = canvas.getContext('2d');\r\n  canvasCTX.fillStyle = '#ffffff';\r\n  canvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n  return canvas;\r\n};\r\n\r\nexport const createGraphicVisualCanvas = ({ design }) => {\r\n  const { canvasSize } = design.configData;\r\n  const canvas = document.createElement('canvas');\r\n  canvas.id = 'graphic-visual-canvas';\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  return canvas;\r\n};\r\n","export const createColorLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    let { mask } = design.configData.partsObject[partName];\r\n    const { color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.fillStyle = color;\r\n      layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","export const createGraphicLayerCanvas = ({ design, layer, partName }) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { link, x, y, scale, rotation } = layer;\r\n    const { canvasSize } = design.configData;\r\n    // Create layerCanvas to be returned\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      // Get graphic's diagnal length (pythagorean)\r\n      const graphicWidth = graphicImg.width;\r\n      const graphicHeight = graphicImg.height;\r\n      const graphicPythagorean = Math.round(\r\n        Math.sqrt(graphicWidth * graphicWidth + graphicHeight * graphicHeight)\r\n      );\r\n      // Create Pythagorean Canvas\r\n      const pythagoreanCanvas = document.createElement('canvas');\r\n      pythagoreanCanvas.id = 'pythagorean-canvas';\r\n      pythagoreanCanvas.width = graphicPythagorean;\r\n      pythagoreanCanvas.height = graphicPythagorean;\r\n      const pythagoreanCTX = pythagoreanCanvas.getContext('2d');\r\n      // Translate context to the center of the canvas\r\n      pythagoreanCTX.translate(\r\n        pythagoreanCanvas.width / 2,\r\n        pythagoreanCanvas.height / 2\r\n      );\r\n      // Rotate context\r\n      pythagoreanCTX.rotate((rotation * Math.PI) / 180);\r\n      pythagoreanCTX.drawImage(\r\n        graphicImg,\r\n        graphicImg.width / -2,\r\n        graphicImg.height / -2,\r\n        graphicImg.width,\r\n        graphicImg.height\r\n      );\r\n      const maskImg = new Image();\r\n      maskImg.src = `/api/assets/images/${mask}`;\r\n      maskImg.onload = function () {\r\n        layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n        layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n        // Calculate new position\r\n        const newX = x + (canvasSize - canvasSize * scale) / 2;\r\n        const newY = y + (canvasSize - canvasSize * scale) / 2;\r\n        const newScale = canvasSize * scale;\r\n        // Draw graphic on layerCanvas\r\n        layerCanvasCTX.drawImage(\r\n          pythagoreanCanvas,\r\n          newX,\r\n          newY,\r\n          newScale,\r\n          newScale\r\n        );\r\n        resolve(layerCanvas);\r\n      };\r\n    };\r\n  });\r\n};\r\n","export const createMaskLayerCanvas = ({ design, layer }) => {\r\n  return new Promise((resolve) => {\r\n    const { link, color } = layer;\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const graphicImg = new Image();\r\n    graphicImg.src = `/api/assets/images/${link}`;\r\n    graphicImg.onload = () => {\r\n      layerCanvasCTX.drawImage(graphicImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.fillStyle = color;\r\n      layerCanvasCTX.fillRect(0, 0, canvasSize, canvasSize);\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","export const createOverlayLayerCanvas = ({\r\n  design,\r\n  layer,\r\n  partName,\r\n  overlayCanvas,\r\n}) => {\r\n  return new Promise((resolve) => {\r\n    const { mask } = design.configData.partsObject[partName];\r\n    const { source } = layer;\r\n    const { x, y, scale, rotation } = design.configData.translations[source][\r\n      partName\r\n    ];\r\n    const { canvasSize } = design.configData;\r\n    const layerCanvas = document.createElement('canvas');\r\n    layerCanvas.width = canvasSize;\r\n    layerCanvas.height = canvasSize;\r\n    const layerCanvasCTX = layerCanvas.getContext('2d');\r\n    const maskImg = new Image();\r\n    maskImg.src = `/api/assets/images/${mask}`;\r\n    maskImg.onload = () => {\r\n      layerCanvasCTX.drawImage(maskImg, 0, 0, canvasSize, canvasSize);\r\n      layerCanvasCTX.globalCompositeOperation = 'source-in';\r\n      layerCanvasCTX.translate(canvasSize * x, canvasSize * y);\r\n      layerCanvasCTX.rotate(rotation);\r\n      layerCanvasCTX.drawImage(\r\n        overlayCanvas,\r\n        0,\r\n        0,\r\n        canvasSize * scale,\r\n        canvasSize * scale\r\n      );\r\n      resolve(layerCanvas);\r\n    };\r\n  });\r\n};\r\n","import {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n// create canvasObject part with designObject part\r\nconst createCanvasObjectPart = async ({\r\n  design,\r\n  designLayers,\r\n  partName,\r\n  overlays,\r\n}) => {\r\n  const canvasLayers = [];\r\n\r\n  // For each layer in part of design object\r\n  for (let layer in designLayers) {\r\n    if (designLayers[layer].type === 'color') {\r\n      const thisLayer = await createColorLayerCanvas({\r\n        design,\r\n        layer: designLayers[layer],\r\n        partName,\r\n      });\r\n      canvasLayers.push(thisLayer);\r\n    } else if (designLayers[layer].type === 'graphic') {\r\n      canvasLayers.push(\r\n        await createGraphicLayerCanvas({\r\n          design,\r\n          layer: designLayers[layer],\r\n          partName,\r\n        })\r\n      );\r\n    } else if (designLayers[layer].type === 'mask') {\r\n      canvasLayers.push(\r\n        await createMaskLayerCanvas({ design, layer: designLayers[layer] })\r\n      );\r\n    } else if (designLayers[layer].type === 'overlay') {\r\n      if (designLayers[layer].source === 'outerOverlay') {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[0],\r\n          })\r\n        );\r\n      } else {\r\n        canvasLayers.push(\r\n          await createOverlayLayerCanvas({\r\n            design,\r\n            layer: designLayers[layer],\r\n            partName,\r\n            overlayCanvas: overlays[1],\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return { layers: canvasLayers };\r\n};\r\n\r\n// Create Base Color Canvas Object\r\nconst createBaseColorCanvasObjectPart = async ({ design, partName }) => {\r\n  const canvas = await createColorLayerCanvas({\r\n    design,\r\n    layer: { color: design.outlineData.baseColor },\r\n    partName,\r\n  });\r\n  return canvas;\r\n};\r\n\r\n// turn designObject into canvasObject\r\nexport const designObjectToCanvasObject = ({ design, type, overlays }) => {\r\n  return new Promise((resolve, reject) => {\r\n    const canvasObject = {};\r\n    const createAllParts = async () => {\r\n      if (type === 'partsCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.parts[partName].layers,\r\n            partName,\r\n            overlays,\r\n          });\r\n        }\r\n      } else if (type === 'overlaysCanvasObject') {\r\n        for (let partName in design.outlineData.overlays) {\r\n          canvasObject[partName] = await createCanvasObjectPart({\r\n            design,\r\n            designLayers: design.outlineData.overlays[partName].layers,\r\n            partName,\r\n          });\r\n        }\r\n      } else if (type === 'baseColorCanvasObject') {\r\n        for (let partName in design.outlineData.parts) {\r\n          canvasObject[partName] = await createBaseColorCanvasObjectPart({\r\n            design,\r\n            partName,\r\n          });\r\n        }\r\n      }\r\n      resolve(canvasObject);\r\n    };\r\n    createAllParts();\r\n  });\r\n};\r\n\r\nexport const overlayCanvasObjectToTextureCanvas = ({\r\n  design,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  partName,\r\n  graphicVisualCanvas,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const overlayCanvasCTX = overlayCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  overlayCanvasCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  for (let layer in overlayCanvasObject[partName].layers) {\r\n    const layerCanvas = overlayCanvasObject[partName].layers[layer];\r\n    overlayCanvasCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n\r\n// update graphicVisualCanvas\r\nexport const updateGraphicVisualCanvas = ({\r\n  design,\r\n  graphicVisualCanvas,\r\n  partName,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { canvasSize } = design.configData;\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(0, 0, canvasSize, canvasSize);\r\n  if (baseColorCanvasObject[partName]) {\r\n    const baseColorCanvas = baseColorCanvasObject[partName];\r\n    graphicCTX.drawImage(baseColorCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n\r\n  for (let layer in canvasObject[partName].layers) {\r\n    const layerCanvas = canvasObject[partName].layers[layer];\r\n    graphicCTX.drawImage(layerCanvas, 0, 0, canvasSize, canvasSize);\r\n  }\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createMaskLayerCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Part Change Functions\r\nexport const partChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer;\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      thisLayer = tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    } else {\r\n      thisLayer = tempDesign.outlineData.parts[partName].layers[layerIndex];\r\n    }\r\n\r\n    thisLayer.color = newColor;\r\n    setDesign(tempDesign);\r\n    updateLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      canvasObject,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else if (layerType === 'Graphic') {\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    } else {\r\n      const { maskLink } = changeObject;\r\n      tempDesign.outlineData.parts[partName].layers.push({\r\n        type: 'mask',\r\n        link: maskLink,\r\n        color: '#000000',\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    const layerObject = tempDesign.outlineData.parts[partName].layers.slice(\r\n      -1\r\n    )[0];\r\n    addLayerToCanvasObject({\r\n      canvasObject,\r\n      graphicVisualCanvas,\r\n      layerObject,\r\n      partName,\r\n      texture,\r\n      textureCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.parts[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.parts[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.parts[partName].layers.splice(layerIndex, 1);\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromCanvasObject({\r\n      canvasObject,\r\n      partName,\r\n      layerIndex,\r\n      textureCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  canvasObject,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else if (layerObject.type === 'graphic') {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName: partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createMaskLayerCanvas({ design, layer: layerObject });\r\n  }\r\n  canvasObject[partName].layers[layerIndex] = layerCanvas;\r\n  // redraw part\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst addLayerToCanvasObject = async ({\r\n  canvasObject,\r\n  graphicVisualCanvas,\r\n  layerObject,\r\n  partName,\r\n  texture,\r\n  textureCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  } else {\r\n    const newLayerCanvas = await createMaskLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n    });\r\n    canvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst deleteLayerFromCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  canvasObject[partName].layers.splice(layerIndex, 1);\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst moveLayerInCanvasObject = ({\r\n  canvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  textureCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = canvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  canvasObject[partName].layers = array;\r\n  redrawCanvasObjectPart({\r\n    textureCanvas,\r\n    canvasObjectPart: canvasObject[partName],\r\n    partName,\r\n    texture,\r\n    graphicVisualCanvas,\r\n    design,\r\n    baseColorCanvasObject,\r\n  });\r\n};\r\n\r\nconst redrawCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const graphicCTX = graphicVisualCanvas.getContext('2d');\r\n  graphicCTX.clearRect(\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  graphicCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    0,\r\n    0,\r\n    design.configData.canvasSize,\r\n    design.configData.canvasSize\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    graphicCTX.drawImage(\r\n      layerCanvas,\r\n      0,\r\n      0,\r\n      design.configData.canvasSize,\r\n      design.configData.canvasSize\r\n    );\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n","import { cloneDeep } from 'lodash';\r\nimport {\r\n  createColorLayerCanvas,\r\n  createGraphicLayerCanvas,\r\n  createOverlayLayerCanvas,\r\n  overlayCanvasObjectToTextureCanvas,\r\n} from '../index';\r\n\r\n//------------------------------------------- Overlay Change Functions\r\nexport const overlayChangeManager = ({\r\n  changeObject,\r\n  design,\r\n  setDesign,\r\n  texture,\r\n  textureCanvas,\r\n  graphicVisualCanvas,\r\n  canvasObject,\r\n  overlayCanvas,\r\n  overlayCanvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const { type, fileName } = changeObject;\r\n  const tempDesign = cloneDeep(design);\r\n  if (type === 'graphic-moved') {\r\n    const { partName, layerIndex, direction, distance } = changeObject;\r\n    const thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    if (direction === 'vert') {\r\n      thisLayer.y += distance;\r\n    } else if (direction === 'hor') {\r\n      thisLayer.x += distance;\r\n    } else if (direction === 'scale') {\r\n      thisLayer.scale *= distance;\r\n    } else if (direction === 'rotate') {\r\n      thisLayer.rotation += distance;\r\n    } else if (direction === 'reset') {\r\n      thisLayer.y = 0;\r\n      thisLayer.x = 0;\r\n      thisLayer.scale = 1;\r\n      thisLayer.rotation = 0;\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'color-changed') {\r\n    const { partName, layerIndex, newColor } = changeObject;\r\n    let thisLayer =\r\n      tempDesign.outlineData.overlays[partName].layers[layerIndex];\r\n    thisLayer.color = newColor;\r\n\r\n    setDesign(tempDesign);\r\n    updateOverlayLayer({\r\n      partName,\r\n      layerIndex,\r\n      layerObject: thisLayer,\r\n      overlayCanvasObject,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      canvasObject,\r\n      textureCanvas,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-added') {\r\n    const { partName, layerType } = changeObject;\r\n    // add layers to design if this is the first overlay layer added\r\n    if (design.outlineData.overlays[partName].layers.length === 0) {\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        tempDesign.outlineData.parts[currentPart].layers.push({\r\n          type: 'overlay',\r\n          source: partName,\r\n        });\r\n      }\r\n    }\r\n    if (layerType === 'Color') {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'color',\r\n        color: '#777777',\r\n      });\r\n    } else {\r\n      tempDesign.outlineData.overlays[partName].layers.push({\r\n        type: 'graphic',\r\n        link: fileName,\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        rotation: 0,\r\n      });\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    addLayerToOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerObject: tempDesign.outlineData.overlays[partName].layers.slice(\r\n        -1\r\n      )[0],\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-moved') {\r\n    const { partName, layerIndex, direction } = changeObject;\r\n    let array = tempDesign.outlineData.overlays[partName].layers;\r\n    let tempElement = array[layerIndex];\r\n    array[layerIndex] = array[layerIndex + direction];\r\n    array[layerIndex + direction] = tempElement;\r\n    tempDesign.outlineData.overlays[partName].layers = array;\r\n\r\n    setDesign(tempDesign);\r\n    moveLayerInOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      direction,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      baseColorCanvasObject,\r\n    });\r\n  } else if (type === 'layer-deleted') {\r\n    const { partName, layerIndex } = changeObject;\r\n    tempDesign.outlineData.overlays[partName].layers.splice(layerIndex, 1);\r\n    if (tempDesign.outlineData.overlays[partName].layers.length === 0) {\r\n      // remove layers from design if this is the last overlay layer deleted\r\n      const effectedParts = design.configData.overlayParts[partName];\r\n      for (let layer in effectedParts) {\r\n        const currentPart = effectedParts[layer];\r\n        for (\r\n          let i = 0;\r\n          i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n          i++\r\n        ) {\r\n          const layerIndex = i;\r\n          if (\r\n            tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n            'overlay'\r\n          ) {\r\n            if (\r\n              tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n              partName\r\n            ) {\r\n              tempDesign.outlineData.parts[currentPart].layers.splice(\r\n                layerIndex,\r\n                1\r\n              );\r\n              canvasObject[currentPart].layers.splice(layerIndex, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setDesign(tempDesign);\r\n    deleteLayerFromOverlayCanvasObject({\r\n      overlayCanvasObject,\r\n      partName,\r\n      layerIndex,\r\n      overlayCanvas,\r\n      texture,\r\n      graphicVisualCanvas,\r\n      design,\r\n      textureCanvas,\r\n      canvasObject,\r\n      tempDesign,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateOverlayLayer = async ({\r\n  partName,\r\n  layerIndex,\r\n  layerObject,\r\n  overlayCanvasObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  canvasObject,\r\n  textureCanvas,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  // update canvasObject layer\r\n  let layerCanvas;\r\n  if (layerObject.type === 'color') {\r\n    layerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  } else {\r\n    layerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n  }\r\n  overlayCanvasObject[partName].layers[layerIndex] = layerCanvas;\r\n\r\n  // redraw part on overlayCanvas\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  // update effected layers in canvas object\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst addLayerToOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerObject,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  if (layerObject.type === 'color') {\r\n    const newLayerCanvas = await createColorLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  } else if (layerObject.type === 'graphic') {\r\n    const newLayerCanvas = await createGraphicLayerCanvas({\r\n      design,\r\n      layer: layerObject,\r\n      partName,\r\n    });\r\n    overlayCanvasObject[partName].layers.push(newLayerCanvas);\r\n  }\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n  // update effected layers in canvas object\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type === 'overlay'\r\n      ) {\r\n        if (\r\n          tempDesign.outlineData.parts[currentPart].layers[i].source ===\r\n          partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: tempDesign.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst moveLayerInOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  direction,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  let array = overlayCanvasObject[partName].layers;\r\n  let tempElement = array[layerIndex];\r\n  array[layerIndex] = array[layerIndex + direction];\r\n  array[layerIndex + direction] = tempElement;\r\n  overlayCanvasObject[partName].layers = array;\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < design.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (design.outlineData.parts[currentPart].layers[i].type === 'overlay') {\r\n        if (\r\n          design.outlineData.parts[currentPart].layers[i].source === partName\r\n        ) {\r\n          const layerCanvas = await createOverlayLayerCanvas({\r\n            design,\r\n            layer: design.outlineData.parts[currentPart].layers[i],\r\n            partName: currentPart,\r\n            overlayCanvas,\r\n          });\r\n          canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n          // redraw effected parts in textureCanvas\r\n          redrawOverlayCanvasObjectPart({\r\n            textureCanvas,\r\n            canvasObjectPart: canvasObject[currentPart],\r\n            partName: currentPart,\r\n            design,\r\n            baseColorCanvasObject,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst deleteLayerFromOverlayCanvasObject = async ({\r\n  overlayCanvasObject,\r\n  partName,\r\n  layerIndex,\r\n  overlayCanvas,\r\n  texture,\r\n  graphicVisualCanvas,\r\n  design,\r\n  textureCanvas,\r\n  canvasObject,\r\n  tempDesign,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  overlayCanvasObject[partName].layers.splice(layerIndex, 1);\r\n  overlayCanvasObjectToTextureCanvas({\r\n    design,\r\n    overlayCanvasObject,\r\n    overlayCanvas,\r\n    partName,\r\n    graphicVisualCanvas,\r\n  });\r\n\r\n  const effectedParts = design.configData.overlayParts[partName];\r\n  for (let part in effectedParts) {\r\n    const currentPart = effectedParts[part];\r\n    for (\r\n      let i = 0;\r\n      i < tempDesign.outlineData.parts[currentPart].layers.length;\r\n      i++\r\n    ) {\r\n      const layerIndex = i;\r\n      if (\r\n        tempDesign.outlineData.parts[currentPart].layers[i].type ===\r\n          'overlay' &&\r\n        tempDesign.outlineData.parts[currentPart].layers[i].source === partName\r\n      ) {\r\n        const layerCanvas = await createOverlayLayerCanvas({\r\n          design,\r\n          layer: design.outlineData.parts[currentPart].layers[i],\r\n          partName: currentPart,\r\n          overlayCanvas,\r\n        });\r\n        canvasObject[currentPart].layers[layerIndex] = layerCanvas;\r\n      }\r\n    }\r\n    // redraw effected parts in textureCanvas\r\n    redrawOverlayCanvasObjectPart({\r\n      textureCanvas,\r\n      canvasObjectPart: canvasObject[currentPart],\r\n      partName: currentPart,\r\n      design,\r\n      baseColorCanvasObject,\r\n    });\r\n  }\r\n  texture.needsUpdate = true;\r\n};\r\n\r\nconst redrawOverlayCanvasObjectPart = ({\r\n  textureCanvas,\r\n  canvasObjectPart,\r\n  partName,\r\n  design,\r\n  baseColorCanvasObject,\r\n}) => {\r\n  const textureCanvasCTX = textureCanvas.getContext('2d');\r\n  const { x, y, width, height } = design.configData.partsObject[partName];\r\n  const { divider } = design.configData;\r\n  textureCanvasCTX.drawImage(\r\n    baseColorCanvasObject[partName],\r\n    x / divider,\r\n    y / divider,\r\n    width / divider,\r\n    height / divider\r\n  );\r\n  for (let layer in canvasObjectPart.layers) {\r\n    const layerCanvas = canvasObjectPart.layers[layer];\r\n    textureCanvasCTX.drawImage(\r\n      layerCanvas,\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n  }\r\n};\r\n","// turn canvasObject into a finalTexture\r\nexport const canvasObjectToTextureCanvas = ({\r\n  canvasObject,\r\n  baseColorCanvasObject,\r\n  size,\r\n  design,\r\n}) => {\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  const finalCanvasCTX = canvas.getContext('2d');\r\n\r\n  for (let property in canvasObject) {\r\n    const { x, y, width, height } = design.configData.partsObject[property];\r\n    const { divider } = design.configData;\r\n    finalCanvasCTX.drawImage(\r\n      baseColorCanvasObject[property],\r\n      x / divider,\r\n      y / divider,\r\n      width / divider,\r\n      height / divider\r\n    );\r\n    for (let layer in canvasObject[property].layers) {\r\n      const layerCanvas = canvasObject[property].layers[layer];\r\n      finalCanvasCTX.drawImage(\r\n        layerCanvas,\r\n        x / divider,\r\n        y / divider,\r\n        width / divider,\r\n        height / divider\r\n      );\r\n    }\r\n  }\r\n  return canvas;\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './DesignerContainer.css';\r\nimport Scene from '../../components/Scene/Scene.js';\r\nimport Interface from '../../components/Interface/Interface.js';\r\nimport {\r\n  designObjectToCanvasObject,\r\n  updateGraphicVisualCanvas,\r\n  partChangeManager,\r\n  overlayCanvasObjectToTextureCanvas,\r\n  overlayChangeManager,\r\n} from '../../canvasFunctions';\r\nimport { canvasObjectToTextureCanvas } from '../../canvasFunctions';\r\n\r\nfunction DesignerContainer({\r\n  designSpec,\r\n  graphicVisualCanvas,\r\n  innerOverlayCanvas,\r\n  outerOverlayCanvas,\r\n  texture,\r\n  textureCanvas,\r\n}) {\r\n  const [design, setDesign] = useState(designSpec);\r\n  const [camera, setCamera] = useState(null);\r\n  const [initialLoaded, setInitialLoaded] = useState(false);\r\n  const canvasObjectRef = useRef();\r\n  const overlaysCanvasObjectRef = useRef();\r\n  const baseColorCanvasObjectRef = useRef();\r\n\r\n  const handleUpdateGraphicVisualCanvas = (partName) => {\r\n    if (partName === 'outerOverlay' || partName === 'innerOverlay') {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      updateGraphicVisualCanvas({\r\n        design,\r\n        graphicVisualCanvas,\r\n        partName,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePartChangeManager = (changeObject) => {\r\n    const { partName } = changeObject;\r\n    if (partName === 'outerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: outerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else if (partName === 'innerOverlay') {\r\n      overlayChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        overlayCanvas: innerOverlayCanvas,\r\n        overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    } else {\r\n      partChangeManager({\r\n        changeObject,\r\n        design,\r\n        setDesign,\r\n        texture,\r\n        textureCanvas,\r\n        graphicVisualCanvas,\r\n        canvasObject: canvasObjectRef.current,\r\n        baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateBaseColor = async (tempDesign) => {\r\n    // baseColor to baseColor Canvas Object\r\n    baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n      design: tempDesign,\r\n      type: 'baseColorCanvasObject',\r\n    });\r\n    // Canvas Object to Canvas\r\n    const newCanvas = canvasObjectToTextureCanvas({\r\n      canvasObject: canvasObjectRef.current,\r\n      baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n      size: textureCanvas.height,\r\n      design,\r\n    });\r\n    // Canvas to Texture Canvas\r\n    textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n    texture.needsUpdate = true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasObjectRef.current) {\r\n      const buildTexture = async () => {\r\n        // Overlay Canvas Object Created\r\n        overlaysCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'overlaysCanvasObject',\r\n        });\r\n        // Outer Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: outerOverlayCanvas,\r\n          partName: 'outerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Inner Overlay Canvas Object to Texture Canvas\r\n        overlayCanvasObjectToTextureCanvas({\r\n          design,\r\n          overlayCanvasObject: overlaysCanvasObjectRef.current,\r\n          overlayCanvas: innerOverlayCanvas,\r\n          partName: 'innerOverlay',\r\n          graphicVisualCanvas,\r\n        });\r\n        // Design Object to Canvas Object\r\n        canvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'partsCanvasObject',\r\n          overlays: [outerOverlayCanvas, innerOverlayCanvas],\r\n        });\r\n        // baseColor to baseColor Canvas Object\r\n        baseColorCanvasObjectRef.current = await designObjectToCanvasObject({\r\n          design,\r\n          type: 'baseColorCanvasObject',\r\n        });\r\n        // Canvas Object to Canvas\r\n        const newCanvas = canvasObjectToTextureCanvas({\r\n          canvasObject: canvasObjectRef.current,\r\n          baseColorCanvasObject: baseColorCanvasObjectRef.current,\r\n          size: textureCanvas.height,\r\n          design,\r\n        });\r\n        // Canvas to Texture Canvas\r\n        textureCanvas.getContext('2d').drawImage(newCanvas, 0, 0);\r\n        texture.needsUpdate = true;\r\n        setInitialLoaded(true);\r\n      };\r\n      buildTexture();\r\n    }\r\n  });\r\n\r\n  if (design) {\r\n    return (\r\n      <div className='designer-container'>\r\n        <Scene\r\n          design={design}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n          initialLoaded={initialLoaded}\r\n          camera={camera}\r\n          setCamera={setCamera}\r\n        />\r\n        <Interface\r\n          design={design}\r\n          setDesign={setDesign}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          handleUpdateGraphicVisualCanvas={handleUpdateGraphicVisualCanvas}\r\n          handlePartChangeManager={handlePartChangeManager}\r\n          setInitialLoaded={setInitialLoaded}\r\n          camera={camera}\r\n          handleUpdateBaseColor={handleUpdateBaseColor}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>hi</div>;\r\n  }\r\n}\r\n\r\nexport default DesignerContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Designer.css';\r\nimport DesignerContainer from '../../components/DesignerContainer/DesignerContainer';\r\nimport {\r\n  createTexture,\r\n  createCanvas,\r\n  createGraphicVisualCanvas,\r\n} from '../../canvasFunctions';\r\nimport { simpleFetch } from '../../helpers/fetchHelpers';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Designer() {\r\n  const [designSpec, setDesignSpec] = useState(null);\r\n  const [graphicVisualCanvas, setGraphicVisualCanvas] = useState(null);\r\n  const [innerOverlayCanvas, setInnerOverlayCanvas] = useState(null);\r\n  const [outerOverlayCanvas, setOuterOverlayCanvas] = useState(null);\r\n  const [textureCanvas, setTextureCanvas] = useState(null);\r\n  const [texture, setTexture] = useState(null);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      simpleFetch(`/api/outlines/${id}`, 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    } else {\r\n      simpleFetch('/api/outlines/newdesign', 'GET')\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setDesignSpec(data);\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (designSpec) {\r\n      setGraphicVisualCanvas(createGraphicVisualCanvas({ design: designSpec }));\r\n      setInnerOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setOuterOverlayCanvas(createCanvas({ design: designSpec }));\r\n      setTextureCanvas(createCanvas({ design: designSpec }));\r\n    }\r\n  }, [designSpec]);\r\n\r\n  useEffect(() => {\r\n    if (textureCanvas) {\r\n      setTexture(createTexture(textureCanvas));\r\n    }\r\n  }, [textureCanvas]);\r\n\r\n  const initialized =\r\n    designSpec &&\r\n    graphicVisualCanvas &&\r\n    innerOverlayCanvas &&\r\n    outerOverlayCanvas &&\r\n    textureCanvas &&\r\n    texture;\r\n\r\n  if (initialized) {\r\n    return (\r\n      <div className='designer-root-container'>\r\n        <DesignerContainer\r\n          designSpec={designSpec}\r\n          graphicVisualCanvas={graphicVisualCanvas}\r\n          innerOverlayCanvas={innerOverlayCanvas}\r\n          outerOverlayCanvas={outerOverlayCanvas}\r\n          texture={texture}\r\n          textureCanvas={textureCanvas}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Designer;\r\n","import React from 'react';\r\nimport './Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/google`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/google`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login-container'>\r\n      <div className='login-google-button'>\r\n        <button onClick={() => loginWithGoogle()}>Login With Google</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport './Profile.css';\r\nimport UserProvider from '../../context/UserProvider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Profile() {\r\n  const userData = useContext(UserProvider.context);\r\n\r\n  const handleLogout = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      window.open(`http://solecomposer.com/auth/logout`, '_self');\r\n    } else {\r\n      window.open(`http://localhost:8000/auth/logout`, '_self');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='profile-container'>\r\n      <p className='basic-paragraph'>{userData.firstName}</p>\r\n      <p className='basic-paragraph'>{userData.email}</p>\r\n      <div className='basic-button'>\r\n        <button onClick={() => handleLogout()}>Log Out</button>\r\n      </div>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Back</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './NoPage.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <div className='no-page-container'>\r\n      <p className='basic-paragraph'>404 - PAGE NOT FOUND</p>\r\n      <Link to='/'>\r\n        <div className='basic-button'>\r\n          <button>Home</button>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserProvider from './context/UserProvider';\r\nimport Landing from './pages/Landing/Landing';\r\nimport Designer from './pages/Designer/Designer';\r\nimport Login from './components/Login/Login';\r\nimport Profile from './components/Profile/Profile';\r\n\r\nimport NoPage from './components/NoPage/NoPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <Router>\r\n        <UserProvider>\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/profile' component={Profile} />\r\n            <Route exact path='/designer' component={Designer} />\r\n            <Route exact path='/designer/:id' component={Designer} />\r\n            <Route path='*' component={NoPage} />\r\n          </Switch>\r\n        </UserProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}